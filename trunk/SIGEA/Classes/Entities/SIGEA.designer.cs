#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGEA.Classes.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SIGEA")]
	public partial class SIGEADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertValuador(Valuador instance);
    partial void UpdateValuador(Valuador instance);
    partial void DeleteValuador(Valuador instance);
    partial void InsertArchivo(Archivo instance);
    partial void UpdateArchivo(Archivo instance);
    partial void DeleteArchivo(Archivo instance);
    partial void InsertAsentamiento(Asentamiento instance);
    partial void UpdateAsentamiento(Asentamiento instance);
    partial void DeleteAsentamiento(Asentamiento instance);
    partial void InsertAsignacionAvaluo(AsignacionAvaluo instance);
    partial void UpdateAsignacionAvaluo(AsignacionAvaluo instance);
    partial void DeleteAsignacionAvaluo(AsignacionAvaluo instance);
    partial void InsertAsignacionFolioSHF(AsignacionFolioSHF instance);
    partial void UpdateAsignacionFolioSHF(AsignacionFolioSHF instance);
    partial void DeleteAsignacionFolioSHF(AsignacionFolioSHF instance);
    partial void InsertAvaluoInmobiliario(AvaluoInmobiliario instance);
    partial void UpdateAvaluoInmobiliario(AvaluoInmobiliario instance);
    partial void DeleteAvaluoInmobiliario(AvaluoInmobiliario instance);
    partial void InsertAvaluoReferencia(AvaluoReferencia instance);
    partial void UpdateAvaluoReferencia(AvaluoReferencia instance);
    partial void DeleteAvaluoReferencia(AvaluoReferencia instance);
    partial void InsertBanco(Banco instance);
    partial void UpdateBanco(Banco instance);
    partial void DeleteBanco(Banco instance);
    partial void InsertCarpeta(Carpeta instance);
    partial void UpdateCarpeta(Carpeta instance);
    partial void DeleteCarpeta(Carpeta instance);
    partial void InsertCarrera(Carrera instance);
    partial void UpdateCarrera(Carrera instance);
    partial void DeleteCarrera(Carrera instance);
    partial void InsertClaseInmueble(ClaseInmueble instance);
    partial void UpdateClaseInmueble(ClaseInmueble instance);
    partial void DeleteClaseInmueble(ClaseInmueble instance);
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertCodigoPostal(CodigoPostal instance);
    partial void UpdateCodigoPostal(CodigoPostal instance);
    partial void DeleteCodigoPostal(CodigoPostal instance);
    partial void InsertColegioValuadores(ColegioValuadores instance);
    partial void UpdateColegioValuadores(ColegioValuadores instance);
    partial void DeleteColegioValuadores(ColegioValuadores instance);
    partial void InsertConclusionAvaluo(ConclusionAvaluo instance);
    partial void UpdateConclusionAvaluo(ConclusionAvaluo instance);
    partial void DeleteConclusionAvaluo(ConclusionAvaluo instance);
    partial void InsertDatoBancario(DatoBancario instance);
    partial void UpdateDatoBancario(DatoBancario instance);
    partial void DeleteDatoBancario(DatoBancario instance);
    partial void InsertDatoContacto(DatoContacto instance);
    partial void UpdateDatoContacto(DatoContacto instance);
    partial void DeleteDatoContacto(DatoContacto instance);
    partial void InsertDatoCredito(DatoCredito instance);
    partial void UpdateDatoCredito(DatoCredito instance);
    partial void DeleteDatoCredito(DatoCredito instance);
    partial void InsertDatoFacturacion(DatoFacturacion instance);
    partial void UpdateDatoFacturacion(DatoFacturacion instance);
    partial void DeleteDatoFacturacion(DatoFacturacion instance);
    partial void InsertDatoFacturacionValuador(DatoFacturacionValuador instance);
    partial void UpdateDatoFacturacionValuador(DatoFacturacionValuador instance);
    partial void DeleteDatoFacturacionValuador(DatoFacturacionValuador instance);
    partial void InsertDatoPaqueteria(DatoPaqueteria instance);
    partial void UpdateDatoPaqueteria(DatoPaqueteria instance);
    partial void DeleteDatoPaqueteria(DatoPaqueteria instance);
    partial void InsertDeclaraciones(Declaraciones instance);
    partial void UpdateDeclaraciones(Declaraciones instance);
    partial void DeleteDeclaraciones(Declaraciones instance);
    partial void InsertDireccion(Direccion instance);
    partial void UpdateDireccion(Direccion instance);
    partial void DeleteDireccion(Direccion instance);
    partial void InsertDireccionInmueble(DireccionInmueble instance);
    partial void UpdateDireccionInmueble(DireccionInmueble instance);
    partial void DeleteDireccionInmueble(DireccionInmueble instance);
    partial void InsertDocumentoValuador(DocumentoValuador instance);
    partial void UpdateDocumentoValuador(DocumentoValuador instance);
    partial void DeleteDocumentoValuador(DocumentoValuador instance);
    partial void InsertEntidadFinanciamiento(EntidadFinanciamiento instance);
    partial void UpdateEntidadFinanciamiento(EntidadFinanciamiento instance);
    partial void DeleteEntidadFinanciamiento(EntidadFinanciamiento instance);
    partial void InsertEntornoInmueble(EntornoInmueble instance);
    partial void UpdateEntornoInmueble(EntornoInmueble instance);
    partial void DeleteEntornoInmueble(EntornoInmueble instance);
    partial void InsertEquipamientoInmueble(EquipamientoInmueble instance);
    partial void UpdateEquipamientoInmueble(EquipamientoInmueble instance);
    partial void DeleteEquipamientoInmueble(EquipamientoInmueble instance);
    partial void InsertEscriturasInmueble(EscriturasInmueble instance);
    partial void UpdateEscriturasInmueble(EscriturasInmueble instance);
    partial void DeleteEscriturasInmueble(EscriturasInmueble instance);
    partial void InsertEstado(Estado instance);
    partial void UpdateEstado(Estado instance);
    partial void DeleteEstado(Estado instance);
    partial void InsertEstadosColindantes(EstadosColindantes instance);
    partial void UpdateEstadosColindantes(EstadosColindantes instance);
    partial void DeleteEstadosColindantes(EstadosColindantes instance);
    partial void InsertFormacionProfesional(FormacionProfesional instance);
    partial void UpdateFormacionProfesional(FormacionProfesional instance);
    partial void DeleteFormacionProfesional(FormacionProfesional instance);
    partial void InsertFormacionProfesionalValuador(FormacionProfesionalValuador instance);
    partial void UpdateFormacionProfesionalValuador(FormacionProfesionalValuador instance);
    partial void DeleteFormacionProfesionalValuador(FormacionProfesionalValuador instance);
    partial void InsertFormacionValuador(FormacionValuador instance);
    partial void UpdateFormacionValuador(FormacionValuador instance);
    partial void DeleteFormacionValuador(FormacionValuador instance);
    partial void InsertGeolocalizacionInmueble(GeolocalizacionInmueble instance);
    partial void UpdateGeolocalizacionInmueble(GeolocalizacionInmueble instance);
    partial void DeleteGeolocalizacionInmueble(GeolocalizacionInmueble instance);
    partial void InsertHistorialRevision(HistorialRevision instance);
    partial void UpdateHistorialRevision(HistorialRevision instance);
    partial void DeleteHistorialRevision(HistorialRevision instance);
    partial void InsertInfraestructuraInmueble(InfraestructuraInmueble instance);
    partial void UpdateInfraestructuraInmueble(InfraestructuraInmueble instance);
    partial void DeleteInfraestructuraInmueble(InfraestructuraInmueble instance);
    partial void InsertInmueble(Inmueble instance);
    partial void UpdateInmueble(Inmueble instance);
    partial void DeleteInmueble(Inmueble instance);
    partial void InsertMunicipio(Municipio instance);
    partial void UpdateMunicipio(Municipio instance);
    partial void DeleteMunicipio(Municipio instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void InsertPropietario(Propietario instance);
    partial void UpdatePropietario(Propietario instance);
    partial void DeletePropietario(Propietario instance);
    partial void InsertPropositoAvaluo(PropositoAvaluo instance);
    partial void UpdatePropositoAvaluo(PropositoAvaluo instance);
    partial void DeletePropositoAvaluo(PropositoAvaluo instance);
    partial void InsertRechazoAvaluo(RechazoAvaluo instance);
    partial void UpdateRechazoAvaluo(RechazoAvaluo instance);
    partial void DeleteRechazoAvaluo(RechazoAvaluo instance);
    partial void InsertRegimenPropiedad(RegimenPropiedad instance);
    partial void UpdateRegimenPropiedad(RegimenPropiedad instance);
    partial void DeleteRegimenPropiedad(RegimenPropiedad instance);
    partial void InsertRegistroSHF(RegistroSHF instance);
    partial void UpdateRegistroSHF(RegistroSHF instance);
    partial void DeleteRegistroSHF(RegistroSHF instance);
    partial void InsertRevisionAvaluo(RevisionAvaluo instance);
    partial void UpdateRevisionAvaluo(RevisionAvaluo instance);
    partial void DeleteRevisionAvaluo(RevisionAvaluo instance);
    partial void InsertRolSistema(RolSistema instance);
    partial void UpdateRolSistema(RolSistema instance);
    partial void DeleteRolSistema(RolSistema instance);
    partial void InsertRolUsuario(RolUsuario instance);
    partial void UpdateRolUsuario(RolUsuario instance);
    partial void DeleteRolUsuario(RolUsuario instance);
    partial void InsertServiciosInmueble(ServiciosInmueble instance);
    partial void UpdateServiciosInmueble(ServiciosInmueble instance);
    partial void DeleteServiciosInmueble(ServiciosInmueble instance);
    partial void InsertSolicitante(Solicitante instance);
    partial void UpdateSolicitante(Solicitante instance);
    partial void DeleteSolicitante(Solicitante instance);
    partial void InsertStatusAvaluo(StatusAvaluo instance);
    partial void UpdateStatusAvaluo(StatusAvaluo instance);
    partial void DeleteStatusAvaluo(StatusAvaluo instance);
    partial void InsertSuperficiesInmueble(SuperficiesInmueble instance);
    partial void UpdateSuperficiesInmueble(SuperficiesInmueble instance);
    partial void DeleteSuperficiesInmueble(SuperficiesInmueble instance);
    partial void InsertTipoAsentamiento(TipoAsentamiento instance);
    partial void UpdateTipoAsentamiento(TipoAsentamiento instance);
    partial void DeleteTipoAsentamiento(TipoAsentamiento instance);
    partial void InsertTipoAvaluoInmobiliario(TipoAvaluoInmobiliario instance);
    partial void UpdateTipoAvaluoInmobiliario(TipoAvaluoInmobiliario instance);
    partial void DeleteTipoAvaluoInmobiliario(TipoAvaluoInmobiliario instance);
    partial void InsertTipoCalidadProyecto(TipoCalidadProyecto instance);
    partial void UpdateTipoCalidadProyecto(TipoCalidadProyecto instance);
    partial void DeleteTipoCalidadProyecto(TipoCalidadProyecto instance);
    partial void InsertTipoCaracteristicaPanoramica(TipoCaracteristicaPanoramica instance);
    partial void UpdateTipoCaracteristicaPanoramica(TipoCaracteristicaPanoramica instance);
    partial void DeleteTipoCaracteristicaPanoramica(TipoCaracteristicaPanoramica instance);
    partial void InsertTipoClasificacionZona(TipoClasificacionZona instance);
    partial void UpdateTipoClasificacionZona(TipoClasificacionZona instance);
    partial void DeleteTipoClasificacionZona(TipoClasificacionZona instance);
    partial void InsertTipoColindancia(TipoColindancia instance);
    partial void UpdateTipoColindancia(TipoColindancia instance);
    partial void DeleteTipoColindancia(TipoColindancia instance);
    partial void InsertTipoComparable(TipoComparable instance);
    partial void UpdateTipoComparable(TipoComparable instance);
    partial void DeleteTipoComparable(TipoComparable instance);
    partial void InsertTipoConstruccionPredominante(TipoConstruccionPredominante instance);
    partial void UpdateTipoConstruccionPredominante(TipoConstruccionPredominante instance);
    partial void DeleteTipoConstruccionPredominante(TipoConstruccionPredominante instance);
    partial void InsertTipoCredito(TipoCredito instance);
    partial void UpdateTipoCredito(TipoCredito instance);
    partial void DeleteTipoCredito(TipoCredito instance);
    partial void InsertTipoCreditoInterno(TipoCreditoInterno instance);
    partial void UpdateTipoCreditoInterno(TipoCreditoInterno instance);
    partial void DeleteTipoCreditoInterno(TipoCreditoInterno instance);
    partial void InsertTipoDensidad(TipoDensidad instance);
    partial void UpdateTipoDensidad(TipoDensidad instance);
    partial void DeleteTipoDensidad(TipoDensidad instance);
    partial void InsertTipoDocumentoValuador(TipoDocumentoValuador instance);
    partial void UpdateTipoDocumentoValuador(TipoDocumentoValuador instance);
    partial void DeleteTipoDocumentoValuador(TipoDocumentoValuador instance);
    partial void InsertTipoEstadoConservacion(TipoEstadoConservacion instance);
    partial void UpdateTipoEstadoConservacion(TipoEstadoConservacion instance);
    partial void DeleteTipoEstadoConservacion(TipoEstadoConservacion instance);
    partial void InsertTipoFormacionProfesional(TipoFormacionProfesional instance);
    partial void UpdateTipoFormacionProfesional(TipoFormacionProfesional instance);
    partial void DeleteTipoFormacionProfesional(TipoFormacionProfesional instance);
    partial void InsertTipoFuente(TipoFuente instance);
    partial void UpdateTipoFuente(TipoFuente instance);
    partial void DeleteTipoFuente(TipoFuente instance);
    partial void InsertTipoImportanciaVialidad(TipoImportanciaVialidad instance);
    partial void UpdateTipoImportanciaVialidad(TipoImportanciaVialidad instance);
    partial void DeleteTipoImportanciaVialidad(TipoImportanciaVialidad instance);
    partial void InsertTipoInmueble(TipoInmueble instance);
    partial void UpdateTipoInmueble(TipoInmueble instance);
    partial void DeleteTipoInmueble(TipoInmueble instance);
    partial void InsertTipoMaterial(TipoMaterial instance);
    partial void UpdateTipoMaterial(TipoMaterial instance);
    partial void DeleteTipoMaterial(TipoMaterial instance);
    partial void InsertTipoNivelSocioeconomico(TipoNivelSocioeconomico instance);
    partial void UpdateTipoNivelSocioeconomico(TipoNivelSocioeconomico instance);
    partial void DeleteTipoNivelSocioeconomico(TipoNivelSocioeconomico instance);
    partial void InsertTipoOrientacion(TipoOrientacion instance);
    partial void UpdateTipoOrientacion(TipoOrientacion instance);
    partial void DeleteTipoOrientacion(TipoOrientacion instance);
    partial void InsertTipoProximidadUrbana(TipoProximidadUrbana instance);
    partial void UpdateTipoProximidadUrbana(TipoProximidadUrbana instance);
    partial void DeleteTipoProximidadUrbana(TipoProximidadUrbana instance);
    partial void InsertTipoServicio(TipoServicio instance);
    partial void UpdateTipoServicio(TipoServicio instance);
    partial void DeleteTipoServicio(TipoServicio instance);
    partial void InsertTipoServidumbre(TipoServidumbre instance);
    partial void UpdateTipoServidumbre(TipoServidumbre instance);
    partial void DeleteTipoServidumbre(TipoServidumbre instance);
    partial void InsertTipoTopografia(TipoTopografia instance);
    partial void UpdateTipoTopografia(TipoTopografia instance);
    partial void DeleteTipoTopografia(TipoTopografia instance);
    partial void InsertTipoUbicacion(TipoUbicacion instance);
    partial void UpdateTipoUbicacion(TipoUbicacion instance);
    partial void DeleteTipoUbicacion(TipoUbicacion instance);
    partial void InsertTipoUnidad(TipoUnidad instance);
    partial void UpdateTipoUnidad(TipoUnidad instance);
    partial void DeleteTipoUnidad(TipoUnidad instance);
    partial void InsertTipoUsoConstruccion(TipoUsoConstruccion instance);
    partial void UpdateTipoUsoConstruccion(TipoUsoConstruccion instance);
    partial void DeleteTipoUsoConstruccion(TipoUsoConstruccion instance);
    partial void InsertTipoUsoSuelo(TipoUsoSuelo instance);
    partial void UpdateTipoUsoSuelo(TipoUsoSuelo instance);
    partial void DeleteTipoUsoSuelo(TipoUsoSuelo instance);
    partial void InsertTipoValuador(TipoValuador instance);
    partial void UpdateTipoValuador(TipoValuador instance);
    partial void DeleteTipoValuador(TipoValuador instance);
    partial void InsertUbicacionCallesInmueble(UbicacionCallesInmueble instance);
    partial void UpdateUbicacionCallesInmueble(UbicacionCallesInmueble instance);
    partial void DeleteUbicacionCallesInmueble(UbicacionCallesInmueble instance);
    partial void InsertUbicacionInmueble(UbicacionInmueble instance);
    partial void UpdateUbicacionInmueble(UbicacionInmueble instance);
    partial void DeleteUbicacionInmueble(UbicacionInmueble instance);
    partial void InsertUniversidad(Universidad instance);
    partial void UpdateUniversidad(Universidad instance);
    partial void DeleteUniversidad(Universidad instance);
    partial void InsertUsoActualArea(UsoActualArea instance);
    partial void UpdateUsoActualArea(UsoActualArea instance);
    partial void DeleteUsoActualArea(UsoActualArea instance);
    partial void InsertUsoActualInmueble(UsoActualInmueble instance);
    partial void UpdateUsoActualInmueble(UsoActualInmueble instance);
    partial void DeleteUsoActualInmueble(UsoActualInmueble instance);
    partial void InsertUsoActualRecamara(UsoActualRecamara instance);
    partial void UpdateUsoActualRecamara(UsoActualRecamara instance);
    partial void DeleteUsoActualRecamara(UsoActualRecamara instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertUsuarioCliente(UsuarioCliente instance);
    partial void UpdateUsuarioCliente(UsuarioCliente instance);
    partial void DeleteUsuarioCliente(UsuarioCliente instance);
    partial void InsertUsuarioValuador(UsuarioValuador instance);
    partial void UpdateUsuarioValuador(UsuarioValuador instance);
    partial void DeleteUsuarioValuador(UsuarioValuador instance);
    partial void InsertValorMaterial(ValorMaterial instance);
    partial void UpdateValorMaterial(ValorMaterial instance);
    partial void DeleteValorMaterial(ValorMaterial instance);
    partial void InsertValorServicio(ValorServicio instance);
    partial void UpdateValorServicio(ValorServicio instance);
    partial void DeleteValorServicio(ValorServicio instance);
    partial void InsertViasAcceso(ViasAcceso instance);
    partial void UpdateViasAcceso(ViasAcceso instance);
    partial void DeleteViasAcceso(ViasAcceso instance);
    partial void InsertClaseComparable(ClaseComparable instance);
    partial void UpdateClaseComparable(ClaseComparable instance);
    partial void DeleteClaseComparable(ClaseComparable instance);
    partial void InsertCalidadProyecto(CalidadProyecto instance);
    partial void UpdateCalidadProyecto(CalidadProyecto instance);
    partial void DeleteCalidadProyecto(CalidadProyecto instance);
    partial void InsertComparableInmobiliario(ComparableInmobiliario instance);
    partial void UpdateComparableInmobiliario(ComparableInmobiliario instance);
    partial void DeleteComparableInmobiliario(ComparableInmobiliario instance);
    partial void InsertTipoComparable1(TipoComparable1 instance);
    partial void UpdateTipoComparable1(TipoComparable1 instance);
    partial void DeleteTipoComparable1(TipoComparable1 instance);
    partial void InsertUsoSuelo(UsoSuelo instance);
    partial void UpdateUsoSuelo(UsoSuelo instance);
    partial void DeleteUsoSuelo(UsoSuelo instance);
    partial void InsertTipoAcabado(TipoAcabado instance);
    partial void UpdateTipoAcabado(TipoAcabado instance);
    partial void DeleteTipoAcabado(TipoAcabado instance);
    partial void InsertTipoConstruccion(TipoConstruccion instance);
    partial void UpdateTipoConstruccion(TipoConstruccion instance);
    partial void DeleteTipoConstruccion(TipoConstruccion instance);
    partial void InsertSuperficiesCondominio(SuperficiesCondominio instance);
    partial void UpdateSuperficiesCondominio(SuperficiesCondominio instance);
    partial void DeleteSuperficiesCondominio(SuperficiesCondominio instance);
    partial void InsertAreaComun(AreaComun instance);
    partial void UpdateAreaComun(AreaComun instance);
    partial void DeleteAreaComun(AreaComun instance);
    partial void InsertInstalacionesTipoConstruccion(InstalacionesTipoConstruccion instance);
    partial void UpdateInstalacionesTipoConstruccion(InstalacionesTipoConstruccion instance);
    partial void DeleteInstalacionesTipoConstruccion(InstalacionesTipoConstruccion instance);
    partial void InsertInstalacionConstruccion(InstalacionConstruccion instance);
    partial void UpdateInstalacionConstruccion(InstalacionConstruccion instance);
    partial void DeleteInstalacionConstruccion(InstalacionConstruccion instance);
    partial void InsertEstructurasTipoConstruccion(EstructurasTipoConstruccion instance);
    partial void UpdateEstructurasTipoConstruccion(EstructurasTipoConstruccion instance);
    partial void DeleteEstructurasTipoConstruccion(EstructurasTipoConstruccion instance);
    partial void InsertAcabadoTipoConstruccion(AcabadoTipoConstruccion instance);
    partial void UpdateAcabadoTipoConstruccion(AcabadoTipoConstruccion instance);
    partial void DeleteAcabadoTipoConstruccion(AcabadoTipoConstruccion instance);
    partial void InsertConstruccionInmueble(ConstruccionInmueble instance);
    partial void UpdateConstruccionInmueble(ConstruccionInmueble instance);
    partial void DeleteConstruccionInmueble(ConstruccionInmueble instance);
    partial void InsertDatoCondominio(DatoCondominio instance);
    partial void UpdateDatoCondominio(DatoCondominio instance);
    partial void DeleteDatoCondominio(DatoCondominio instance);
    #endregion
		
		public SIGEADataContext() : 
				base(global::SIGEA.Classes.Properties.Settings.Default.SIGEAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SIGEADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Valuador> Valuador
		{
			get
			{
				return this.GetTable<Valuador>();
			}
		}
		
		public System.Data.Linq.Table<Archivo> Archivo
		{
			get
			{
				return this.GetTable<Archivo>();
			}
		}
		
		public System.Data.Linq.Table<Asentamiento> Asentamiento
		{
			get
			{
				return this.GetTable<Asentamiento>();
			}
		}
		
		public System.Data.Linq.Table<AsignacionAvaluo> AsignacionAvaluo
		{
			get
			{
				return this.GetTable<AsignacionAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<AsignacionFolioSHF> AsignacionFolioSHF
		{
			get
			{
				return this.GetTable<AsignacionFolioSHF>();
			}
		}
		
		public System.Data.Linq.Table<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this.GetTable<AvaluoInmobiliario>();
			}
		}
		
		public System.Data.Linq.Table<AvaluoReferencia> AvaluoReferencia
		{
			get
			{
				return this.GetTable<AvaluoReferencia>();
			}
		}
		
		public System.Data.Linq.Table<Banco> Banco
		{
			get
			{
				return this.GetTable<Banco>();
			}
		}
		
		public System.Data.Linq.Table<Carpeta> Carpeta
		{
			get
			{
				return this.GetTable<Carpeta>();
			}
		}
		
		public System.Data.Linq.Table<Carrera> Carrera
		{
			get
			{
				return this.GetTable<Carrera>();
			}
		}
		
		public System.Data.Linq.Table<ClaseInmueble> ClaseInmueble
		{
			get
			{
				return this.GetTable<ClaseInmueble>();
			}
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<CodigoPostal> CodigoPostal
		{
			get
			{
				return this.GetTable<CodigoPostal>();
			}
		}
		
		public System.Data.Linq.Table<ColegioValuadores> ColegioValuadores
		{
			get
			{
				return this.GetTable<ColegioValuadores>();
			}
		}
		
		public System.Data.Linq.Table<ConclusionAvaluo> ConclusionAvaluo
		{
			get
			{
				return this.GetTable<ConclusionAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<Consulta> Consulta
		{
			get
			{
				return this.GetTable<Consulta>();
			}
		}
		
		public System.Data.Linq.Table<DatoAcabados> DatoAcabados
		{
			get
			{
				return this.GetTable<DatoAcabados>();
			}
		}
		
		public System.Data.Linq.Table<DatoBancario> DatoBancario
		{
			get
			{
				return this.GetTable<DatoBancario>();
			}
		}
		
		public System.Data.Linq.Table<DatoContacto> DatoContacto
		{
			get
			{
				return this.GetTable<DatoContacto>();
			}
		}
		
		public System.Data.Linq.Table<DatoCredito> DatoCredito
		{
			get
			{
				return this.GetTable<DatoCredito>();
			}
		}
		
		public System.Data.Linq.Table<DatoFacturacion> DatoFacturacion
		{
			get
			{
				return this.GetTable<DatoFacturacion>();
			}
		}
		
		public System.Data.Linq.Table<DatoFacturacionValuador> DatoFacturacionValuador
		{
			get
			{
				return this.GetTable<DatoFacturacionValuador>();
			}
		}
		
		public System.Data.Linq.Table<DatoPaqueteria> DatoPaqueteria
		{
			get
			{
				return this.GetTable<DatoPaqueteria>();
			}
		}
		
		public System.Data.Linq.Table<Declaraciones> Declaraciones
		{
			get
			{
				return this.GetTable<Declaraciones>();
			}
		}
		
		public System.Data.Linq.Table<Direccion> Direccion
		{
			get
			{
				return this.GetTable<Direccion>();
			}
		}
		
		public System.Data.Linq.Table<DireccionInmueble> DireccionInmueble
		{
			get
			{
				return this.GetTable<DireccionInmueble>();
			}
		}
		
		public System.Data.Linq.Table<DocumentoValuador> DocumentoValuador
		{
			get
			{
				return this.GetTable<DocumentoValuador>();
			}
		}
		
		public System.Data.Linq.Table<EntidadFinanciamiento> EntidadFinanciamiento
		{
			get
			{
				return this.GetTable<EntidadFinanciamiento>();
			}
		}
		
		public System.Data.Linq.Table<EntornoInmueble> EntornoInmueble
		{
			get
			{
				return this.GetTable<EntornoInmueble>();
			}
		}
		
		public System.Data.Linq.Table<EquipamientoInmueble> EquipamientoInmueble
		{
			get
			{
				return this.GetTable<EquipamientoInmueble>();
			}
		}
		
		public System.Data.Linq.Table<EscriturasInmueble> EscriturasInmueble
		{
			get
			{
				return this.GetTable<EscriturasInmueble>();
			}
		}
		
		public System.Data.Linq.Table<Estado> Estado
		{
			get
			{
				return this.GetTable<Estado>();
			}
		}
		
		public System.Data.Linq.Table<EstadosColindantes> EstadosColindantes
		{
			get
			{
				return this.GetTable<EstadosColindantes>();
			}
		}
		
		public System.Data.Linq.Table<FormacionProfesional> FormacionProfesional
		{
			get
			{
				return this.GetTable<FormacionProfesional>();
			}
		}
		
		public System.Data.Linq.Table<FormacionProfesionalValuador> FormacionProfesionalValuador
		{
			get
			{
				return this.GetTable<FormacionProfesionalValuador>();
			}
		}
		
		public System.Data.Linq.Table<FormacionValuador> FormacionValuador
		{
			get
			{
				return this.GetTable<FormacionValuador>();
			}
		}
		
		public System.Data.Linq.Table<GeolocalizacionInmueble> GeolocalizacionInmueble
		{
			get
			{
				return this.GetTable<GeolocalizacionInmueble>();
			}
		}
		
		public System.Data.Linq.Table<HistorialRevision> HistorialRevision
		{
			get
			{
				return this.GetTable<HistorialRevision>();
			}
		}
		
		public System.Data.Linq.Table<InfraestructuraInmueble> InfraestructuraInmueble
		{
			get
			{
				return this.GetTable<InfraestructuraInmueble>();
			}
		}
		
		public System.Data.Linq.Table<Inmueble> Inmueble
		{
			get
			{
				return this.GetTable<Inmueble>();
			}
		}
		
		public System.Data.Linq.Table<Municipio> Municipio
		{
			get
			{
				return this.GetTable<Municipio>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personal
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<Propietario> Propietario
		{
			get
			{
				return this.GetTable<Propietario>();
			}
		}
		
		public System.Data.Linq.Table<PropositoAvaluo> PropositoAvaluo
		{
			get
			{
				return this.GetTable<PropositoAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<RechazoAvaluo> RechazoAvaluo
		{
			get
			{
				return this.GetTable<RechazoAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<RegimenPropiedad> RegimenPropiedad
		{
			get
			{
				return this.GetTable<RegimenPropiedad>();
			}
		}
		
		public System.Data.Linq.Table<RegistroSHF> RegistroSHF
		{
			get
			{
				return this.GetTable<RegistroSHF>();
			}
		}
		
		public System.Data.Linq.Table<RevisionAvaluo> RevisionAvaluo
		{
			get
			{
				return this.GetTable<RevisionAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<RolSistema> RolSistema
		{
			get
			{
				return this.GetTable<RolSistema>();
			}
		}
		
		public System.Data.Linq.Table<RolUsuario> RolUsuario
		{
			get
			{
				return this.GetTable<RolUsuario>();
			}
		}
		
		public System.Data.Linq.Table<ServiciosInmueble> ServiciosInmueble
		{
			get
			{
				return this.GetTable<ServiciosInmueble>();
			}
		}
		
		public System.Data.Linq.Table<Solicitante> Solicitante
		{
			get
			{
				return this.GetTable<Solicitante>();
			}
		}
		
		public System.Data.Linq.Table<StatusAvaluo> StatusAvaluo
		{
			get
			{
				return this.GetTable<StatusAvaluo>();
			}
		}
		
		public System.Data.Linq.Table<SuperficiesInmueble> SuperficiesInmueble
		{
			get
			{
				return this.GetTable<SuperficiesInmueble>();
			}
		}
		
		public System.Data.Linq.Table<TipoAsentamiento> TipoAsentamiento
		{
			get
			{
				return this.GetTable<TipoAsentamiento>();
			}
		}
		
		public System.Data.Linq.Table<TipoAvaluoInmobiliario> TipoAvaluoInmobiliario
		{
			get
			{
				return this.GetTable<TipoAvaluoInmobiliario>();
			}
		}
		
		public System.Data.Linq.Table<TipoCalidadProyecto> TipoCalidadProyecto
		{
			get
			{
				return this.GetTable<TipoCalidadProyecto>();
			}
		}
		
		public System.Data.Linq.Table<TipoCaracteristicaPanoramica> TipoCaracteristicaPanoramica
		{
			get
			{
				return this.GetTable<TipoCaracteristicaPanoramica>();
			}
		}
		
		public System.Data.Linq.Table<TipoClasificacionZona> TipoClasificacionZona
		{
			get
			{
				return this.GetTable<TipoClasificacionZona>();
			}
		}
		
		public System.Data.Linq.Table<TipoColindancia> TipoColindancia
		{
			get
			{
				return this.GetTable<TipoColindancia>();
			}
		}
		
		public System.Data.Linq.Table<TipoComparable> TipoComparable
		{
			get
			{
				return this.GetTable<TipoComparable>();
			}
		}
		
		public System.Data.Linq.Table<TipoConstruccionPredominante> TipoConstruccionPredominante
		{
			get
			{
				return this.GetTable<TipoConstruccionPredominante>();
			}
		}
		
		public System.Data.Linq.Table<TipoCredito> TipoCredito
		{
			get
			{
				return this.GetTable<TipoCredito>();
			}
		}
		
		public System.Data.Linq.Table<TipoCreditoInterno> TipoCreditoInterno
		{
			get
			{
				return this.GetTable<TipoCreditoInterno>();
			}
		}
		
		public System.Data.Linq.Table<TipoDensidad> TipoDensidad
		{
			get
			{
				return this.GetTable<TipoDensidad>();
			}
		}
		
		public System.Data.Linq.Table<TipoDocumentoValuador> TipoDocumentoValuador
		{
			get
			{
				return this.GetTable<TipoDocumentoValuador>();
			}
		}
		
		public System.Data.Linq.Table<TipoEstadoConservacion> TipoEstadoConservacion
		{
			get
			{
				return this.GetTable<TipoEstadoConservacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoFormacionProfesional> TipoFormacionProfesional
		{
			get
			{
				return this.GetTable<TipoFormacionProfesional>();
			}
		}
		
		public System.Data.Linq.Table<TipoFuente> TipoFuente
		{
			get
			{
				return this.GetTable<TipoFuente>();
			}
		}
		
		public System.Data.Linq.Table<TipoImportanciaVialidad> TipoImportanciaVialidad
		{
			get
			{
				return this.GetTable<TipoImportanciaVialidad>();
			}
		}
		
		public System.Data.Linq.Table<TipoInmueble> TipoInmueble
		{
			get
			{
				return this.GetTable<TipoInmueble>();
			}
		}
		
		public System.Data.Linq.Table<TipoMaterial> TipoMaterial
		{
			get
			{
				return this.GetTable<TipoMaterial>();
			}
		}
		
		public System.Data.Linq.Table<TipoNivelSocioeconomico> TipoNivelSocioeconomico
		{
			get
			{
				return this.GetTable<TipoNivelSocioeconomico>();
			}
		}
		
		public System.Data.Linq.Table<TipoOrientacion> TipoOrientacion
		{
			get
			{
				return this.GetTable<TipoOrientacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoProximidadUrbana> TipoProximidadUrbana
		{
			get
			{
				return this.GetTable<TipoProximidadUrbana>();
			}
		}
		
		public System.Data.Linq.Table<TipoServicio> TipoServicio
		{
			get
			{
				return this.GetTable<TipoServicio>();
			}
		}
		
		public System.Data.Linq.Table<TipoServidumbre> TipoServidumbre
		{
			get
			{
				return this.GetTable<TipoServidumbre>();
			}
		}
		
		public System.Data.Linq.Table<TipoTopografia> TipoTopografia
		{
			get
			{
				return this.GetTable<TipoTopografia>();
			}
		}
		
		public System.Data.Linq.Table<TipoUbicacion> TipoUbicacion
		{
			get
			{
				return this.GetTable<TipoUbicacion>();
			}
		}
		
		public System.Data.Linq.Table<TipoUnidad> TipoUnidad
		{
			get
			{
				return this.GetTable<TipoUnidad>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsoConstruccion> TipoUsoConstruccion
		{
			get
			{
				return this.GetTable<TipoUsoConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<TipoUsoSuelo> TipoUsoSuelo
		{
			get
			{
				return this.GetTable<TipoUsoSuelo>();
			}
		}
		
		public System.Data.Linq.Table<TipoValuador> TipoValuador
		{
			get
			{
				return this.GetTable<TipoValuador>();
			}
		}
		
		public System.Data.Linq.Table<UbicacionCallesInmueble> UbicacionCallesInmueble
		{
			get
			{
				return this.GetTable<UbicacionCallesInmueble>();
			}
		}
		
		public System.Data.Linq.Table<UbicacionInmueble> UbicacionInmueble
		{
			get
			{
				return this.GetTable<UbicacionInmueble>();
			}
		}
		
		public System.Data.Linq.Table<Universidad> Universidad
		{
			get
			{
				return this.GetTable<Universidad>();
			}
		}
		
		public System.Data.Linq.Table<UsoActualArea> UsoActualArea
		{
			get
			{
				return this.GetTable<UsoActualArea>();
			}
		}
		
		public System.Data.Linq.Table<UsoActualInmueble> UsoActualInmueble
		{
			get
			{
				return this.GetTable<UsoActualInmueble>();
			}
		}
		
		public System.Data.Linq.Table<UsoActualRecamara> UsoActualRecamara
		{
			get
			{
				return this.GetTable<UsoActualRecamara>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioCliente> UsuarioCliente
		{
			get
			{
				return this.GetTable<UsuarioCliente>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioValuador> UsuarioValuador
		{
			get
			{
				return this.GetTable<UsuarioValuador>();
			}
		}
		
		public System.Data.Linq.Table<ValorMaterial> ValorMaterial
		{
			get
			{
				return this.GetTable<ValorMaterial>();
			}
		}
		
		public System.Data.Linq.Table<ValorServicio> ValorServicio
		{
			get
			{
				return this.GetTable<ValorServicio>();
			}
		}
		
		public System.Data.Linq.Table<ViasAcceso> ViasAcceso
		{
			get
			{
				return this.GetTable<ViasAcceso>();
			}
		}
		
		public System.Data.Linq.Table<ClaseComparable> ClaseComparable
		{
			get
			{
				return this.GetTable<ClaseComparable>();
			}
		}
		
		public System.Data.Linq.Table<CalidadProyecto> CalidadProyecto
		{
			get
			{
				return this.GetTable<CalidadProyecto>();
			}
		}
		
		public System.Data.Linq.Table<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this.GetTable<ComparableInmobiliario>();
			}
		}
		
		public System.Data.Linq.Table<TipoComparable1> TipoComparable1
		{
			get
			{
				return this.GetTable<TipoComparable1>();
			}
		}
		
		public System.Data.Linq.Table<UsoSuelo> UsoSuelo
		{
			get
			{
				return this.GetTable<UsoSuelo>();
			}
		}
		
		public System.Data.Linq.Table<TipoAcabado> TipoAcabado
		{
			get
			{
				return this.GetTable<TipoAcabado>();
			}
		}
		
		public System.Data.Linq.Table<TipoConstruccion> TipoConstruccion
		{
			get
			{
				return this.GetTable<TipoConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<SuperficiesCondominio> SuperficiesCondominio
		{
			get
			{
				return this.GetTable<SuperficiesCondominio>();
			}
		}
		
		public System.Data.Linq.Table<AreaComun> AreaComun
		{
			get
			{
				return this.GetTable<AreaComun>();
			}
		}
		
		public System.Data.Linq.Table<InstalacionesTipoConstruccion> InstalacionesTipoConstruccion
		{
			get
			{
				return this.GetTable<InstalacionesTipoConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<InstalacionConstruccion> InstalacionConstruccion
		{
			get
			{
				return this.GetTable<InstalacionConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<EstructurasTipoConstruccion> EstructurasTipoConstruccion
		{
			get
			{
				return this.GetTable<EstructurasTipoConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<AcabadoTipoConstruccion> AcabadoTipoConstruccion
		{
			get
			{
				return this.GetTable<AcabadoTipoConstruccion>();
			}
		}
		
		public System.Data.Linq.Table<ConstruccionInmueble> ConstruccionInmueble
		{
			get
			{
				return this.GetTable<ConstruccionInmueble>();
			}
		}
		
		public System.Data.Linq.Table<DatoCondominio> DatoCondominio
		{
			get
			{
				return this.GetTable<DatoCondominio>();
			}
		}
		
		[Function(Name="dbo.GenerarIDE")]
		public ISingleResult<GenerarIDEResult> GenerarIDE([Parameter(DbType="SmallInt")] System.Nullable<short> mes, [Parameter(DbType="SmallInt")] System.Nullable<short> periodo, [Parameter(DbType="Int")] ref System.Nullable<int> consecutivo, [Parameter(Name="IDE", DbType="NVarChar(20)")] ref string iDE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mes, periodo, consecutivo, iDE);
			consecutivo = ((System.Nullable<int>)(result.GetParameterValue(2)));
			iDE = ((string)(result.GetParameterValue(3)));
			return ((ISingleResult<GenerarIDEResult>)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.Valuador")]
	public partial class Valuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idValuador;
		
		private short _idTipoValuador;
		
		private int _idDireccion;
		
		private int _idDatoContacto;
		
		private System.Nullable<int> _idDatoBancario;
		
		private System.Nullable<int> _idDatoPaqueteria;
		
		private System.Nullable<int> _idFotografia;
		
		private System.Nullable<int> _idFormacionValuacion;
		
		private string _nombre;
		
		private string _nombreAsistente;
		
		private string _emailAsistente;
		
		private bool _externo;
		
		private bool _activo;
		
		private System.DateTime _fechaAlta;
		
		private EntitySet<AsignacionAvaluo> _AsignacionAvaluo;
		
		private EntitySet<AsignacionAvaluo> _AsignacionAvaluo1;
		
		private EntitySet<AvaluoReferencia> _AvaluoReferencia;
		
		private EntitySet<DatoFacturacionValuador> _DatoFacturacionValuador;
		
		private EntitySet<DocumentoValuador> _DocumentoValuador;
		
		private EntitySet<FormacionProfesionalValuador> _FormacionProfesionalValuador;
		
		private EntitySet<RechazoAvaluo> _RechazoAvaluo;
		
		private EntitySet<RegistroSHF> _RegistroSHF;
		
		private EntitySet<UsuarioValuador> _UsuarioValuador;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
		private EntityRef<Archivo> _Archivo;
		
		private EntityRef<DatoBancario> _DatoBancario;
		
		private EntityRef<DatoContacto> _DatoContacto;
		
		private EntityRef<DatoPaqueteria> _DatoPaqueteria;
		
		private EntityRef<Direccion> _Direccion;
		
		private EntityRef<FormacionValuador> _FormacionValuador;
		
		private EntityRef<TipoValuador> _TipoValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidTipoValuadorChanging(short value);
    partial void OnidTipoValuadorChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnidDatoContactoChanging(int value);
    partial void OnidDatoContactoChanged();
    partial void OnidDatoBancarioChanging(System.Nullable<int> value);
    partial void OnidDatoBancarioChanged();
    partial void OnidDatoPaqueteriaChanging(System.Nullable<int> value);
    partial void OnidDatoPaqueteriaChanged();
    partial void OnidFotografiaChanging(System.Nullable<int> value);
    partial void OnidFotografiaChanged();
    partial void OnidFormacionValuacionChanging(System.Nullable<int> value);
    partial void OnidFormacionValuacionChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnnombreAsistenteChanging(string value);
    partial void OnnombreAsistenteChanged();
    partial void OnemailAsistenteChanging(string value);
    partial void OnemailAsistenteChanged();
    partial void OnexternoChanging(bool value);
    partial void OnexternoChanged();
    partial void OnactivoChanging(bool value);
    partial void OnactivoChanged();
    partial void OnfechaAltaChanging(System.DateTime value);
    partial void OnfechaAltaChanged();
    #endregion
		
		public Valuador()
		{
			this._AsignacionAvaluo = new EntitySet<AsignacionAvaluo>(new Action<AsignacionAvaluo>(this.attach_AsignacionAvaluo), new Action<AsignacionAvaluo>(this.detach_AsignacionAvaluo));
			this._AsignacionAvaluo1 = new EntitySet<AsignacionAvaluo>(new Action<AsignacionAvaluo>(this.attach_AsignacionAvaluo1), new Action<AsignacionAvaluo>(this.detach_AsignacionAvaluo1));
			this._AvaluoReferencia = new EntitySet<AvaluoReferencia>(new Action<AvaluoReferencia>(this.attach_AvaluoReferencia), new Action<AvaluoReferencia>(this.detach_AvaluoReferencia));
			this._DatoFacturacionValuador = new EntitySet<DatoFacturacionValuador>(new Action<DatoFacturacionValuador>(this.attach_DatoFacturacionValuador), new Action<DatoFacturacionValuador>(this.detach_DatoFacturacionValuador));
			this._DocumentoValuador = new EntitySet<DocumentoValuador>(new Action<DocumentoValuador>(this.attach_DocumentoValuador), new Action<DocumentoValuador>(this.detach_DocumentoValuador));
			this._FormacionProfesionalValuador = new EntitySet<FormacionProfesionalValuador>(new Action<FormacionProfesionalValuador>(this.attach_FormacionProfesionalValuador), new Action<FormacionProfesionalValuador>(this.detach_FormacionProfesionalValuador));
			this._RechazoAvaluo = new EntitySet<RechazoAvaluo>(new Action<RechazoAvaluo>(this.attach_RechazoAvaluo), new Action<RechazoAvaluo>(this.detach_RechazoAvaluo));
			this._RegistroSHF = new EntitySet<RegistroSHF>(new Action<RegistroSHF>(this.attach_RegistroSHF), new Action<RegistroSHF>(this.detach_RegistroSHF));
			this._UsuarioValuador = new EntitySet<UsuarioValuador>(new Action<UsuarioValuador>(this.attach_UsuarioValuador), new Action<UsuarioValuador>(this.detach_UsuarioValuador));
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			this._Archivo = default(EntityRef<Archivo>);
			this._DatoBancario = default(EntityRef<DatoBancario>);
			this._DatoContacto = default(EntityRef<DatoContacto>);
			this._DatoPaqueteria = default(EntityRef<DatoPaqueteria>);
			this._Direccion = default(EntityRef<Direccion>);
			this._FormacionValuador = default(EntityRef<FormacionValuador>);
			this._TipoValuador = default(EntityRef<TipoValuador>);
			OnCreated();
		}
		
		[Column(Storage="_idValuador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoValuador", DbType="SmallInt NOT NULL")]
		public short idTipoValuador
		{
			get
			{
				return this._idTipoValuador;
			}
			set
			{
				if ((this._idTipoValuador != value))
				{
					if (this._TipoValuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoValuadorChanging(value);
					this.SendPropertyChanging();
					this._idTipoValuador = value;
					this.SendPropertyChanged("idTipoValuador");
					this.OnidTipoValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoContacto", DbType="Int NOT NULL")]
		public int idDatoContacto
		{
			get
			{
				return this._idDatoContacto;
			}
			set
			{
				if ((this._idDatoContacto != value))
				{
					if (this._DatoContacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoContactoChanging(value);
					this.SendPropertyChanging();
					this._idDatoContacto = value;
					this.SendPropertyChanged("idDatoContacto");
					this.OnidDatoContactoChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoBancario", DbType="Int")]
		public System.Nullable<int> idDatoBancario
		{
			get
			{
				return this._idDatoBancario;
			}
			set
			{
				if ((this._idDatoBancario != value))
				{
					if (this._DatoBancario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoBancarioChanging(value);
					this.SendPropertyChanging();
					this._idDatoBancario = value;
					this.SendPropertyChanged("idDatoBancario");
					this.OnidDatoBancarioChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoPaqueteria", DbType="Int")]
		public System.Nullable<int> idDatoPaqueteria
		{
			get
			{
				return this._idDatoPaqueteria;
			}
			set
			{
				if ((this._idDatoPaqueteria != value))
				{
					if (this._DatoPaqueteria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoPaqueteriaChanging(value);
					this.SendPropertyChanging();
					this._idDatoPaqueteria = value;
					this.SendPropertyChanged("idDatoPaqueteria");
					this.OnidDatoPaqueteriaChanged();
				}
			}
		}
		
		[Column(Storage="_idFotografia", DbType="Int")]
		public System.Nullable<int> idFotografia
		{
			get
			{
				return this._idFotografia;
			}
			set
			{
				if ((this._idFotografia != value))
				{
					if (this._Archivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFotografiaChanging(value);
					this.SendPropertyChanging();
					this._idFotografia = value;
					this.SendPropertyChanged("idFotografia");
					this.OnidFotografiaChanged();
				}
			}
		}
		
		[Column(Storage="_idFormacionValuacion", DbType="Int")]
		public System.Nullable<int> idFormacionValuacion
		{
			get
			{
				return this._idFormacionValuacion;
			}
			set
			{
				if ((this._idFormacionValuacion != value))
				{
					if (this._FormacionValuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFormacionValuacionChanging(value);
					this.SendPropertyChanging();
					this._idFormacionValuacion = value;
					this.SendPropertyChanged("idFormacionValuacion");
					this.OnidFormacionValuacionChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_nombreAsistente", DbType="NVarChar(50)")]
		public string nombreAsistente
		{
			get
			{
				return this._nombreAsistente;
			}
			set
			{
				if ((this._nombreAsistente != value))
				{
					this.OnnombreAsistenteChanging(value);
					this.SendPropertyChanging();
					this._nombreAsistente = value;
					this.SendPropertyChanged("nombreAsistente");
					this.OnnombreAsistenteChanged();
				}
			}
		}
		
		[Column(Storage="_emailAsistente", DbType="NVarChar(50)")]
		public string emailAsistente
		{
			get
			{
				return this._emailAsistente;
			}
			set
			{
				if ((this._emailAsistente != value))
				{
					this.OnemailAsistenteChanging(value);
					this.SendPropertyChanging();
					this._emailAsistente = value;
					this.SendPropertyChanged("emailAsistente");
					this.OnemailAsistenteChanged();
				}
			}
		}
		
		[Column(Storage="_externo", DbType="Bit NOT NULL")]
		public bool externo
		{
			get
			{
				return this._externo;
			}
			set
			{
				if ((this._externo != value))
				{
					this.OnexternoChanging(value);
					this.SendPropertyChanging();
					this._externo = value;
					this.SendPropertyChanged("externo");
					this.OnexternoChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit NOT NULL")]
		public bool activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Column(Storage="_fechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime fechaAlta
		{
			get
			{
				return this._fechaAlta;
			}
			set
			{
				if ((this._fechaAlta != value))
				{
					this.OnfechaAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaAlta = value;
					this.SendPropertyChanged("fechaAlta");
					this.OnfechaAltaChanged();
				}
			}
		}
		
		[Association(Name="Valuador_AsignacionAvaluo", Storage="_AsignacionAvaluo", ThisKey="idValuador", OtherKey="idControlador")]
		public EntitySet<AsignacionAvaluo> AsignacionAvaluo
		{
			get
			{
				return this._AsignacionAvaluo;
			}
			set
			{
				this._AsignacionAvaluo.Assign(value);
			}
		}
		
		[Association(Name="Valuador_AsignacionAvaluo1", Storage="_AsignacionAvaluo1", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<AsignacionAvaluo> AsignacionAvaluo1
		{
			get
			{
				return this._AsignacionAvaluo1;
			}
			set
			{
				this._AsignacionAvaluo1.Assign(value);
			}
		}
		
		[Association(Name="Valuador_AvaluoReferencia", Storage="_AvaluoReferencia", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<AvaluoReferencia> AvaluoReferencia
		{
			get
			{
				return this._AvaluoReferencia;
			}
			set
			{
				this._AvaluoReferencia.Assign(value);
			}
		}
		
		[Association(Name="Valuador_DatoFacturacionValuador", Storage="_DatoFacturacionValuador", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<DatoFacturacionValuador> DatoFacturacionValuador
		{
			get
			{
				return this._DatoFacturacionValuador;
			}
			set
			{
				this._DatoFacturacionValuador.Assign(value);
			}
		}
		
		[Association(Name="Valuador_DocumentoValuador", Storage="_DocumentoValuador", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<DocumentoValuador> DocumentoValuador
		{
			get
			{
				return this._DocumentoValuador;
			}
			set
			{
				this._DocumentoValuador.Assign(value);
			}
		}
		
		[Association(Name="Valuador_FormacionProfesionalValuador", Storage="_FormacionProfesionalValuador", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<FormacionProfesionalValuador> FormacionProfesionalValuador
		{
			get
			{
				return this._FormacionProfesionalValuador;
			}
			set
			{
				this._FormacionProfesionalValuador.Assign(value);
			}
		}
		
		[Association(Name="Valuador_RechazoAvaluo", Storage="_RechazoAvaluo", ThisKey="idValuador", OtherKey="idControlador")]
		public EntitySet<RechazoAvaluo> RechazoAvaluo
		{
			get
			{
				return this._RechazoAvaluo;
			}
			set
			{
				this._RechazoAvaluo.Assign(value);
			}
		}
		
		[Association(Name="Valuador_RegistroSHF", Storage="_RegistroSHF", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<RegistroSHF> RegistroSHF
		{
			get
			{
				return this._RegistroSHF;
			}
			set
			{
				this._RegistroSHF.Assign(value);
			}
		}
		
		[Association(Name="Valuador_UsuarioValuador", Storage="_UsuarioValuador", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<UsuarioValuador> UsuarioValuador
		{
			get
			{
				return this._UsuarioValuador;
			}
			set
			{
				this._UsuarioValuador.Assign(value);
			}
		}
		
		[Association(Name="Valuador_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idValuador", OtherKey="idValuador")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		[Association(Name="Archivo_Valuador", Storage="_Archivo", ThisKey="idFotografia", OtherKey="idArchivo", IsForeignKey=true, DeleteRule="SET NULL")]
		public Archivo Archivo
		{
			get
			{
				return this._Archivo.Entity;
			}
			set
			{
				Archivo previousValue = this._Archivo.Entity;
				if (((previousValue != value) 
							|| (this._Archivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Archivo.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._Archivo.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idFotografia = value.idArchivo;
					}
					else
					{
						this._idFotografia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Archivo");
				}
			}
		}
		
		[Association(Name="DatoBancario_Valuador", Storage="_DatoBancario", ThisKey="idDatoBancario", OtherKey="idDatoBancario", IsForeignKey=true, DeleteRule="SET NULL")]
		public DatoBancario DatoBancario
		{
			get
			{
				return this._DatoBancario.Entity;
			}
			set
			{
				DatoBancario previousValue = this._DatoBancario.Entity;
				if (((previousValue != value) 
							|| (this._DatoBancario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoBancario.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._DatoBancario.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idDatoBancario = value.idDatoBancario;
					}
					else
					{
						this._idDatoBancario = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatoBancario");
				}
			}
		}
		
		[Association(Name="DatoContacto_Valuador", Storage="_DatoContacto", ThisKey="idDatoContacto", OtherKey="idDatoContacto", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DatoContacto DatoContacto
		{
			get
			{
				return this._DatoContacto.Entity;
			}
			set
			{
				DatoContacto previousValue = this._DatoContacto.Entity;
				if (((previousValue != value) 
							|| (this._DatoContacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoContacto.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._DatoContacto.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idDatoContacto = value.idDatoContacto;
					}
					else
					{
						this._idDatoContacto = default(int);
					}
					this.SendPropertyChanged("DatoContacto");
				}
			}
		}
		
		[Association(Name="DatoPaqueteria_Valuador", Storage="_DatoPaqueteria", ThisKey="idDatoPaqueteria", OtherKey="idDatoPaqueteria", IsForeignKey=true)]
		public DatoPaqueteria DatoPaqueteria
		{
			get
			{
				return this._DatoPaqueteria.Entity;
			}
			set
			{
				DatoPaqueteria previousValue = this._DatoPaqueteria.Entity;
				if (((previousValue != value) 
							|| (this._DatoPaqueteria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoPaqueteria.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._DatoPaqueteria.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idDatoPaqueteria = value.idDatoPaqueteria;
					}
					else
					{
						this._idDatoPaqueteria = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatoPaqueteria");
				}
			}
		}
		
		[Association(Name="Direccion_Valuador", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		[Association(Name="FormacionValuador_Valuador", Storage="_FormacionValuador", ThisKey="idFormacionValuacion", OtherKey="idFormacionValuador", IsForeignKey=true, DeleteRule="SET NULL")]
		public FormacionValuador FormacionValuador
		{
			get
			{
				return this._FormacionValuador.Entity;
			}
			set
			{
				FormacionValuador previousValue = this._FormacionValuador.Entity;
				if (((previousValue != value) 
							|| (this._FormacionValuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormacionValuador.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._FormacionValuador.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idFormacionValuacion = value.idFormacionValuador;
					}
					else
					{
						this._idFormacionValuacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("FormacionValuador");
				}
			}
		}
		
		[Association(Name="TipoValuador_Valuador", Storage="_TipoValuador", ThisKey="idTipoValuador", OtherKey="idTipoValuador", IsForeignKey=true)]
		public TipoValuador TipoValuador
		{
			get
			{
				return this._TipoValuador.Entity;
			}
			set
			{
				TipoValuador previousValue = this._TipoValuador.Entity;
				if (((previousValue != value) 
							|| (this._TipoValuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoValuador.Entity = null;
						previousValue.Valuador.Remove(this);
					}
					this._TipoValuador.Entity = value;
					if ((value != null))
					{
						value.Valuador.Add(this);
						this._idTipoValuador = value.idTipoValuador;
					}
					else
					{
						this._idTipoValuador = default(short);
					}
					this.SendPropertyChanged("TipoValuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AsignacionAvaluo(AsignacionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_AsignacionAvaluo(AsignacionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_AsignacionAvaluo1(AsignacionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador1 = this;
		}
		
		private void detach_AsignacionAvaluo1(AsignacionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador1 = null;
		}
		
		private void attach_AvaluoReferencia(AvaluoReferencia entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_AvaluoReferencia(AvaluoReferencia entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_DatoFacturacionValuador(DatoFacturacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_DatoFacturacionValuador(DatoFacturacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_DocumentoValuador(DocumentoValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_DocumentoValuador(DocumentoValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_RegistroSHF(RegistroSHF entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_RegistroSHF(RegistroSHF entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_UsuarioValuador(UsuarioValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_UsuarioValuador(UsuarioValuador entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Valuador = null;
		}
	}
	
	[Table(Name="dbo.Archivo")]
	public partial class Archivo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idArchivo;
		
		private short _idCarpeta;
		
		private int _idTipo;
		
		private string _titulo;
		
		private string _nombre;
		
		private string _extension;
		
		private string _tipoMIME;
		
		private System.DateTime _fechaCreacion;
		
		private System.DateTime _fechaModificacion;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntitySet<AvaluoReferencia> _AvaluoReferencia;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntitySet<HistorialRevision> _HistorialRevision;
		
		private EntityRef<Carpeta> _Carpeta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidArchivoChanging(int value);
    partial void OnidArchivoChanged();
    partial void OnidCarpetaChanging(short value);
    partial void OnidCarpetaChanged();
    partial void OnidTipoChanging(int value);
    partial void OnidTipoChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnextensionChanging(string value);
    partial void OnextensionChanged();
    partial void OntipoMIMEChanging(string value);
    partial void OntipoMIMEChanged();
    partial void OnfechaCreacionChanging(System.DateTime value);
    partial void OnfechaCreacionChanged();
    partial void OnfechaModificacionChanging(System.DateTime value);
    partial void OnfechaModificacionChanged();
    #endregion
		
		public Archivo()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._AvaluoReferencia = new EntitySet<AvaluoReferencia>(new Action<AvaluoReferencia>(this.attach_AvaluoReferencia), new Action<AvaluoReferencia>(this.detach_AvaluoReferencia));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._HistorialRevision = new EntitySet<HistorialRevision>(new Action<HistorialRevision>(this.attach_HistorialRevision), new Action<HistorialRevision>(this.detach_HistorialRevision));
			this._Carpeta = default(EntityRef<Carpeta>);
			OnCreated();
		}
		
		[Column(Storage="_idArchivo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idArchivo
		{
			get
			{
				return this._idArchivo;
			}
			set
			{
				if ((this._idArchivo != value))
				{
					this.OnidArchivoChanging(value);
					this.SendPropertyChanging();
					this._idArchivo = value;
					this.SendPropertyChanged("idArchivo");
					this.OnidArchivoChanged();
				}
			}
		}
		
		[Column(Storage="_idCarpeta", DbType="SmallInt NOT NULL")]
		public short idCarpeta
		{
			get
			{
				return this._idCarpeta;
			}
			set
			{
				if ((this._idCarpeta != value))
				{
					if (this._Carpeta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarpetaChanging(value);
					this.SendPropertyChanging();
					this._idCarpeta = value;
					this.SendPropertyChanged("idCarpeta");
					this.OnidCarpetaChanged();
				}
			}
		}
		
		[Column(Storage="_idTipo", DbType="Int NOT NULL")]
		public int idTipo
		{
			get
			{
				return this._idTipo;
			}
			set
			{
				if ((this._idTipo != value))
				{
					this.OnidTipoChanging(value);
					this.SendPropertyChanging();
					this._idTipo = value;
					this.SendPropertyChanged("idTipo");
					this.OnidTipoChanged();
				}
			}
		}
		
		[Column(Storage="_titulo", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_extension", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string extension
		{
			get
			{
				return this._extension;
			}
			set
			{
				if ((this._extension != value))
				{
					this.OnextensionChanging(value);
					this.SendPropertyChanging();
					this._extension = value;
					this.SendPropertyChanged("extension");
					this.OnextensionChanged();
				}
			}
		}
		
		[Column(Storage="_tipoMIME", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string tipoMIME
		{
			get
			{
				return this._tipoMIME;
			}
			set
			{
				if ((this._tipoMIME != value))
				{
					this.OntipoMIMEChanging(value);
					this.SendPropertyChanging();
					this._tipoMIME = value;
					this.SendPropertyChanged("tipoMIME");
					this.OntipoMIMEChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[Column(Storage="_fechaModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaModificacion
		{
			get
			{
				return this._fechaModificacion;
			}
			set
			{
				if ((this._fechaModificacion != value))
				{
					this.OnfechaModificacionChanging(value);
					this.SendPropertyChanging();
					this._fechaModificacion = value;
					this.SendPropertyChanged("fechaModificacion");
					this.OnfechaModificacionChanged();
				}
			}
		}
		
		[Association(Name="Archivo_Valuador", Storage="_Valuador", ThisKey="idArchivo", OtherKey="idFotografia")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="Archivo_AvaluoReferencia", Storage="_AvaluoReferencia", ThisKey="idArchivo", OtherKey="idArchivo")]
		public EntitySet<AvaluoReferencia> AvaluoReferencia
		{
			get
			{
				return this._AvaluoReferencia;
			}
			set
			{
				this._AvaluoReferencia.Assign(value);
			}
		}
		
		[Association(Name="Archivo_Cliente", Storage="_Cliente", ThisKey="idArchivo", OtherKey="idLogotipo")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[Association(Name="Archivo_HistorialRevision", Storage="_HistorialRevision", ThisKey="idArchivo", OtherKey="idCapturaAvaluo")]
		public EntitySet<HistorialRevision> HistorialRevision
		{
			get
			{
				return this._HistorialRevision;
			}
			set
			{
				this._HistorialRevision.Assign(value);
			}
		}
		
		[Association(Name="Carpeta_Archivo", Storage="_Carpeta", ThisKey="idCarpeta", OtherKey="idCarpeta", IsForeignKey=true)]
		public Carpeta Carpeta
		{
			get
			{
				return this._Carpeta.Entity;
			}
			set
			{
				Carpeta previousValue = this._Carpeta.Entity;
				if (((previousValue != value) 
							|| (this._Carpeta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carpeta.Entity = null;
						previousValue.Archivo.Remove(this);
					}
					this._Carpeta.Entity = value;
					if ((value != null))
					{
						value.Archivo.Add(this);
						this._idCarpeta = value.idCarpeta;
					}
					else
					{
						this._idCarpeta = default(short);
					}
					this.SendPropertyChanged("Carpeta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = null;
		}
		
		private void attach_AvaluoReferencia(AvaluoReferencia entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = this;
		}
		
		private void detach_AvaluoReferencia(AvaluoReferencia entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = null;
		}
		
		private void attach_HistorialRevision(HistorialRevision entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = this;
		}
		
		private void detach_HistorialRevision(HistorialRevision entity)
		{
			this.SendPropertyChanging();
			entity.Archivo = null;
		}
	}
	
	[Table(Name="dbo.Asentamiento")]
	public partial class Asentamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAsentamiento;
		
		private int _idMunicipio;
		
		private short _idTipoAsentamiento;
		
		private string _nombreAsentamiento;
		
		private bool _capturado;
		
		private EntitySet<CodigoPostal> _CodigoPostal;
		
		private EntityRef<Municipio> _Municipio;
		
		private EntityRef<TipoAsentamiento> _TipoAsentamiento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAsentamientoChanging(int value);
    partial void OnidAsentamientoChanged();
    partial void OnidMunicipioChanging(int value);
    partial void OnidMunicipioChanged();
    partial void OnidTipoAsentamientoChanging(short value);
    partial void OnidTipoAsentamientoChanged();
    partial void OnnombreAsentamientoChanging(string value);
    partial void OnnombreAsentamientoChanged();
    partial void OncapturadoChanging(bool value);
    partial void OncapturadoChanged();
    #endregion
		
		public Asentamiento()
		{
			this._CodigoPostal = new EntitySet<CodigoPostal>(new Action<CodigoPostal>(this.attach_CodigoPostal), new Action<CodigoPostal>(this.detach_CodigoPostal));
			this._Municipio = default(EntityRef<Municipio>);
			this._TipoAsentamiento = default(EntityRef<TipoAsentamiento>);
			OnCreated();
		}
		
		[Column(Storage="_idAsentamiento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAsentamiento
		{
			get
			{
				return this._idAsentamiento;
			}
			set
			{
				if ((this._idAsentamiento != value))
				{
					this.OnidAsentamientoChanging(value);
					this.SendPropertyChanging();
					this._idAsentamiento = value;
					this.SendPropertyChanged("idAsentamiento");
					this.OnidAsentamientoChanged();
				}
			}
		}
		
		[Column(Storage="_idMunicipio", DbType="Int NOT NULL")]
		public int idMunicipio
		{
			get
			{
				return this._idMunicipio;
			}
			set
			{
				if ((this._idMunicipio != value))
				{
					if (this._Municipio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMunicipioChanging(value);
					this.SendPropertyChanging();
					this._idMunicipio = value;
					this.SendPropertyChanged("idMunicipio");
					this.OnidMunicipioChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoAsentamiento", DbType="SmallInt NOT NULL")]
		public short idTipoAsentamiento
		{
			get
			{
				return this._idTipoAsentamiento;
			}
			set
			{
				if ((this._idTipoAsentamiento != value))
				{
					if (this._TipoAsentamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoAsentamientoChanging(value);
					this.SendPropertyChanging();
					this._idTipoAsentamiento = value;
					this.SendPropertyChanged("idTipoAsentamiento");
					this.OnidTipoAsentamientoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreAsentamiento", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombreAsentamiento
		{
			get
			{
				return this._nombreAsentamiento;
			}
			set
			{
				if ((this._nombreAsentamiento != value))
				{
					this.OnnombreAsentamientoChanging(value);
					this.SendPropertyChanging();
					this._nombreAsentamiento = value;
					this.SendPropertyChanged("nombreAsentamiento");
					this.OnnombreAsentamientoChanged();
				}
			}
		}
		
		[Column(Storage="_capturado", DbType="Bit NOT NULL")]
		public bool capturado
		{
			get
			{
				return this._capturado;
			}
			set
			{
				if ((this._capturado != value))
				{
					this.OncapturadoChanging(value);
					this.SendPropertyChanging();
					this._capturado = value;
					this.SendPropertyChanged("capturado");
					this.OncapturadoChanged();
				}
			}
		}
		
		[Association(Name="Asentamiento_CodigoPostal", Storage="_CodigoPostal", ThisKey="idAsentamiento", OtherKey="idAsentamiento")]
		public EntitySet<CodigoPostal> CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				this._CodigoPostal.Assign(value);
			}
		}
		
		[Association(Name="Municipio_Asentamiento", Storage="_Municipio", ThisKey="idMunicipio", OtherKey="idMunicipio", IsForeignKey=true)]
		public Municipio Municipio
		{
			get
			{
				return this._Municipio.Entity;
			}
			set
			{
				Municipio previousValue = this._Municipio.Entity;
				if (((previousValue != value) 
							|| (this._Municipio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Municipio.Entity = null;
						previousValue.Asentamiento.Remove(this);
					}
					this._Municipio.Entity = value;
					if ((value != null))
					{
						value.Asentamiento.Add(this);
						this._idMunicipio = value.idMunicipio;
					}
					else
					{
						this._idMunicipio = default(int);
					}
					this.SendPropertyChanged("Municipio");
				}
			}
		}
		
		[Association(Name="TipoAsentamiento_Asentamiento", Storage="_TipoAsentamiento", ThisKey="idTipoAsentamiento", OtherKey="idTipoAsentamiento", IsForeignKey=true)]
		public TipoAsentamiento TipoAsentamiento
		{
			get
			{
				return this._TipoAsentamiento.Entity;
			}
			set
			{
				TipoAsentamiento previousValue = this._TipoAsentamiento.Entity;
				if (((previousValue != value) 
							|| (this._TipoAsentamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAsentamiento.Entity = null;
						previousValue.Asentamiento.Remove(this);
					}
					this._TipoAsentamiento.Entity = value;
					if ((value != null))
					{
						value.Asentamiento.Add(this);
						this._idTipoAsentamiento = value.idTipoAsentamiento;
					}
					else
					{
						this._idTipoAsentamiento = default(short);
					}
					this.SendPropertyChanged("TipoAsentamiento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CodigoPostal(CodigoPostal entity)
		{
			this.SendPropertyChanging();
			entity.Asentamiento = this;
		}
		
		private void detach_CodigoPostal(CodigoPostal entity)
		{
			this.SendPropertyChanging();
			entity.Asentamiento = null;
		}
	}
	
	[Table(Name="dbo.AsignacionAvaluo")]
	public partial class AsignacionAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private int _idValuador;
		
		private int _idControlador;
		
		private EntityRef<Valuador> _Valuador;
		
		private EntityRef<Valuador> _Valuador1;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidControladorChanging(int value);
    partial void OnidControladorChanged();
    #endregion
		
		public AsignacionAvaluo()
		{
			this._Valuador = default(EntityRef<Valuador>);
			this._Valuador1 = default(EntityRef<Valuador>);
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL")]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idControlador", DbType="Int NOT NULL")]
		public int idControlador
		{
			get
			{
				return this._idControlador;
			}
			set
			{
				if ((this._idControlador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidControladorChanging(value);
					this.SendPropertyChanging();
					this._idControlador = value;
					this.SendPropertyChanged("idControlador");
					this.OnidControladorChanged();
				}
			}
		}
		
		[Association(Name="Valuador_AsignacionAvaluo", Storage="_Valuador", ThisKey="idControlador", OtherKey="idValuador", IsForeignKey=true)]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.AsignacionAvaluo.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.AsignacionAvaluo.Add(this);
						this._idControlador = value.idValuador;
					}
					else
					{
						this._idControlador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		[Association(Name="Valuador_AsignacionAvaluo1", Storage="_Valuador1", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true)]
		public Valuador Valuador1
		{
			get
			{
				return this._Valuador1.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador1.Entity;
				if (((previousValue != value) 
							|| (this._Valuador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador1.Entity = null;
						previousValue.AsignacionAvaluo1.Remove(this);
					}
					this._Valuador1.Entity = value;
					if ((value != null))
					{
						value.AsignacionAvaluo1.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador1");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_AsignacionAvaluo", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true)]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.AsignacionAvaluo = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.AsignacionAvaluo = this;
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AsignacionFolioSHF")]
	public partial class AsignacionFolioSHF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private string _folio;
		
		private int _consecutivo;
		
		private short _periodo;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnfolioChanging(string value);
    partial void OnfolioChanged();
    partial void OnconsecutivoChanging(int value);
    partial void OnconsecutivoChanged();
    partial void OnperiodoChanging(short value);
    partial void OnperiodoChanged();
    #endregion
		
		public AsignacionFolioSHF()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_folio", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string folio
		{
			get
			{
				return this._folio;
			}
			set
			{
				if ((this._folio != value))
				{
					this.OnfolioChanging(value);
					this.SendPropertyChanging();
					this._folio = value;
					this.SendPropertyChanged("folio");
					this.OnfolioChanged();
				}
			}
		}
		
		[Column(Storage="_consecutivo", DbType="Int NOT NULL")]
		public int consecutivo
		{
			get
			{
				return this._consecutivo;
			}
			set
			{
				if ((this._consecutivo != value))
				{
					this.OnconsecutivoChanging(value);
					this.SendPropertyChanging();
					this._consecutivo = value;
					this.SendPropertyChanged("consecutivo");
					this.OnconsecutivoChanged();
				}
			}
		}
		
		[Column(Storage="_periodo", DbType="SmallInt NOT NULL")]
		public short periodo
		{
			get
			{
				return this._periodo;
			}
			set
			{
				if ((this._periodo != value))
				{
					this.OnperiodoChanging(value);
					this.SendPropertyChanging();
					this._periodo = value;
					this.SendPropertyChanged("periodo");
					this.OnperiodoChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_AsignacionFolioSHF", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.AsignacionFolioSHF = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.AsignacionFolioSHF = this;
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AvaluoInmobiliario")]
	public partial class AvaluoInmobiliario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private string _IDE;
		
		private System.Nullable<int> _idCliente;
		
		private int _idInmueble;
		
		private short _idSubTipo;
		
		private int _idSolicitante;
		
		private short _idStatus;
		
		private short _idProposito;
		
		private string _especRecuperacion;
		
		private string _especProposito;
		
		private System.DateTime _fechaCreacion;
		
		private System.Nullable<System.DateTime> _fechaFinalizacion;
		
		private bool _promocionVIASC;
		
		private bool _operacionContado;
		
		private bool _activo;
		
		private EntityRef<AsignacionAvaluo> _AsignacionAvaluo;
		
		private EntityRef<AsignacionFolioSHF> _AsignacionFolioSHF;
		
		private EntityRef<ConclusionAvaluo> _ConclusionAvaluo;
		
		private EntityRef<DatoCredito> _DatoCredito;
		
		private EntityRef<Declaraciones> _Declaraciones;
		
		private EntitySet<RechazoAvaluo> _RechazoAvaluo;
		
		private EntitySet<RevisionAvaluo> _RevisionAvaluo;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Inmueble> _Inmueble;
		
		private EntityRef<PropositoAvaluo> _PropositoAvaluo;
		
		private EntityRef<Solicitante> _Solicitante;
		
		private EntityRef<StatusAvaluo> _StatusAvaluo;
		
		private EntityRef<TipoAvaluoInmobiliario> _TipoAvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnIDEChanging(string value);
    partial void OnIDEChanged();
    partial void OnidClienteChanging(System.Nullable<int> value);
    partial void OnidClienteChanged();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidSubTipoChanging(short value);
    partial void OnidSubTipoChanged();
    partial void OnidSolicitanteChanging(int value);
    partial void OnidSolicitanteChanged();
    partial void OnidStatusChanging(short value);
    partial void OnidStatusChanged();
    partial void OnidPropositoChanging(short value);
    partial void OnidPropositoChanged();
    partial void OnespecRecuperacionChanging(string value);
    partial void OnespecRecuperacionChanged();
    partial void OnespecPropositoChanging(string value);
    partial void OnespecPropositoChanged();
    partial void OnfechaCreacionChanging(System.DateTime value);
    partial void OnfechaCreacionChanged();
    partial void OnfechaFinalizacionChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaFinalizacionChanged();
    partial void OnpromocionVIASCChanging(bool value);
    partial void OnpromocionVIASCChanged();
    partial void OnoperacionContadoChanging(bool value);
    partial void OnoperacionContadoChanged();
    partial void OnactivoChanging(bool value);
    partial void OnactivoChanged();
    #endregion
		
		public AvaluoInmobiliario()
		{
			this._AsignacionAvaluo = default(EntityRef<AsignacionAvaluo>);
			this._AsignacionFolioSHF = default(EntityRef<AsignacionFolioSHF>);
			this._ConclusionAvaluo = default(EntityRef<ConclusionAvaluo>);
			this._DatoCredito = default(EntityRef<DatoCredito>);
			this._Declaraciones = default(EntityRef<Declaraciones>);
			this._RechazoAvaluo = new EntitySet<RechazoAvaluo>(new Action<RechazoAvaluo>(this.attach_RechazoAvaluo), new Action<RechazoAvaluo>(this.detach_RechazoAvaluo));
			this._RevisionAvaluo = new EntitySet<RevisionAvaluo>(new Action<RevisionAvaluo>(this.attach_RevisionAvaluo), new Action<RevisionAvaluo>(this.detach_RevisionAvaluo));
			this._Cliente = default(EntityRef<Cliente>);
			this._Inmueble = default(EntityRef<Inmueble>);
			this._PropositoAvaluo = default(EntityRef<PropositoAvaluo>);
			this._Solicitante = default(EntityRef<Solicitante>);
			this._StatusAvaluo = default(EntityRef<StatusAvaluo>);
			this._TipoAvaluoInmobiliario = default(EntityRef<TipoAvaluoInmobiliario>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_IDE", DbType="NVarChar(20)")]
		public string IDE
		{
			get
			{
				return this._IDE;
			}
			set
			{
				if ((this._IDE != value))
				{
					this.OnIDEChanging(value);
					this.SendPropertyChanging();
					this._IDE = value;
					this.SendPropertyChanged("IDE");
					this.OnIDEChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int")]
		public System.Nullable<int> idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL")]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idSubTipo", DbType="SmallInt NOT NULL")]
		public short idSubTipo
		{
			get
			{
				return this._idSubTipo;
			}
			set
			{
				if ((this._idSubTipo != value))
				{
					if (this._TipoAvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSubTipoChanging(value);
					this.SendPropertyChanging();
					this._idSubTipo = value;
					this.SendPropertyChanged("idSubTipo");
					this.OnidSubTipoChanged();
				}
			}
		}
		
		[Column(Storage="_idSolicitante", DbType="Int NOT NULL")]
		public int idSolicitante
		{
			get
			{
				return this._idSolicitante;
			}
			set
			{
				if ((this._idSolicitante != value))
				{
					if (this._Solicitante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSolicitanteChanging(value);
					this.SendPropertyChanging();
					this._idSolicitante = value;
					this.SendPropertyChanged("idSolicitante");
					this.OnidSolicitanteChanged();
				}
			}
		}
		
		[Column(Storage="_idStatus", DbType="SmallInt NOT NULL")]
		public short idStatus
		{
			get
			{
				return this._idStatus;
			}
			set
			{
				if ((this._idStatus != value))
				{
					if (this._StatusAvaluo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidStatusChanging(value);
					this.SendPropertyChanging();
					this._idStatus = value;
					this.SendPropertyChanged("idStatus");
					this.OnidStatusChanged();
				}
			}
		}
		
		[Column(Storage="_idProposito", DbType="SmallInt NOT NULL")]
		public short idProposito
		{
			get
			{
				return this._idProposito;
			}
			set
			{
				if ((this._idProposito != value))
				{
					if (this._PropositoAvaluo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPropositoChanging(value);
					this.SendPropertyChanging();
					this._idProposito = value;
					this.SendPropertyChanged("idProposito");
					this.OnidPropositoChanged();
				}
			}
		}
		
		[Column(Storage="_especRecuperacion", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string especRecuperacion
		{
			get
			{
				return this._especRecuperacion;
			}
			set
			{
				if ((this._especRecuperacion != value))
				{
					this.OnespecRecuperacionChanging(value);
					this.SendPropertyChanging();
					this._especRecuperacion = value;
					this.SendPropertyChanged("especRecuperacion");
					this.OnespecRecuperacionChanged();
				}
			}
		}
		
		[Column(Storage="_especProposito", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string especProposito
		{
			get
			{
				return this._especProposito;
			}
			set
			{
				if ((this._especProposito != value))
				{
					this.OnespecPropositoChanging(value);
					this.SendPropertyChanging();
					this._especProposito = value;
					this.SendPropertyChanged("especProposito");
					this.OnespecPropositoChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[Column(Storage="_fechaFinalizacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaFinalizacion
		{
			get
			{
				return this._fechaFinalizacion;
			}
			set
			{
				if ((this._fechaFinalizacion != value))
				{
					this.OnfechaFinalizacionChanging(value);
					this.SendPropertyChanging();
					this._fechaFinalizacion = value;
					this.SendPropertyChanged("fechaFinalizacion");
					this.OnfechaFinalizacionChanged();
				}
			}
		}
		
		[Column(Storage="_promocionVIASC", DbType="Bit NOT NULL")]
		public bool promocionVIASC
		{
			get
			{
				return this._promocionVIASC;
			}
			set
			{
				if ((this._promocionVIASC != value))
				{
					this.OnpromocionVIASCChanging(value);
					this.SendPropertyChanging();
					this._promocionVIASC = value;
					this.SendPropertyChanged("promocionVIASC");
					this.OnpromocionVIASCChanged();
				}
			}
		}
		
		[Column(Storage="_operacionContado", DbType="Bit NOT NULL")]
		public bool operacionContado
		{
			get
			{
				return this._operacionContado;
			}
			set
			{
				if ((this._operacionContado != value))
				{
					this.OnoperacionContadoChanging(value);
					this.SendPropertyChanging();
					this._operacionContado = value;
					this.SendPropertyChanged("operacionContado");
					this.OnoperacionContadoChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit NOT NULL")]
		public bool activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_AsignacionAvaluo", Storage="_AsignacionAvaluo", ThisKey="idAvaluo", OtherKey="idAvaluo", IsUnique=true, IsForeignKey=false)]
		public AsignacionAvaluo AsignacionAvaluo
		{
			get
			{
				return this._AsignacionAvaluo.Entity;
			}
			set
			{
				AsignacionAvaluo previousValue = this._AsignacionAvaluo.Entity;
				if (((previousValue != value) 
							|| (this._AsignacionAvaluo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AsignacionAvaluo.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._AsignacionAvaluo.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
					}
					this.SendPropertyChanged("AsignacionAvaluo");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_AsignacionFolioSHF", Storage="_AsignacionFolioSHF", ThisKey="idAvaluo", OtherKey="idAvaluo", IsUnique=true, IsForeignKey=false)]
		public AsignacionFolioSHF AsignacionFolioSHF
		{
			get
			{
				return this._AsignacionFolioSHF.Entity;
			}
			set
			{
				AsignacionFolioSHF previousValue = this._AsignacionFolioSHF.Entity;
				if (((previousValue != value) 
							|| (this._AsignacionFolioSHF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AsignacionFolioSHF.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._AsignacionFolioSHF.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
					}
					this.SendPropertyChanged("AsignacionFolioSHF");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_ConclusionAvaluo", Storage="_ConclusionAvaluo", ThisKey="idAvaluo", OtherKey="idAvaluo", IsUnique=true, IsForeignKey=false)]
		public ConclusionAvaluo ConclusionAvaluo
		{
			get
			{
				return this._ConclusionAvaluo.Entity;
			}
			set
			{
				ConclusionAvaluo previousValue = this._ConclusionAvaluo.Entity;
				if (((previousValue != value) 
							|| (this._ConclusionAvaluo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConclusionAvaluo.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._ConclusionAvaluo.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
					}
					this.SendPropertyChanged("ConclusionAvaluo");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_DatoCredito", Storage="_DatoCredito", ThisKey="idAvaluo", OtherKey="idAvaluo", IsUnique=true, IsForeignKey=false)]
		public DatoCredito DatoCredito
		{
			get
			{
				return this._DatoCredito.Entity;
			}
			set
			{
				DatoCredito previousValue = this._DatoCredito.Entity;
				if (((previousValue != value) 
							|| (this._DatoCredito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoCredito.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._DatoCredito.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
					}
					this.SendPropertyChanged("DatoCredito");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_Declaraciones", Storage="_Declaraciones", ThisKey="idAvaluo", OtherKey="idAvaluo", IsUnique=true, IsForeignKey=false)]
		public Declaraciones Declaraciones
		{
			get
			{
				return this._Declaraciones.Entity;
			}
			set
			{
				Declaraciones previousValue = this._Declaraciones.Entity;
				if (((previousValue != value) 
							|| (this._Declaraciones.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Declaraciones.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._Declaraciones.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
					}
					this.SendPropertyChanged("Declaraciones");
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_RechazoAvaluo", Storage="_RechazoAvaluo", ThisKey="idAvaluo", OtherKey="idAvaluo")]
		public EntitySet<RechazoAvaluo> RechazoAvaluo
		{
			get
			{
				return this._RechazoAvaluo;
			}
			set
			{
				this._RechazoAvaluo.Assign(value);
			}
		}
		
		[Association(Name="AvaluoInmobiliario_RevisionAvaluo", Storage="_RevisionAvaluo", ThisKey="idAvaluo", OtherKey="idAvaluo")]
		public EntitySet<RevisionAvaluo> RevisionAvaluo
		{
			get
			{
				return this._RevisionAvaluo;
			}
			set
			{
				this._RevisionAvaluo.Assign(value);
			}
		}
		
		[Association(Name="Cliente_AvaluoInmobiliario", Storage="_Cliente", ThisKey="idCliente", OtherKey="idCliente", IsForeignKey=true)]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.AvaluoInmobiliario.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(Nullable<int>);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Inmueble_AvaluoInmobiliario", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true)]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.AvaluoInmobiliario = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		[Association(Name="PropositoAvaluo_AvaluoInmobiliario", Storage="_PropositoAvaluo", ThisKey="idProposito", OtherKey="idProposito", IsForeignKey=true)]
		public PropositoAvaluo PropositoAvaluo
		{
			get
			{
				return this._PropositoAvaluo.Entity;
			}
			set
			{
				PropositoAvaluo previousValue = this._PropositoAvaluo.Entity;
				if (((previousValue != value) 
							|| (this._PropositoAvaluo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PropositoAvaluo.Entity = null;
						previousValue.AvaluoInmobiliario.Remove(this);
					}
					this._PropositoAvaluo.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario.Add(this);
						this._idProposito = value.idProposito;
					}
					else
					{
						this._idProposito = default(short);
					}
					this.SendPropertyChanged("PropositoAvaluo");
				}
			}
		}
		
		[Association(Name="Solicitante_AvaluoInmobiliario", Storage="_Solicitante", ThisKey="idSolicitante", OtherKey="idSolicitante", IsForeignKey=true)]
		public Solicitante Solicitante
		{
			get
			{
				return this._Solicitante.Entity;
			}
			set
			{
				Solicitante previousValue = this._Solicitante.Entity;
				if (((previousValue != value) 
							|| (this._Solicitante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Solicitante.Entity = null;
						previousValue.AvaluoInmobiliario.Remove(this);
					}
					this._Solicitante.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario.Add(this);
						this._idSolicitante = value.idSolicitante;
					}
					else
					{
						this._idSolicitante = default(int);
					}
					this.SendPropertyChanged("Solicitante");
				}
			}
		}
		
		[Association(Name="StatusAvaluo_AvaluoInmobiliario", Storage="_StatusAvaluo", ThisKey="idStatus", OtherKey="idStatus", IsForeignKey=true)]
		public StatusAvaluo StatusAvaluo
		{
			get
			{
				return this._StatusAvaluo.Entity;
			}
			set
			{
				StatusAvaluo previousValue = this._StatusAvaluo.Entity;
				if (((previousValue != value) 
							|| (this._StatusAvaluo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StatusAvaluo.Entity = null;
						previousValue.AvaluoInmobiliario.Remove(this);
					}
					this._StatusAvaluo.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario.Add(this);
						this._idStatus = value.idStatus;
					}
					else
					{
						this._idStatus = default(short);
					}
					this.SendPropertyChanged("StatusAvaluo");
				}
			}
		}
		
		[Association(Name="TipoAvaluoInmobiliario_AvaluoInmobiliario", Storage="_TipoAvaluoInmobiliario", ThisKey="idSubTipo", OtherKey="idSubTipo", IsForeignKey=true)]
		public TipoAvaluoInmobiliario TipoAvaluoInmobiliario
		{
			get
			{
				return this._TipoAvaluoInmobiliario.Entity;
			}
			set
			{
				TipoAvaluoInmobiliario previousValue = this._TipoAvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._TipoAvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAvaluoInmobiliario.Entity = null;
						previousValue.AvaluoInmobiliario.Remove(this);
					}
					this._TipoAvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.AvaluoInmobiliario.Add(this);
						this._idSubTipo = value.idSubTipo;
					}
					else
					{
						this._idSubTipo = default(short);
					}
					this.SendPropertyChanged("TipoAvaluoInmobiliario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.AvaluoInmobiliario = this;
		}
		
		private void detach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.AvaluoInmobiliario = null;
		}
		
		private void attach_RevisionAvaluo(RevisionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.AvaluoInmobiliario = this;
		}
		
		private void detach_RevisionAvaluo(RevisionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.AvaluoInmobiliario = null;
		}
	}
	
	[Table(Name="dbo.AvaluoReferencia")]
	public partial class AvaluoReferencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluoReferencia;
		
		private int _idValuador;
		
		private int _idArchivo;
		
		private System.DateTime _fechaElaboracion;
		
		private EntityRef<Archivo> _Archivo;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoReferenciaChanging(int value);
    partial void OnidAvaluoReferenciaChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidArchivoChanging(int value);
    partial void OnidArchivoChanged();
    partial void OnfechaElaboracionChanging(System.DateTime value);
    partial void OnfechaElaboracionChanged();
    #endregion
		
		public AvaluoReferencia()
		{
			this._Archivo = default(EntityRef<Archivo>);
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluoReferencia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idAvaluoReferencia
		{
			get
			{
				return this._idAvaluoReferencia;
			}
			set
			{
				if ((this._idAvaluoReferencia != value))
				{
					this.OnidAvaluoReferenciaChanging(value);
					this.SendPropertyChanging();
					this._idAvaluoReferencia = value;
					this.SendPropertyChanged("idAvaluoReferencia");
					this.OnidAvaluoReferenciaChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL")]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idArchivo", DbType="Int NOT NULL")]
		public int idArchivo
		{
			get
			{
				return this._idArchivo;
			}
			set
			{
				if ((this._idArchivo != value))
				{
					if (this._Archivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidArchivoChanging(value);
					this.SendPropertyChanging();
					this._idArchivo = value;
					this.SendPropertyChanged("idArchivo");
					this.OnidArchivoChanged();
				}
			}
		}
		
		[Column(Storage="_fechaElaboracion", DbType="SmallDateTime NOT NULL")]
		public System.DateTime fechaElaboracion
		{
			get
			{
				return this._fechaElaboracion;
			}
			set
			{
				if ((this._fechaElaboracion != value))
				{
					this.OnfechaElaboracionChanging(value);
					this.SendPropertyChanging();
					this._fechaElaboracion = value;
					this.SendPropertyChanged("fechaElaboracion");
					this.OnfechaElaboracionChanged();
				}
			}
		}
		
		[Association(Name="Archivo_AvaluoReferencia", Storage="_Archivo", ThisKey="idArchivo", OtherKey="idArchivo", IsForeignKey=true)]
		public Archivo Archivo
		{
			get
			{
				return this._Archivo.Entity;
			}
			set
			{
				Archivo previousValue = this._Archivo.Entity;
				if (((previousValue != value) 
							|| (this._Archivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Archivo.Entity = null;
						previousValue.AvaluoReferencia.Remove(this);
					}
					this._Archivo.Entity = value;
					if ((value != null))
					{
						value.AvaluoReferencia.Add(this);
						this._idArchivo = value.idArchivo;
					}
					else
					{
						this._idArchivo = default(int);
					}
					this.SendPropertyChanged("Archivo");
				}
			}
		}
		
		[Association(Name="Valuador_AvaluoReferencia", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.AvaluoReferencia.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.AvaluoReferencia.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Banco")]
	public partial class Banco : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idBanco;
		
		private string _nombreBanco;
		
		private EntitySet<DatoBancario> _DatoBancario;
		
		private EntitySet<DatoBancario> _DatoBancario1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBancoChanging(short value);
    partial void OnidBancoChanged();
    partial void OnnombreBancoChanging(string value);
    partial void OnnombreBancoChanged();
    #endregion
		
		public Banco()
		{
			this._DatoBancario = new EntitySet<DatoBancario>(new Action<DatoBancario>(this.attach_DatoBancario), new Action<DatoBancario>(this.detach_DatoBancario));
			this._DatoBancario1 = new EntitySet<DatoBancario>(new Action<DatoBancario>(this.attach_DatoBancario1), new Action<DatoBancario>(this.detach_DatoBancario1));
			OnCreated();
		}
		
		[Column(Storage="_idBanco", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idBanco
		{
			get
			{
				return this._idBanco;
			}
			set
			{
				if ((this._idBanco != value))
				{
					this.OnidBancoChanging(value);
					this.SendPropertyChanging();
					this._idBanco = value;
					this.SendPropertyChanged("idBanco");
					this.OnidBancoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreBanco", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreBanco
		{
			get
			{
				return this._nombreBanco;
			}
			set
			{
				if ((this._nombreBanco != value))
				{
					this.OnnombreBancoChanging(value);
					this.SendPropertyChanging();
					this._nombreBanco = value;
					this.SendPropertyChanged("nombreBanco");
					this.OnnombreBancoChanged();
				}
			}
		}
		
		[Association(Name="Banco_DatoBancario", Storage="_DatoBancario", ThisKey="idBanco", OtherKey="idBancoEnvio")]
		public EntitySet<DatoBancario> DatoBancario
		{
			get
			{
				return this._DatoBancario;
			}
			set
			{
				this._DatoBancario.Assign(value);
			}
		}
		
		[Association(Name="Banco_DatoBancario1", Storage="_DatoBancario1", ThisKey="idBanco", OtherKey="idBancoRecepcion")]
		public EntitySet<DatoBancario> DatoBancario1
		{
			get
			{
				return this._DatoBancario1;
			}
			set
			{
				this._DatoBancario1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatoBancario(DatoBancario entity)
		{
			this.SendPropertyChanging();
			entity.Banco = this;
		}
		
		private void detach_DatoBancario(DatoBancario entity)
		{
			this.SendPropertyChanging();
			entity.Banco = null;
		}
		
		private void attach_DatoBancario1(DatoBancario entity)
		{
			this.SendPropertyChanging();
			entity.Banco1 = this;
		}
		
		private void detach_DatoBancario1(DatoBancario entity)
		{
			this.SendPropertyChanging();
			entity.Banco1 = null;
		}
	}
	
	[Table(Name="dbo.Carpeta")]
	public partial class Carpeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idCarpeta;
		
		private string _ruta;
		
		private string _descripcion;
		
		private EntitySet<Archivo> _Archivo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCarpetaChanging(short value);
    partial void OnidCarpetaChanged();
    partial void OnrutaChanging(string value);
    partial void OnrutaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public Carpeta()
		{
			this._Archivo = new EntitySet<Archivo>(new Action<Archivo>(this.attach_Archivo), new Action<Archivo>(this.detach_Archivo));
			OnCreated();
		}
		
		[Column(Storage="_idCarpeta", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idCarpeta
		{
			get
			{
				return this._idCarpeta;
			}
			set
			{
				if ((this._idCarpeta != value))
				{
					this.OnidCarpetaChanging(value);
					this.SendPropertyChanging();
					this._idCarpeta = value;
					this.SendPropertyChanged("idCarpeta");
					this.OnidCarpetaChanged();
				}
			}
		}
		
		[Column(Storage="_ruta", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ruta
		{
			get
			{
				return this._ruta;
			}
			set
			{
				if ((this._ruta != value))
				{
					this.OnrutaChanging(value);
					this.SendPropertyChanging();
					this._ruta = value;
					this.SendPropertyChanged("ruta");
					this.OnrutaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="Carpeta_Archivo", Storage="_Archivo", ThisKey="idCarpeta", OtherKey="idCarpeta")]
		public EntitySet<Archivo> Archivo
		{
			get
			{
				return this._Archivo;
			}
			set
			{
				this._Archivo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Archivo(Archivo entity)
		{
			this.SendPropertyChanging();
			entity.Carpeta = this;
		}
		
		private void detach_Archivo(Archivo entity)
		{
			this.SendPropertyChanging();
			entity.Carpeta = null;
		}
	}
	
	[Table(Name="dbo.Carrera")]
	public partial class Carrera : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idCarrera;
		
		private string _nombreCarrera;
		
		private bool _posgrado;
		
		private EntitySet<FormacionProfesional> _FormacionProfesional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCarreraChanging(short value);
    partial void OnidCarreraChanged();
    partial void OnnombreCarreraChanging(string value);
    partial void OnnombreCarreraChanged();
    partial void OnposgradoChanging(bool value);
    partial void OnposgradoChanged();
    #endregion
		
		public Carrera()
		{
			this._FormacionProfesional = new EntitySet<FormacionProfesional>(new Action<FormacionProfesional>(this.attach_FormacionProfesional), new Action<FormacionProfesional>(this.detach_FormacionProfesional));
			OnCreated();
		}
		
		[Column(Storage="_idCarrera", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idCarrera
		{
			get
			{
				return this._idCarrera;
			}
			set
			{
				if ((this._idCarrera != value))
				{
					this.OnidCarreraChanging(value);
					this.SendPropertyChanging();
					this._idCarrera = value;
					this.SendPropertyChanged("idCarrera");
					this.OnidCarreraChanged();
				}
			}
		}
		
		[Column(Storage="_nombreCarrera", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string nombreCarrera
		{
			get
			{
				return this._nombreCarrera;
			}
			set
			{
				if ((this._nombreCarrera != value))
				{
					this.OnnombreCarreraChanging(value);
					this.SendPropertyChanging();
					this._nombreCarrera = value;
					this.SendPropertyChanged("nombreCarrera");
					this.OnnombreCarreraChanged();
				}
			}
		}
		
		[Column(Storage="_posgrado", DbType="Bit NOT NULL")]
		public bool posgrado
		{
			get
			{
				return this._posgrado;
			}
			set
			{
				if ((this._posgrado != value))
				{
					this.OnposgradoChanging(value);
					this.SendPropertyChanging();
					this._posgrado = value;
					this.SendPropertyChanged("posgrado");
					this.OnposgradoChanged();
				}
			}
		}
		
		[Association(Name="Carrera_FormacionProfesional", Storage="_FormacionProfesional", ThisKey="idCarrera", OtherKey="idCarrera")]
		public EntitySet<FormacionProfesional> FormacionProfesional
		{
			get
			{
				return this._FormacionProfesional;
			}
			set
			{
				this._FormacionProfesional.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormacionProfesional(FormacionProfesional entity)
		{
			this.SendPropertyChanging();
			entity.Carrera = this;
		}
		
		private void detach_FormacionProfesional(FormacionProfesional entity)
		{
			this.SendPropertyChanging();
			entity.Carrera = null;
		}
	}
	
	[Table(Name="dbo.ClaseInmueble")]
	public partial class ClaseInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idClase;
		
		private string _descripcion;
		
		private System.Nullable<int> _vidaUtil;
		
		private EntitySet<TipoClasificacionZona> _TipoClasificacionZona;
		
		private EntitySet<TipoConstruccionPredominante> _TipoConstruccionPredominante;
		
		private EntitySet<TipoDensidad> _TipoDensidad;
		
		private EntitySet<TipoNivelSocioeconomico> _TipoNivelSocioeconomico;
		
		private EntitySet<TipoProximidadUrbana> _TipoProximidadUrbana;
		
		private EntitySet<TipoUsoSuelo> _TipoUsoSuelo;
		
		private EntitySet<ValorMaterial> _ValorMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClaseChanging(short value);
    partial void OnidClaseChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnvidaUtilChanging(System.Nullable<int> value);
    partial void OnvidaUtilChanged();
    #endregion
		
		public ClaseInmueble()
		{
			this._TipoClasificacionZona = new EntitySet<TipoClasificacionZona>(new Action<TipoClasificacionZona>(this.attach_TipoClasificacionZona), new Action<TipoClasificacionZona>(this.detach_TipoClasificacionZona));
			this._TipoConstruccionPredominante = new EntitySet<TipoConstruccionPredominante>(new Action<TipoConstruccionPredominante>(this.attach_TipoConstruccionPredominante), new Action<TipoConstruccionPredominante>(this.detach_TipoConstruccionPredominante));
			this._TipoDensidad = new EntitySet<TipoDensidad>(new Action<TipoDensidad>(this.attach_TipoDensidad), new Action<TipoDensidad>(this.detach_TipoDensidad));
			this._TipoNivelSocioeconomico = new EntitySet<TipoNivelSocioeconomico>(new Action<TipoNivelSocioeconomico>(this.attach_TipoNivelSocioeconomico), new Action<TipoNivelSocioeconomico>(this.detach_TipoNivelSocioeconomico));
			this._TipoProximidadUrbana = new EntitySet<TipoProximidadUrbana>(new Action<TipoProximidadUrbana>(this.attach_TipoProximidadUrbana), new Action<TipoProximidadUrbana>(this.detach_TipoProximidadUrbana));
			this._TipoUsoSuelo = new EntitySet<TipoUsoSuelo>(new Action<TipoUsoSuelo>(this.attach_TipoUsoSuelo), new Action<TipoUsoSuelo>(this.detach_TipoUsoSuelo));
			this._ValorMaterial = new EntitySet<ValorMaterial>(new Action<ValorMaterial>(this.attach_ValorMaterial), new Action<ValorMaterial>(this.detach_ValorMaterial));
			OnCreated();
		}
		
		[Column(Storage="_idClase", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_vidaUtil", DbType="Int")]
		public System.Nullable<int> vidaUtil
		{
			get
			{
				return this._vidaUtil;
			}
			set
			{
				if ((this._vidaUtil != value))
				{
					this.OnvidaUtilChanging(value);
					this.SendPropertyChanging();
					this._vidaUtil = value;
					this.SendPropertyChanged("vidaUtil");
					this.OnvidaUtilChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoClasificacionZona", Storage="_TipoClasificacionZona", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoClasificacionZona> TipoClasificacionZona
		{
			get
			{
				return this._TipoClasificacionZona;
			}
			set
			{
				this._TipoClasificacionZona.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_TipoConstruccionPredominante", Storage="_TipoConstruccionPredominante", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoConstruccionPredominante> TipoConstruccionPredominante
		{
			get
			{
				return this._TipoConstruccionPredominante;
			}
			set
			{
				this._TipoConstruccionPredominante.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_TipoDensidad", Storage="_TipoDensidad", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoDensidad> TipoDensidad
		{
			get
			{
				return this._TipoDensidad;
			}
			set
			{
				this._TipoDensidad.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_TipoNivelSocioeconomico", Storage="_TipoNivelSocioeconomico", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoNivelSocioeconomico> TipoNivelSocioeconomico
		{
			get
			{
				return this._TipoNivelSocioeconomico;
			}
			set
			{
				this._TipoNivelSocioeconomico.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_TipoProximidadUrbana", Storage="_TipoProximidadUrbana", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoProximidadUrbana> TipoProximidadUrbana
		{
			get
			{
				return this._TipoProximidadUrbana;
			}
			set
			{
				this._TipoProximidadUrbana.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_TipoUsoSuelo", Storage="_TipoUsoSuelo", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<TipoUsoSuelo> TipoUsoSuelo
		{
			get
			{
				return this._TipoUsoSuelo;
			}
			set
			{
				this._TipoUsoSuelo.Assign(value);
			}
		}
		
		[Association(Name="ClaseInmueble_ValorMaterial", Storage="_ValorMaterial", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<ValorMaterial> ValorMaterial
		{
			get
			{
				return this._ValorMaterial;
			}
			set
			{
				this._ValorMaterial.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoClasificacionZona(TipoClasificacionZona entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoClasificacionZona(TipoClasificacionZona entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_TipoConstruccionPredominante(TipoConstruccionPredominante entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoConstruccionPredominante(TipoConstruccionPredominante entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_TipoDensidad(TipoDensidad entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoDensidad(TipoDensidad entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_TipoNivelSocioeconomico(TipoNivelSocioeconomico entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoNivelSocioeconomico(TipoNivelSocioeconomico entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_TipoProximidadUrbana(TipoProximidadUrbana entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoProximidadUrbana(TipoProximidadUrbana entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_TipoUsoSuelo(TipoUsoSuelo entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_TipoUsoSuelo(TipoUsoSuelo entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
		
		private void attach_ValorMaterial(ValorMaterial entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = this;
		}
		
		private void detach_ValorMaterial(ValorMaterial entity)
		{
			this.SendPropertyChanging();
			entity.ClaseInmueble = null;
		}
	}
	
	[Table(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCliente;
		
		private int _idDireccion;
		
		private int _idDatoContacto;
		
		private System.Nullable<int> _idDatoPaqueteria;
		
		private System.Nullable<int> _idDatoBancario;
		
		private System.Nullable<int> _idLogotipo;
		
		private string _nombre;
		
		private string _paginaWeb;
		
		private System.DateTime _fechaAlta;
		
		private bool _activo;
		
		private EntitySet<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntitySet<UsuarioCliente> _UsuarioCliente;
		
		private EntityRef<Archivo> _Archivo;
		
		private EntityRef<DatoBancario> _DatoBancario;
		
		private EntityRef<DatoContacto> _DatoContacto;
		
		private EntityRef<DatoPaqueteria> _DatoPaqueteria;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnidDatoContactoChanging(int value);
    partial void OnidDatoContactoChanged();
    partial void OnidDatoPaqueteriaChanging(System.Nullable<int> value);
    partial void OnidDatoPaqueteriaChanged();
    partial void OnidDatoBancarioChanging(System.Nullable<int> value);
    partial void OnidDatoBancarioChanged();
    partial void OnidLogotipoChanging(System.Nullable<int> value);
    partial void OnidLogotipoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnpaginaWebChanging(string value);
    partial void OnpaginaWebChanged();
    partial void OnfechaAltaChanging(System.DateTime value);
    partial void OnfechaAltaChanged();
    partial void OnactivoChanging(bool value);
    partial void OnactivoChanged();
    #endregion
		
		public Cliente()
		{
			this._AvaluoInmobiliario = new EntitySet<AvaluoInmobiliario>(new Action<AvaluoInmobiliario>(this.attach_AvaluoInmobiliario), new Action<AvaluoInmobiliario>(this.detach_AvaluoInmobiliario));
			this._UsuarioCliente = new EntitySet<UsuarioCliente>(new Action<UsuarioCliente>(this.attach_UsuarioCliente), new Action<UsuarioCliente>(this.detach_UsuarioCliente));
			this._Archivo = default(EntityRef<Archivo>);
			this._DatoBancario = default(EntityRef<DatoBancario>);
			this._DatoContacto = default(EntityRef<DatoContacto>);
			this._DatoPaqueteria = default(EntityRef<DatoPaqueteria>);
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoContacto", DbType="Int NOT NULL")]
		public int idDatoContacto
		{
			get
			{
				return this._idDatoContacto;
			}
			set
			{
				if ((this._idDatoContacto != value))
				{
					if (this._DatoContacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoContactoChanging(value);
					this.SendPropertyChanging();
					this._idDatoContacto = value;
					this.SendPropertyChanged("idDatoContacto");
					this.OnidDatoContactoChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoPaqueteria", DbType="Int")]
		public System.Nullable<int> idDatoPaqueteria
		{
			get
			{
				return this._idDatoPaqueteria;
			}
			set
			{
				if ((this._idDatoPaqueteria != value))
				{
					if (this._DatoPaqueteria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoPaqueteriaChanging(value);
					this.SendPropertyChanging();
					this._idDatoPaqueteria = value;
					this.SendPropertyChanged("idDatoPaqueteria");
					this.OnidDatoPaqueteriaChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoBancario", DbType="Int")]
		public System.Nullable<int> idDatoBancario
		{
			get
			{
				return this._idDatoBancario;
			}
			set
			{
				if ((this._idDatoBancario != value))
				{
					if (this._DatoBancario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoBancarioChanging(value);
					this.SendPropertyChanging();
					this._idDatoBancario = value;
					this.SendPropertyChanged("idDatoBancario");
					this.OnidDatoBancarioChanged();
				}
			}
		}
		
		[Column(Storage="_idLogotipo", DbType="Int")]
		public System.Nullable<int> idLogotipo
		{
			get
			{
				return this._idLogotipo;
			}
			set
			{
				if ((this._idLogotipo != value))
				{
					if (this._Archivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLogotipoChanging(value);
					this.SendPropertyChanging();
					this._idLogotipo = value;
					this.SendPropertyChanged("idLogotipo");
					this.OnidLogotipoChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_paginaWeb", DbType="NVarChar(50)")]
		public string paginaWeb
		{
			get
			{
				return this._paginaWeb;
			}
			set
			{
				if ((this._paginaWeb != value))
				{
					this.OnpaginaWebChanging(value);
					this.SendPropertyChanging();
					this._paginaWeb = value;
					this.SendPropertyChanged("paginaWeb");
					this.OnpaginaWebChanged();
				}
			}
		}
		
		[Column(Storage="_fechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime fechaAlta
		{
			get
			{
				return this._fechaAlta;
			}
			set
			{
				if ((this._fechaAlta != value))
				{
					this.OnfechaAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaAlta = value;
					this.SendPropertyChanged("fechaAlta");
					this.OnfechaAltaChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit NOT NULL")]
		public bool activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Association(Name="Cliente_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idCliente", OtherKey="idCliente")]
		public EntitySet<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario;
			}
			set
			{
				this._AvaluoInmobiliario.Assign(value);
			}
		}
		
		[Association(Name="Cliente_UsuarioCliente", Storage="_UsuarioCliente", ThisKey="idCliente", OtherKey="idCliente")]
		public EntitySet<UsuarioCliente> UsuarioCliente
		{
			get
			{
				return this._UsuarioCliente;
			}
			set
			{
				this._UsuarioCliente.Assign(value);
			}
		}
		
		[Association(Name="Archivo_Cliente", Storage="_Archivo", ThisKey="idLogotipo", OtherKey="idArchivo", IsForeignKey=true, DeleteRule="SET NULL")]
		public Archivo Archivo
		{
			get
			{
				return this._Archivo.Entity;
			}
			set
			{
				Archivo previousValue = this._Archivo.Entity;
				if (((previousValue != value) 
							|| (this._Archivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Archivo.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Archivo.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idLogotipo = value.idArchivo;
					}
					else
					{
						this._idLogotipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Archivo");
				}
			}
		}
		
		[Association(Name="DatoBancario_Cliente", Storage="_DatoBancario", ThisKey="idDatoBancario", OtherKey="idDatoBancario", IsForeignKey=true, DeleteRule="SET NULL")]
		public DatoBancario DatoBancario
		{
			get
			{
				return this._DatoBancario.Entity;
			}
			set
			{
				DatoBancario previousValue = this._DatoBancario.Entity;
				if (((previousValue != value) 
							|| (this._DatoBancario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoBancario.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._DatoBancario.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idDatoBancario = value.idDatoBancario;
					}
					else
					{
						this._idDatoBancario = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatoBancario");
				}
			}
		}
		
		[Association(Name="DatoContacto_Cliente", Storage="_DatoContacto", ThisKey="idDatoContacto", OtherKey="idDatoContacto", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DatoContacto DatoContacto
		{
			get
			{
				return this._DatoContacto.Entity;
			}
			set
			{
				DatoContacto previousValue = this._DatoContacto.Entity;
				if (((previousValue != value) 
							|| (this._DatoContacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoContacto.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._DatoContacto.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idDatoContacto = value.idDatoContacto;
					}
					else
					{
						this._idDatoContacto = default(int);
					}
					this.SendPropertyChanged("DatoContacto");
				}
			}
		}
		
		[Association(Name="DatoPaqueteria_Cliente", Storage="_DatoPaqueteria", ThisKey="idDatoPaqueteria", OtherKey="idDatoPaqueteria", IsForeignKey=true)]
		public DatoPaqueteria DatoPaqueteria
		{
			get
			{
				return this._DatoPaqueteria.Entity;
			}
			set
			{
				DatoPaqueteria previousValue = this._DatoPaqueteria.Entity;
				if (((previousValue != value) 
							|| (this._DatoPaqueteria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoPaqueteria.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._DatoPaqueteria.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idDatoPaqueteria = value.idDatoPaqueteria;
					}
					else
					{
						this._idDatoPaqueteria = default(Nullable<int>);
					}
					this.SendPropertyChanged("DatoPaqueteria");
				}
			}
		}
		
		[Association(Name="Direccion_Cliente", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.Cliente.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.Cliente.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
		
		private void attach_UsuarioCliente(UsuarioCliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = this;
		}
		
		private void detach_UsuarioCliente(UsuarioCliente entity)
		{
			this.SendPropertyChanging();
			entity.Cliente = null;
		}
	}
	
	[Table(Name="dbo.CodigoPostal")]
	public partial class CodigoPostal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCodigoPostal;
		
		private int _idAsentamiento;
		
		private string _codigoPostal1;
		
		private bool _capturado;
		
		private EntitySet<Direccion> _Direccion;
		
		private EntitySet<DireccionInmueble> _DireccionInmueble;
		
		private EntityRef<Asentamiento> _Asentamiento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCodigoPostalChanging(int value);
    partial void OnidCodigoPostalChanged();
    partial void OnidAsentamientoChanging(int value);
    partial void OnidAsentamientoChanged();
    partial void OncodigoPostal1Changing(string value);
    partial void OncodigoPostal1Changed();
    partial void OncapturadoChanging(bool value);
    partial void OncapturadoChanged();
    #endregion
		
		public CodigoPostal()
		{
			this._Direccion = new EntitySet<Direccion>(new Action<Direccion>(this.attach_Direccion), new Action<Direccion>(this.detach_Direccion));
			this._DireccionInmueble = new EntitySet<DireccionInmueble>(new Action<DireccionInmueble>(this.attach_DireccionInmueble), new Action<DireccionInmueble>(this.detach_DireccionInmueble));
			this._Asentamiento = default(EntityRef<Asentamiento>);
			OnCreated();
		}
		
		[Column(Storage="_idCodigoPostal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCodigoPostal
		{
			get
			{
				return this._idCodigoPostal;
			}
			set
			{
				if ((this._idCodigoPostal != value))
				{
					this.OnidCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._idCodigoPostal = value;
					this.SendPropertyChanged("idCodigoPostal");
					this.OnidCodigoPostalChanged();
				}
			}
		}
		
		[Column(Storage="_idAsentamiento", DbType="Int NOT NULL")]
		public int idAsentamiento
		{
			get
			{
				return this._idAsentamiento;
			}
			set
			{
				if ((this._idAsentamiento != value))
				{
					if (this._Asentamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAsentamientoChanging(value);
					this.SendPropertyChanging();
					this._idAsentamiento = value;
					this.SendPropertyChanged("idAsentamiento");
					this.OnidAsentamientoChanged();
				}
			}
		}
		
		[Column(Name="codigoPostal", Storage="_codigoPostal1", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string codigoPostal1
		{
			get
			{
				return this._codigoPostal1;
			}
			set
			{
				if ((this._codigoPostal1 != value))
				{
					this.OncodigoPostal1Changing(value);
					this.SendPropertyChanging();
					this._codigoPostal1 = value;
					this.SendPropertyChanged("codigoPostal1");
					this.OncodigoPostal1Changed();
				}
			}
		}
		
		[Column(Storage="_capturado", DbType="Bit NOT NULL")]
		public bool capturado
		{
			get
			{
				return this._capturado;
			}
			set
			{
				if ((this._capturado != value))
				{
					this.OncapturadoChanging(value);
					this.SendPropertyChanging();
					this._capturado = value;
					this.SendPropertyChanged("capturado");
					this.OncapturadoChanged();
				}
			}
		}
		
		[Association(Name="CodigoPostal_Direccion", Storage="_Direccion", ThisKey="idCodigoPostal", OtherKey="idCodigoPostal")]
		public EntitySet<Direccion> Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				this._Direccion.Assign(value);
			}
		}
		
		[Association(Name="CodigoPostal_DireccionInmueble", Storage="_DireccionInmueble", ThisKey="idCodigoPostal", OtherKey="idDireccion")]
		public EntitySet<DireccionInmueble> DireccionInmueble
		{
			get
			{
				return this._DireccionInmueble;
			}
			set
			{
				this._DireccionInmueble.Assign(value);
			}
		}
		
		[Association(Name="Asentamiento_CodigoPostal", Storage="_Asentamiento", ThisKey="idAsentamiento", OtherKey="idAsentamiento", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Asentamiento Asentamiento
		{
			get
			{
				return this._Asentamiento.Entity;
			}
			set
			{
				Asentamiento previousValue = this._Asentamiento.Entity;
				if (((previousValue != value) 
							|| (this._Asentamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asentamiento.Entity = null;
						previousValue.CodigoPostal.Remove(this);
					}
					this._Asentamiento.Entity = value;
					if ((value != null))
					{
						value.CodigoPostal.Add(this);
						this._idAsentamiento = value.idAsentamiento;
					}
					else
					{
						this._idAsentamiento = default(int);
					}
					this.SendPropertyChanged("Asentamiento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Direccion(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.CodigoPostal = this;
		}
		
		private void detach_Direccion(Direccion entity)
		{
			this.SendPropertyChanging();
			entity.CodigoPostal = null;
		}
		
		private void attach_DireccionInmueble(DireccionInmueble entity)
		{
			this.SendPropertyChanging();
			entity.CodigoPostal = this;
		}
		
		private void detach_DireccionInmueble(DireccionInmueble entity)
		{
			this.SendPropertyChanging();
			entity.CodigoPostal = null;
		}
	}
	
	[Table(Name="dbo.ColegioValuadores")]
	public partial class ColegioValuadores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idcolegioValuadores;
		
		private string _nombreColegio;
		
		private EntitySet<FormacionValuador> _FormacionValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidcolegioValuadoresChanging(short value);
    partial void OnidcolegioValuadoresChanged();
    partial void OnnombreColegioChanging(string value);
    partial void OnnombreColegioChanged();
    #endregion
		
		public ColegioValuadores()
		{
			this._FormacionValuador = new EntitySet<FormacionValuador>(new Action<FormacionValuador>(this.attach_FormacionValuador), new Action<FormacionValuador>(this.detach_FormacionValuador));
			OnCreated();
		}
		
		[Column(Storage="_idcolegioValuadores", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idcolegioValuadores
		{
			get
			{
				return this._idcolegioValuadores;
			}
			set
			{
				if ((this._idcolegioValuadores != value))
				{
					this.OnidcolegioValuadoresChanging(value);
					this.SendPropertyChanging();
					this._idcolegioValuadores = value;
					this.SendPropertyChanged("idcolegioValuadores");
					this.OnidcolegioValuadoresChanged();
				}
			}
		}
		
		[Column(Storage="_nombreColegio", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string nombreColegio
		{
			get
			{
				return this._nombreColegio;
			}
			set
			{
				if ((this._nombreColegio != value))
				{
					this.OnnombreColegioChanging(value);
					this.SendPropertyChanging();
					this._nombreColegio = value;
					this.SendPropertyChanged("nombreColegio");
					this.OnnombreColegioChanged();
				}
			}
		}
		
		[Association(Name="ColegioValuadores_FormacionValuador", Storage="_FormacionValuador", ThisKey="idcolegioValuadores", OtherKey="idColegio")]
		public EntitySet<FormacionValuador> FormacionValuador
		{
			get
			{
				return this._FormacionValuador;
			}
			set
			{
				this._FormacionValuador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormacionValuador(FormacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.ColegioValuadores = this;
		}
		
		private void detach_FormacionValuador(FormacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.ColegioValuadores = null;
		}
	}
	
	[Table(Name="dbo.ConclusionAvaluo")]
	public partial class ConclusionAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private string _comentarios;
		
		private decimal _valorConcluido;
		
		private string _consideraciones;
		
		private string _observaciones;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OncomentariosChanging(string value);
    partial void OncomentariosChanged();
    partial void OnvalorConcluidoChanging(decimal value);
    partial void OnvalorConcluidoChanged();
    partial void OnconsideracionesChanging(string value);
    partial void OnconsideracionesChanged();
    partial void OnobservacionesChanging(string value);
    partial void OnobservacionesChanged();
    #endregion
		
		public ConclusionAvaluo()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_comentarios", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string comentarios
		{
			get
			{
				return this._comentarios;
			}
			set
			{
				if ((this._comentarios != value))
				{
					this.OncomentariosChanging(value);
					this.SendPropertyChanging();
					this._comentarios = value;
					this.SendPropertyChanged("comentarios");
					this.OncomentariosChanged();
				}
			}
		}
		
		[Column(Storage="_valorConcluido", DbType="Money NOT NULL")]
		public decimal valorConcluido
		{
			get
			{
				return this._valorConcluido;
			}
			set
			{
				if ((this._valorConcluido != value))
				{
					this.OnvalorConcluidoChanging(value);
					this.SendPropertyChanging();
					this._valorConcluido = value;
					this.SendPropertyChanged("valorConcluido");
					this.OnvalorConcluidoChanged();
				}
			}
		}
		
		[Column(Storage="_consideraciones", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string consideraciones
		{
			get
			{
				return this._consideraciones;
			}
			set
			{
				if ((this._consideraciones != value))
				{
					this.OnconsideracionesChanging(value);
					this.SendPropertyChanging();
					this._consideraciones = value;
					this.SendPropertyChanged("consideraciones");
					this.OnconsideracionesChanged();
				}
			}
		}
		
		[Column(Storage="_observaciones", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string observaciones
		{
			get
			{
				return this._observaciones;
			}
			set
			{
				if ((this._observaciones != value))
				{
					this.OnobservacionesChanging(value);
					this.SendPropertyChanging();
					this._observaciones = value;
					this.SendPropertyChanged("observaciones");
					this.OnobservacionesChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_ConclusionAvaluo", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true)]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.ConclusionAvaluo = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.ConclusionAvaluo = this;
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Consulta")]
	public partial class Consulta
	{
		
		private short _idEntidad;
		
		private int _idTipoCredito;
		
		private string _clave;
		
		private string _nombre;
		
		private int _financiamiento;
		
		private int _cofinanciamiento;
		
		public Consulta()
		{
		}
		
		[Column(Storage="_idEntidad", DbType="SmallInt NOT NULL")]
		public short idEntidad
		{
			get
			{
				return this._idEntidad;
			}
			set
			{
				if ((this._idEntidad != value))
				{
					this._idEntidad = value;
				}
			}
		}
		
		[Column(Storage="_idTipoCredito", DbType="Int NOT NULL")]
		public int idTipoCredito
		{
			get
			{
				return this._idTipoCredito;
			}
			set
			{
				if ((this._idTipoCredito != value))
				{
					this._idTipoCredito = value;
				}
			}
		}
		
		[Column(Storage="_clave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this._clave = value;
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this._nombre = value;
				}
			}
		}
		
		[Column(Storage="_financiamiento", DbType="Int NOT NULL")]
		public int financiamiento
		{
			get
			{
				return this._financiamiento;
			}
			set
			{
				if ((this._financiamiento != value))
				{
					this._financiamiento = value;
				}
			}
		}
		
		[Column(Storage="_cofinanciamiento", DbType="Int NOT NULL")]
		public int cofinanciamiento
		{
			get
			{
				return this._cofinanciamiento;
			}
			set
			{
				if ((this._cofinanciamiento != value))
				{
					this._cofinanciamiento = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DatoAcabados")]
	public partial class DatoAcabados
	{
		
		private int _idDatoAcabado;
		
		private string _salaPisos;
		
		private string _salaMuros;
		
		private string _salaPlafones;
		
		private string _comedorPisos;
		
		private string _comedorMuros;
		
		private string _comedorPlafones;
		
		private string _cocinaPisos;
		
		private string _cocinaMuros;
		
		private string _cocinaPlafones;
		
		private string _recamarasPisos;
		
		private string _recamarasMuros;
		
		private string _recamarasPlafones;
		
		private string _banosPisos;
		
		private string _banosMuros;
		
		private string _banosPlafones;
		
		private string _patiosPisos;
		
		private string _patiosMuros;
		
		private string _patiosPlafones;
		
		private string _estacionamientoPisos;
		
		private string _estacionamientoMuros;
		
		private string _estacionamientoPlafones;
		
		private string _fachadaPisos;
		
		public DatoAcabados()
		{
		}
		
		[Column(Storage="_idDatoAcabado", DbType="Int NOT NULL")]
		public int idDatoAcabado
		{
			get
			{
				return this._idDatoAcabado;
			}
			set
			{
				if ((this._idDatoAcabado != value))
				{
					this._idDatoAcabado = value;
				}
			}
		}
		
		[Column(Storage="_salaPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string salaPisos
		{
			get
			{
				return this._salaPisos;
			}
			set
			{
				if ((this._salaPisos != value))
				{
					this._salaPisos = value;
				}
			}
		}
		
		[Column(Storage="_salaMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string salaMuros
		{
			get
			{
				return this._salaMuros;
			}
			set
			{
				if ((this._salaMuros != value))
				{
					this._salaMuros = value;
				}
			}
		}
		
		[Column(Storage="_salaPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string salaPlafones
		{
			get
			{
				return this._salaPlafones;
			}
			set
			{
				if ((this._salaPlafones != value))
				{
					this._salaPlafones = value;
				}
			}
		}
		
		[Column(Storage="_comedorPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string comedorPisos
		{
			get
			{
				return this._comedorPisos;
			}
			set
			{
				if ((this._comedorPisos != value))
				{
					this._comedorPisos = value;
				}
			}
		}
		
		[Column(Storage="_comedorMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string comedorMuros
		{
			get
			{
				return this._comedorMuros;
			}
			set
			{
				if ((this._comedorMuros != value))
				{
					this._comedorMuros = value;
				}
			}
		}
		
		[Column(Storage="_comedorPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string comedorPlafones
		{
			get
			{
				return this._comedorPlafones;
			}
			set
			{
				if ((this._comedorPlafones != value))
				{
					this._comedorPlafones = value;
				}
			}
		}
		
		[Column(Storage="_cocinaPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cocinaPisos
		{
			get
			{
				return this._cocinaPisos;
			}
			set
			{
				if ((this._cocinaPisos != value))
				{
					this._cocinaPisos = value;
				}
			}
		}
		
		[Column(Storage="_cocinaMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cocinaMuros
		{
			get
			{
				return this._cocinaMuros;
			}
			set
			{
				if ((this._cocinaMuros != value))
				{
					this._cocinaMuros = value;
				}
			}
		}
		
		[Column(Storage="_cocinaPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string cocinaPlafones
		{
			get
			{
				return this._cocinaPlafones;
			}
			set
			{
				if ((this._cocinaPlafones != value))
				{
					this._cocinaPlafones = value;
				}
			}
		}
		
		[Column(Storage="_recamarasPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string recamarasPisos
		{
			get
			{
				return this._recamarasPisos;
			}
			set
			{
				if ((this._recamarasPisos != value))
				{
					this._recamarasPisos = value;
				}
			}
		}
		
		[Column(Storage="_recamarasMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string recamarasMuros
		{
			get
			{
				return this._recamarasMuros;
			}
			set
			{
				if ((this._recamarasMuros != value))
				{
					this._recamarasMuros = value;
				}
			}
		}
		
		[Column(Storage="_recamarasPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string recamarasPlafones
		{
			get
			{
				return this._recamarasPlafones;
			}
			set
			{
				if ((this._recamarasPlafones != value))
				{
					this._recamarasPlafones = value;
				}
			}
		}
		
		[Column(Storage="_banosPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string banosPisos
		{
			get
			{
				return this._banosPisos;
			}
			set
			{
				if ((this._banosPisos != value))
				{
					this._banosPisos = value;
				}
			}
		}
		
		[Column(Storage="_banosMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string banosMuros
		{
			get
			{
				return this._banosMuros;
			}
			set
			{
				if ((this._banosMuros != value))
				{
					this._banosMuros = value;
				}
			}
		}
		
		[Column(Storage="_banosPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string banosPlafones
		{
			get
			{
				return this._banosPlafones;
			}
			set
			{
				if ((this._banosPlafones != value))
				{
					this._banosPlafones = value;
				}
			}
		}
		
		[Column(Storage="_patiosPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string patiosPisos
		{
			get
			{
				return this._patiosPisos;
			}
			set
			{
				if ((this._patiosPisos != value))
				{
					this._patiosPisos = value;
				}
			}
		}
		
		[Column(Storage="_patiosMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string patiosMuros
		{
			get
			{
				return this._patiosMuros;
			}
			set
			{
				if ((this._patiosMuros != value))
				{
					this._patiosMuros = value;
				}
			}
		}
		
		[Column(Storage="_patiosPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string patiosPlafones
		{
			get
			{
				return this._patiosPlafones;
			}
			set
			{
				if ((this._patiosPlafones != value))
				{
					this._patiosPlafones = value;
				}
			}
		}
		
		[Column(Storage="_estacionamientoPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string estacionamientoPisos
		{
			get
			{
				return this._estacionamientoPisos;
			}
			set
			{
				if ((this._estacionamientoPisos != value))
				{
					this._estacionamientoPisos = value;
				}
			}
		}
		
		[Column(Storage="_estacionamientoMuros", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string estacionamientoMuros
		{
			get
			{
				return this._estacionamientoMuros;
			}
			set
			{
				if ((this._estacionamientoMuros != value))
				{
					this._estacionamientoMuros = value;
				}
			}
		}
		
		[Column(Storage="_estacionamientoPlafones", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string estacionamientoPlafones
		{
			get
			{
				return this._estacionamientoPlafones;
			}
			set
			{
				if ((this._estacionamientoPlafones != value))
				{
					this._estacionamientoPlafones = value;
				}
			}
		}
		
		[Column(Storage="_fachadaPisos", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string fachadaPisos
		{
			get
			{
				return this._fachadaPisos;
			}
			set
			{
				if ((this._fachadaPisos != value))
				{
					this._fachadaPisos = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.DatoBancario")]
	public partial class DatoBancario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatoBancario;
		
		private short _idBancoRecepcion;
		
		private System.Nullable<short> _idBancoEnvio;
		
		private string _sucursalRecepcion;
		
		private string _cuentaRecepcion;
		
		private string _CLABERecepcion;
		
		private string _beneficiarioRecepcion;
		
		private string _refNumericaRecepcion;
		
		private string _refAlfanumericaRecepcion;
		
		private string _refNumericaEnvio;
		
		private string _refAlfanuericaEnvio;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntityRef<Banco> _Banco;
		
		private EntityRef<Banco> _Banco1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatoBancarioChanging(int value);
    partial void OnidDatoBancarioChanged();
    partial void OnidBancoRecepcionChanging(short value);
    partial void OnidBancoRecepcionChanged();
    partial void OnidBancoEnvioChanging(System.Nullable<short> value);
    partial void OnidBancoEnvioChanged();
    partial void OnsucursalRecepcionChanging(string value);
    partial void OnsucursalRecepcionChanged();
    partial void OncuentaRecepcionChanging(string value);
    partial void OncuentaRecepcionChanged();
    partial void OnCLABERecepcionChanging(string value);
    partial void OnCLABERecepcionChanged();
    partial void OnbeneficiarioRecepcionChanging(string value);
    partial void OnbeneficiarioRecepcionChanged();
    partial void OnrefNumericaRecepcionChanging(string value);
    partial void OnrefNumericaRecepcionChanged();
    partial void OnrefAlfanumericaRecepcionChanging(string value);
    partial void OnrefAlfanumericaRecepcionChanged();
    partial void OnrefNumericaEnvioChanging(string value);
    partial void OnrefNumericaEnvioChanged();
    partial void OnrefAlfanuericaEnvioChanging(string value);
    partial void OnrefAlfanuericaEnvioChanged();
    #endregion
		
		public DatoBancario()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Banco = default(EntityRef<Banco>);
			this._Banco1 = default(EntityRef<Banco>);
			OnCreated();
		}
		
		[Column(Storage="_idDatoBancario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDatoBancario
		{
			get
			{
				return this._idDatoBancario;
			}
			set
			{
				if ((this._idDatoBancario != value))
				{
					this.OnidDatoBancarioChanging(value);
					this.SendPropertyChanging();
					this._idDatoBancario = value;
					this.SendPropertyChanged("idDatoBancario");
					this.OnidDatoBancarioChanged();
				}
			}
		}
		
		[Column(Storage="_idBancoRecepcion", DbType="SmallInt NOT NULL")]
		public short idBancoRecepcion
		{
			get
			{
				return this._idBancoRecepcion;
			}
			set
			{
				if ((this._idBancoRecepcion != value))
				{
					if (this._Banco1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBancoRecepcionChanging(value);
					this.SendPropertyChanging();
					this._idBancoRecepcion = value;
					this.SendPropertyChanged("idBancoRecepcion");
					this.OnidBancoRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_idBancoEnvio", DbType="SmallInt")]
		public System.Nullable<short> idBancoEnvio
		{
			get
			{
				return this._idBancoEnvio;
			}
			set
			{
				if ((this._idBancoEnvio != value))
				{
					if (this._Banco.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidBancoEnvioChanging(value);
					this.SendPropertyChanging();
					this._idBancoEnvio = value;
					this.SendPropertyChanged("idBancoEnvio");
					this.OnidBancoEnvioChanged();
				}
			}
		}
		
		[Column(Storage="_sucursalRecepcion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string sucursalRecepcion
		{
			get
			{
				return this._sucursalRecepcion;
			}
			set
			{
				if ((this._sucursalRecepcion != value))
				{
					this.OnsucursalRecepcionChanging(value);
					this.SendPropertyChanging();
					this._sucursalRecepcion = value;
					this.SendPropertyChanged("sucursalRecepcion");
					this.OnsucursalRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_cuentaRecepcion", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string cuentaRecepcion
		{
			get
			{
				return this._cuentaRecepcion;
			}
			set
			{
				if ((this._cuentaRecepcion != value))
				{
					this.OncuentaRecepcionChanging(value);
					this.SendPropertyChanging();
					this._cuentaRecepcion = value;
					this.SendPropertyChanged("cuentaRecepcion");
					this.OncuentaRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_CLABERecepcion", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string CLABERecepcion
		{
			get
			{
				return this._CLABERecepcion;
			}
			set
			{
				if ((this._CLABERecepcion != value))
				{
					this.OnCLABERecepcionChanging(value);
					this.SendPropertyChanging();
					this._CLABERecepcion = value;
					this.SendPropertyChanged("CLABERecepcion");
					this.OnCLABERecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_beneficiarioRecepcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string beneficiarioRecepcion
		{
			get
			{
				return this._beneficiarioRecepcion;
			}
			set
			{
				if ((this._beneficiarioRecepcion != value))
				{
					this.OnbeneficiarioRecepcionChanging(value);
					this.SendPropertyChanging();
					this._beneficiarioRecepcion = value;
					this.SendPropertyChanged("beneficiarioRecepcion");
					this.OnbeneficiarioRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_refNumericaRecepcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string refNumericaRecepcion
		{
			get
			{
				return this._refNumericaRecepcion;
			}
			set
			{
				if ((this._refNumericaRecepcion != value))
				{
					this.OnrefNumericaRecepcionChanging(value);
					this.SendPropertyChanging();
					this._refNumericaRecepcion = value;
					this.SendPropertyChanged("refNumericaRecepcion");
					this.OnrefNumericaRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_refAlfanumericaRecepcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string refAlfanumericaRecepcion
		{
			get
			{
				return this._refAlfanumericaRecepcion;
			}
			set
			{
				if ((this._refAlfanumericaRecepcion != value))
				{
					this.OnrefAlfanumericaRecepcionChanging(value);
					this.SendPropertyChanging();
					this._refAlfanumericaRecepcion = value;
					this.SendPropertyChanged("refAlfanumericaRecepcion");
					this.OnrefAlfanumericaRecepcionChanged();
				}
			}
		}
		
		[Column(Storage="_refNumericaEnvio", DbType="NVarChar(30)")]
		public string refNumericaEnvio
		{
			get
			{
				return this._refNumericaEnvio;
			}
			set
			{
				if ((this._refNumericaEnvio != value))
				{
					this.OnrefNumericaEnvioChanging(value);
					this.SendPropertyChanging();
					this._refNumericaEnvio = value;
					this.SendPropertyChanged("refNumericaEnvio");
					this.OnrefNumericaEnvioChanged();
				}
			}
		}
		
		[Column(Storage="_refAlfanuericaEnvio", DbType="NVarChar(30)")]
		public string refAlfanuericaEnvio
		{
			get
			{
				return this._refAlfanuericaEnvio;
			}
			set
			{
				if ((this._refAlfanuericaEnvio != value))
				{
					this.OnrefAlfanuericaEnvioChanging(value);
					this.SendPropertyChanging();
					this._refAlfanuericaEnvio = value;
					this.SendPropertyChanged("refAlfanuericaEnvio");
					this.OnrefAlfanuericaEnvioChanged();
				}
			}
		}
		
		[Association(Name="DatoBancario_Valuador", Storage="_Valuador", ThisKey="idDatoBancario", OtherKey="idDatoBancario")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="DatoBancario_Cliente", Storage="_Cliente", ThisKey="idDatoBancario", OtherKey="idDatoBancario")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[Association(Name="Banco_DatoBancario", Storage="_Banco", ThisKey="idBancoEnvio", OtherKey="idBanco", IsForeignKey=true)]
		public Banco Banco
		{
			get
			{
				return this._Banco.Entity;
			}
			set
			{
				Banco previousValue = this._Banco.Entity;
				if (((previousValue != value) 
							|| (this._Banco.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Banco.Entity = null;
						previousValue.DatoBancario.Remove(this);
					}
					this._Banco.Entity = value;
					if ((value != null))
					{
						value.DatoBancario.Add(this);
						this._idBancoEnvio = value.idBanco;
					}
					else
					{
						this._idBancoEnvio = default(Nullable<short>);
					}
					this.SendPropertyChanged("Banco");
				}
			}
		}
		
		[Association(Name="Banco_DatoBancario1", Storage="_Banco1", ThisKey="idBancoRecepcion", OtherKey="idBanco", IsForeignKey=true)]
		public Banco Banco1
		{
			get
			{
				return this._Banco1.Entity;
			}
			set
			{
				Banco previousValue = this._Banco1.Entity;
				if (((previousValue != value) 
							|| (this._Banco1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Banco1.Entity = null;
						previousValue.DatoBancario1.Remove(this);
					}
					this._Banco1.Entity = value;
					if ((value != null))
					{
						value.DatoBancario1.Add(this);
						this._idBancoRecepcion = value.idBanco;
					}
					else
					{
						this._idBancoRecepcion = default(short);
					}
					this.SendPropertyChanged("Banco1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoBancario = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoBancario = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoBancario = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoBancario = null;
		}
	}
	
	[Table(Name="dbo.DatoContacto")]
	public partial class DatoContacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatoContacto;
		
		private string _telefono1;
		
		private string _extensionTel1;
		
		private string _telefono2;
		
		private string _extensionTel2;
		
		private string _fax;
		
		private string _celular;
		
		private string _nextel;
		
		private string _claveNextel;
		
		private string _email1;
		
		private string _email2;
		
		private string _messenger;
		
		private string _skype;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatoContactoChanging(int value);
    partial void OnidDatoContactoChanged();
    partial void Ontelefono1Changing(string value);
    partial void Ontelefono1Changed();
    partial void OnextensionTel1Changing(string value);
    partial void OnextensionTel1Changed();
    partial void Ontelefono2Changing(string value);
    partial void Ontelefono2Changed();
    partial void OnextensionTel2Changing(string value);
    partial void OnextensionTel2Changed();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OnnextelChanging(string value);
    partial void OnnextelChanged();
    partial void OnclaveNextelChanging(string value);
    partial void OnclaveNextelChanged();
    partial void Onemail1Changing(string value);
    partial void Onemail1Changed();
    partial void Onemail2Changing(string value);
    partial void Onemail2Changed();
    partial void OnmessengerChanging(string value);
    partial void OnmessengerChanged();
    partial void OnskypeChanging(string value);
    partial void OnskypeChanged();
    #endregion
		
		public DatoContacto()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idDatoContacto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDatoContacto
		{
			get
			{
				return this._idDatoContacto;
			}
			set
			{
				if ((this._idDatoContacto != value))
				{
					this.OnidDatoContactoChanging(value);
					this.SendPropertyChanging();
					this._idDatoContacto = value;
					this.SendPropertyChanged("idDatoContacto");
					this.OnidDatoContactoChanged();
				}
			}
		}
		
		[Column(Storage="_telefono1", DbType="NVarChar(30)")]
		public string telefono1
		{
			get
			{
				return this._telefono1;
			}
			set
			{
				if ((this._telefono1 != value))
				{
					this.Ontelefono1Changing(value);
					this.SendPropertyChanging();
					this._telefono1 = value;
					this.SendPropertyChanged("telefono1");
					this.Ontelefono1Changed();
				}
			}
		}
		
		[Column(Storage="_extensionTel1", DbType="NVarChar(10)")]
		public string extensionTel1
		{
			get
			{
				return this._extensionTel1;
			}
			set
			{
				if ((this._extensionTel1 != value))
				{
					this.OnextensionTel1Changing(value);
					this.SendPropertyChanging();
					this._extensionTel1 = value;
					this.SendPropertyChanged("extensionTel1");
					this.OnextensionTel1Changed();
				}
			}
		}
		
		[Column(Storage="_telefono2", DbType="NVarChar(30)")]
		public string telefono2
		{
			get
			{
				return this._telefono2;
			}
			set
			{
				if ((this._telefono2 != value))
				{
					this.Ontelefono2Changing(value);
					this.SendPropertyChanging();
					this._telefono2 = value;
					this.SendPropertyChanged("telefono2");
					this.Ontelefono2Changed();
				}
			}
		}
		
		[Column(Storage="_extensionTel2", DbType="NVarChar(10)")]
		public string extensionTel2
		{
			get
			{
				return this._extensionTel2;
			}
			set
			{
				if ((this._extensionTel2 != value))
				{
					this.OnextensionTel2Changing(value);
					this.SendPropertyChanging();
					this._extensionTel2 = value;
					this.SendPropertyChanged("extensionTel2");
					this.OnextensionTel2Changed();
				}
			}
		}
		
		[Column(Storage="_fax", DbType="NVarChar(30)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[Column(Storage="_celular", DbType="NVarChar(30)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[Column(Storage="_nextel", DbType="NVarChar(30)")]
		public string nextel
		{
			get
			{
				return this._nextel;
			}
			set
			{
				if ((this._nextel != value))
				{
					this.OnnextelChanging(value);
					this.SendPropertyChanging();
					this._nextel = value;
					this.SendPropertyChanged("nextel");
					this.OnnextelChanged();
				}
			}
		}
		
		[Column(Storage="_claveNextel", DbType="NVarChar(10)")]
		public string claveNextel
		{
			get
			{
				return this._claveNextel;
			}
			set
			{
				if ((this._claveNextel != value))
				{
					this.OnclaveNextelChanging(value);
					this.SendPropertyChanging();
					this._claveNextel = value;
					this.SendPropertyChanged("claveNextel");
					this.OnclaveNextelChanged();
				}
			}
		}
		
		[Column(Storage="_email1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email1
		{
			get
			{
				return this._email1;
			}
			set
			{
				if ((this._email1 != value))
				{
					this.Onemail1Changing(value);
					this.SendPropertyChanging();
					this._email1 = value;
					this.SendPropertyChanged("email1");
					this.Onemail1Changed();
				}
			}
		}
		
		[Column(Storage="_email2", DbType="NVarChar(50)")]
		public string email2
		{
			get
			{
				return this._email2;
			}
			set
			{
				if ((this._email2 != value))
				{
					this.Onemail2Changing(value);
					this.SendPropertyChanging();
					this._email2 = value;
					this.SendPropertyChanged("email2");
					this.Onemail2Changed();
				}
			}
		}
		
		[Column(Storage="_messenger", DbType="NVarChar(50)")]
		public string messenger
		{
			get
			{
				return this._messenger;
			}
			set
			{
				if ((this._messenger != value))
				{
					this.OnmessengerChanging(value);
					this.SendPropertyChanging();
					this._messenger = value;
					this.SendPropertyChanged("messenger");
					this.OnmessengerChanged();
				}
			}
		}
		
		[Column(Storage="_skype", DbType="NVarChar(50)")]
		public string skype
		{
			get
			{
				return this._skype;
			}
			set
			{
				if ((this._skype != value))
				{
					this.OnskypeChanging(value);
					this.SendPropertyChanging();
					this._skype = value;
					this.SendPropertyChanged("skype");
					this.OnskypeChanged();
				}
			}
		}
		
		[Association(Name="DatoContacto_Valuador", Storage="_Valuador", ThisKey="idDatoContacto", OtherKey="idDatoContacto")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="DatoContacto_Cliente", Storage="_Cliente", ThisKey="idDatoContacto", OtherKey="idDatoContacto")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[Association(Name="DatoContacto_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idDatoContacto", OtherKey="idDatoContacto")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = null;
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.DatoContacto = null;
		}
	}
	
	[Table(Name="dbo.DatoCredito")]
	public partial class DatoCredito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private short _idTipoCredito;
		
		private System.Nullable<short> _idTipoCreditoInterno;
		
		private short _idEntidadOtorgante;
		
		private System.Nullable<short> _idEntidadCofinanciamiento;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntityRef<EntidadFinanciamiento> _EntidadFinanciamiento;
		
		private EntityRef<EntidadFinanciamiento> _EntidadFinanciamiento1;
		
		private EntityRef<TipoCredito> _TipoCredito;
		
		private EntityRef<TipoCreditoInterno> _TipoCreditoInterno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnidTipoCreditoChanging(short value);
    partial void OnidTipoCreditoChanged();
    partial void OnidTipoCreditoInternoChanging(System.Nullable<short> value);
    partial void OnidTipoCreditoInternoChanged();
    partial void OnidEntidadOtorganteChanging(short value);
    partial void OnidEntidadOtorganteChanged();
    partial void OnidEntidadCofinanciamientoChanging(System.Nullable<short> value);
    partial void OnidEntidadCofinanciamientoChanged();
    #endregion
		
		public DatoCredito()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			this._EntidadFinanciamiento = default(EntityRef<EntidadFinanciamiento>);
			this._EntidadFinanciamiento1 = default(EntityRef<EntidadFinanciamiento>);
			this._TipoCredito = default(EntityRef<TipoCredito>);
			this._TipoCreditoInterno = default(EntityRef<TipoCreditoInterno>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoCredito", DbType="SmallInt NOT NULL")]
		public short idTipoCredito
		{
			get
			{
				return this._idTipoCredito;
			}
			set
			{
				if ((this._idTipoCredito != value))
				{
					if (this._TipoCredito.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoCreditoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCredito = value;
					this.SendPropertyChanged("idTipoCredito");
					this.OnidTipoCreditoChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoCreditoInterno", DbType="SmallInt")]
		public System.Nullable<short> idTipoCreditoInterno
		{
			get
			{
				return this._idTipoCreditoInterno;
			}
			set
			{
				if ((this._idTipoCreditoInterno != value))
				{
					if (this._TipoCreditoInterno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoCreditoInternoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCreditoInterno = value;
					this.SendPropertyChanged("idTipoCreditoInterno");
					this.OnidTipoCreditoInternoChanged();
				}
			}
		}
		
		[Column(Storage="_idEntidadOtorgante", DbType="SmallInt NOT NULL")]
		public short idEntidadOtorgante
		{
			get
			{
				return this._idEntidadOtorgante;
			}
			set
			{
				if ((this._idEntidadOtorgante != value))
				{
					if (this._EntidadFinanciamiento1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEntidadOtorganteChanging(value);
					this.SendPropertyChanging();
					this._idEntidadOtorgante = value;
					this.SendPropertyChanged("idEntidadOtorgante");
					this.OnidEntidadOtorganteChanged();
				}
			}
		}
		
		[Column(Storage="_idEntidadCofinanciamiento", DbType="SmallInt")]
		public System.Nullable<short> idEntidadCofinanciamiento
		{
			get
			{
				return this._idEntidadCofinanciamiento;
			}
			set
			{
				if ((this._idEntidadCofinanciamiento != value))
				{
					if (this._EntidadFinanciamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEntidadCofinanciamientoChanging(value);
					this.SendPropertyChanging();
					this._idEntidadCofinanciamiento = value;
					this.SendPropertyChanged("idEntidadCofinanciamiento");
					this.OnidEntidadCofinanciamientoChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_DatoCredito", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.DatoCredito = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.DatoCredito = this;
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		[Association(Name="EntidadFinanciamiento_DatoCredito", Storage="_EntidadFinanciamiento", ThisKey="idEntidadCofinanciamiento", OtherKey="idEntidad", IsForeignKey=true)]
		public EntidadFinanciamiento EntidadFinanciamiento
		{
			get
			{
				return this._EntidadFinanciamiento.Entity;
			}
			set
			{
				EntidadFinanciamiento previousValue = this._EntidadFinanciamiento.Entity;
				if (((previousValue != value) 
							|| (this._EntidadFinanciamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntidadFinanciamiento.Entity = null;
						previousValue.DatoCredito.Remove(this);
					}
					this._EntidadFinanciamiento.Entity = value;
					if ((value != null))
					{
						value.DatoCredito.Add(this);
						this._idEntidadCofinanciamiento = value.idEntidad;
					}
					else
					{
						this._idEntidadCofinanciamiento = default(Nullable<short>);
					}
					this.SendPropertyChanged("EntidadFinanciamiento");
				}
			}
		}
		
		[Association(Name="EntidadFinanciamiento_DatoCredito1", Storage="_EntidadFinanciamiento1", ThisKey="idEntidadOtorgante", OtherKey="idEntidad", IsForeignKey=true)]
		public EntidadFinanciamiento EntidadFinanciamiento1
		{
			get
			{
				return this._EntidadFinanciamiento1.Entity;
			}
			set
			{
				EntidadFinanciamiento previousValue = this._EntidadFinanciamiento1.Entity;
				if (((previousValue != value) 
							|| (this._EntidadFinanciamiento1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntidadFinanciamiento1.Entity = null;
						previousValue.DatoCredito1.Remove(this);
					}
					this._EntidadFinanciamiento1.Entity = value;
					if ((value != null))
					{
						value.DatoCredito1.Add(this);
						this._idEntidadOtorgante = value.idEntidad;
					}
					else
					{
						this._idEntidadOtorgante = default(short);
					}
					this.SendPropertyChanged("EntidadFinanciamiento1");
				}
			}
		}
		
		[Association(Name="TipoCredito_DatoCredito", Storage="_TipoCredito", ThisKey="idTipoCredito", OtherKey="idTipoCredito", IsForeignKey=true)]
		public TipoCredito TipoCredito
		{
			get
			{
				return this._TipoCredito.Entity;
			}
			set
			{
				TipoCredito previousValue = this._TipoCredito.Entity;
				if (((previousValue != value) 
							|| (this._TipoCredito.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCredito.Entity = null;
						previousValue.DatoCredito.Remove(this);
					}
					this._TipoCredito.Entity = value;
					if ((value != null))
					{
						value.DatoCredito.Add(this);
						this._idTipoCredito = value.idTipoCredito;
					}
					else
					{
						this._idTipoCredito = default(short);
					}
					this.SendPropertyChanged("TipoCredito");
				}
			}
		}
		
		[Association(Name="TipoCreditoInterno_DatoCredito", Storage="_TipoCreditoInterno", ThisKey="idTipoCreditoInterno", OtherKey="idTipoCreditoInterno", IsForeignKey=true)]
		public TipoCreditoInterno TipoCreditoInterno
		{
			get
			{
				return this._TipoCreditoInterno.Entity;
			}
			set
			{
				TipoCreditoInterno previousValue = this._TipoCreditoInterno.Entity;
				if (((previousValue != value) 
							|| (this._TipoCreditoInterno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoCreditoInterno.Entity = null;
						previousValue.DatoCredito.Remove(this);
					}
					this._TipoCreditoInterno.Entity = value;
					if ((value != null))
					{
						value.DatoCredito.Add(this);
						this._idTipoCreditoInterno = value.idTipoCreditoInterno;
					}
					else
					{
						this._idTipoCreditoInterno = default(Nullable<short>);
					}
					this.SendPropertyChanged("TipoCreditoInterno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DatoFacturacion")]
	public partial class DatoFacturacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatoFacturacion;
		
		private int _idDireccion;
		
		private string _razonSocial;
		
		private string _nombreComercial;
		
		private string _RFC;
		
		private EntitySet<DatoFacturacionValuador> _DatoFacturacionValuador;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatoFacturacionChanging(int value);
    partial void OnidDatoFacturacionChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnrazonSocialChanging(string value);
    partial void OnrazonSocialChanged();
    partial void OnnombreComercialChanging(string value);
    partial void OnnombreComercialChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    #endregion
		
		public DatoFacturacion()
		{
			this._DatoFacturacionValuador = new EntitySet<DatoFacturacionValuador>(new Action<DatoFacturacionValuador>(this.attach_DatoFacturacionValuador), new Action<DatoFacturacionValuador>(this.detach_DatoFacturacionValuador));
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idDatoFacturacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDatoFacturacion
		{
			get
			{
				return this._idDatoFacturacion;
			}
			set
			{
				if ((this._idDatoFacturacion != value))
				{
					this.OnidDatoFacturacionChanging(value);
					this.SendPropertyChanging();
					this._idDatoFacturacion = value;
					this.SendPropertyChanged("idDatoFacturacion");
					this.OnidDatoFacturacionChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_razonSocial", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string razonSocial
		{
			get
			{
				return this._razonSocial;
			}
			set
			{
				if ((this._razonSocial != value))
				{
					this.OnrazonSocialChanging(value);
					this.SendPropertyChanging();
					this._razonSocial = value;
					this.SendPropertyChanged("razonSocial");
					this.OnrazonSocialChanged();
				}
			}
		}
		
		[Column(Storage="_nombreComercial", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreComercial
		{
			get
			{
				return this._nombreComercial;
			}
			set
			{
				if ((this._nombreComercial != value))
				{
					this.OnnombreComercialChanging(value);
					this.SendPropertyChanging();
					this._nombreComercial = value;
					this.SendPropertyChanged("nombreComercial");
					this.OnnombreComercialChanged();
				}
			}
		}
		
		[Column(Storage="_RFC", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[Association(Name="DatoFacturacion_DatoFacturacionValuador", Storage="_DatoFacturacionValuador", ThisKey="idDatoFacturacion", OtherKey="idDatoFacturacion")]
		public EntitySet<DatoFacturacionValuador> DatoFacturacionValuador
		{
			get
			{
				return this._DatoFacturacionValuador;
			}
			set
			{
				this._DatoFacturacionValuador.Assign(value);
			}
		}
		
		[Association(Name="Direccion_DatoFacturacion", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.DatoFacturacion.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.DatoFacturacion.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatoFacturacionValuador(DatoFacturacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoFacturacion = this;
		}
		
		private void detach_DatoFacturacionValuador(DatoFacturacionValuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoFacturacion = null;
		}
	}
	
	[Table(Name="dbo.DatoFacturacionValuador")]
	public partial class DatoFacturacionValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatoFacturacion;
		
		private int _idValuador;
		
		private EntityRef<DatoFacturacion> _DatoFacturacion;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatoFacturacionChanging(int value);
    partial void OnidDatoFacturacionChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    #endregion
		
		public DatoFacturacionValuador()
		{
			this._DatoFacturacion = default(EntityRef<DatoFacturacion>);
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idDatoFacturacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idDatoFacturacion
		{
			get
			{
				return this._idDatoFacturacion;
			}
			set
			{
				if ((this._idDatoFacturacion != value))
				{
					if (this._DatoFacturacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoFacturacionChanging(value);
					this.SendPropertyChanging();
					this._idDatoFacturacion = value;
					this.SendPropertyChanged("idDatoFacturacion");
					this.OnidDatoFacturacionChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Association(Name="DatoFacturacion_DatoFacturacionValuador", Storage="_DatoFacturacion", ThisKey="idDatoFacturacion", OtherKey="idDatoFacturacion", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DatoFacturacion DatoFacturacion
		{
			get
			{
				return this._DatoFacturacion.Entity;
			}
			set
			{
				DatoFacturacion previousValue = this._DatoFacturacion.Entity;
				if (((previousValue != value) 
							|| (this._DatoFacturacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoFacturacion.Entity = null;
						previousValue.DatoFacturacionValuador.Remove(this);
					}
					this._DatoFacturacion.Entity = value;
					if ((value != null))
					{
						value.DatoFacturacionValuador.Add(this);
						this._idDatoFacturacion = value.idDatoFacturacion;
					}
					else
					{
						this._idDatoFacturacion = default(int);
					}
					this.SendPropertyChanged("DatoFacturacion");
				}
			}
		}
		
		[Association(Name="Valuador_DatoFacturacionValuador", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.DatoFacturacionValuador.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.DatoFacturacionValuador.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.DatoPaqueteria")]
	public partial class DatoPaqueteria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDatoPaqueteria;
		
		private int _idDireccion;
		
		private string _atencion;
		
		private string _plaza;
		
		private bool _envioFacturas;
		
		private bool _envioAvaluos;
		
		private bool _envioNotasRetencion;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDatoPaqueteriaChanging(int value);
    partial void OnidDatoPaqueteriaChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnatencionChanging(string value);
    partial void OnatencionChanged();
    partial void OnplazaChanging(string value);
    partial void OnplazaChanged();
    partial void OnenvioFacturasChanging(bool value);
    partial void OnenvioFacturasChanged();
    partial void OnenvioAvaluosChanging(bool value);
    partial void OnenvioAvaluosChanged();
    partial void OnenvioNotasRetencionChanging(bool value);
    partial void OnenvioNotasRetencionChanged();
    #endregion
		
		public DatoPaqueteria()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idDatoPaqueteria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDatoPaqueteria
		{
			get
			{
				return this._idDatoPaqueteria;
			}
			set
			{
				if ((this._idDatoPaqueteria != value))
				{
					this.OnidDatoPaqueteriaChanging(value);
					this.SendPropertyChanging();
					this._idDatoPaqueteria = value;
					this.SendPropertyChanged("idDatoPaqueteria");
					this.OnidDatoPaqueteriaChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_atencion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string atencion
		{
			get
			{
				return this._atencion;
			}
			set
			{
				if ((this._atencion != value))
				{
					this.OnatencionChanging(value);
					this.SendPropertyChanging();
					this._atencion = value;
					this.SendPropertyChanged("atencion");
					this.OnatencionChanged();
				}
			}
		}
		
		[Column(Storage="_plaza", DbType="NVarChar(30)")]
		public string plaza
		{
			get
			{
				return this._plaza;
			}
			set
			{
				if ((this._plaza != value))
				{
					this.OnplazaChanging(value);
					this.SendPropertyChanging();
					this._plaza = value;
					this.SendPropertyChanged("plaza");
					this.OnplazaChanged();
				}
			}
		}
		
		[Column(Storage="_envioFacturas", DbType="Bit NOT NULL")]
		public bool envioFacturas
		{
			get
			{
				return this._envioFacturas;
			}
			set
			{
				if ((this._envioFacturas != value))
				{
					this.OnenvioFacturasChanging(value);
					this.SendPropertyChanging();
					this._envioFacturas = value;
					this.SendPropertyChanged("envioFacturas");
					this.OnenvioFacturasChanged();
				}
			}
		}
		
		[Column(Storage="_envioAvaluos", DbType="Bit NOT NULL")]
		public bool envioAvaluos
		{
			get
			{
				return this._envioAvaluos;
			}
			set
			{
				if ((this._envioAvaluos != value))
				{
					this.OnenvioAvaluosChanging(value);
					this.SendPropertyChanging();
					this._envioAvaluos = value;
					this.SendPropertyChanged("envioAvaluos");
					this.OnenvioAvaluosChanged();
				}
			}
		}
		
		[Column(Storage="_envioNotasRetencion", DbType="Bit NOT NULL")]
		public bool envioNotasRetencion
		{
			get
			{
				return this._envioNotasRetencion;
			}
			set
			{
				if ((this._envioNotasRetencion != value))
				{
					this.OnenvioNotasRetencionChanging(value);
					this.SendPropertyChanging();
					this._envioNotasRetencion = value;
					this.SendPropertyChanged("envioNotasRetencion");
					this.OnenvioNotasRetencionChanged();
				}
			}
		}
		
		[Association(Name="DatoPaqueteria_Valuador", Storage="_Valuador", ThisKey="idDatoPaqueteria", OtherKey="idDatoPaqueteria")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="DatoPaqueteria_Cliente", Storage="_Cliente", ThisKey="idDatoPaqueteria", OtherKey="idDatoPaqueteria")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[Association(Name="Direccion_DatoPaqueteria", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.DatoPaqueteria.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.DatoPaqueteria.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoPaqueteria = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.DatoPaqueteria = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoPaqueteria = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.DatoPaqueteria = null;
		}
	}
	
	[Table(Name="dbo.Declaraciones")]
	public partial class Declaraciones : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idAvaluo;
		
		private bool _declaracionIdentificacion;
		
		private bool _declaracionSuperficies;
		
		private bool _declaracionConstrucciones;
		
		private bool _declaracionMonumento;
		
		private bool _declaracionPatrimonio;
		
		private bool _advertenciaDocumentacion;
		
		private bool _advertenciaOfertas;
		
		private bool _advertenciaUso;
		
		private bool _advertenciaObras;
		
		private string _otrasAdvertencias;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OndeclaracionIdentificacionChanging(bool value);
    partial void OndeclaracionIdentificacionChanged();
    partial void OndeclaracionSuperficiesChanging(bool value);
    partial void OndeclaracionSuperficiesChanged();
    partial void OndeclaracionConstruccionesChanging(bool value);
    partial void OndeclaracionConstruccionesChanged();
    partial void OndeclaracionMonumentoChanging(bool value);
    partial void OndeclaracionMonumentoChanged();
    partial void OndeclaracionPatrimonioChanging(bool value);
    partial void OndeclaracionPatrimonioChanged();
    partial void OnadvertenciaDocumentacionChanging(bool value);
    partial void OnadvertenciaDocumentacionChanged();
    partial void OnadvertenciaOfertasChanging(bool value);
    partial void OnadvertenciaOfertasChanged();
    partial void OnadvertenciaUsoChanging(bool value);
    partial void OnadvertenciaUsoChanged();
    partial void OnadvertenciaObrasChanging(bool value);
    partial void OnadvertenciaObrasChanged();
    partial void OnotrasAdvertenciasChanging(string value);
    partial void OnotrasAdvertenciasChanged();
    #endregion
		
		public Declaraciones()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			OnCreated();
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_declaracionIdentificacion", DbType="Bit NOT NULL")]
		public bool declaracionIdentificacion
		{
			get
			{
				return this._declaracionIdentificacion;
			}
			set
			{
				if ((this._declaracionIdentificacion != value))
				{
					this.OndeclaracionIdentificacionChanging(value);
					this.SendPropertyChanging();
					this._declaracionIdentificacion = value;
					this.SendPropertyChanged("declaracionIdentificacion");
					this.OndeclaracionIdentificacionChanged();
				}
			}
		}
		
		[Column(Storage="_declaracionSuperficies", DbType="Bit NOT NULL")]
		public bool declaracionSuperficies
		{
			get
			{
				return this._declaracionSuperficies;
			}
			set
			{
				if ((this._declaracionSuperficies != value))
				{
					this.OndeclaracionSuperficiesChanging(value);
					this.SendPropertyChanging();
					this._declaracionSuperficies = value;
					this.SendPropertyChanged("declaracionSuperficies");
					this.OndeclaracionSuperficiesChanged();
				}
			}
		}
		
		[Column(Storage="_declaracionConstrucciones", DbType="Bit NOT NULL")]
		public bool declaracionConstrucciones
		{
			get
			{
				return this._declaracionConstrucciones;
			}
			set
			{
				if ((this._declaracionConstrucciones != value))
				{
					this.OndeclaracionConstruccionesChanging(value);
					this.SendPropertyChanging();
					this._declaracionConstrucciones = value;
					this.SendPropertyChanged("declaracionConstrucciones");
					this.OndeclaracionConstruccionesChanged();
				}
			}
		}
		
		[Column(Storage="_declaracionMonumento", DbType="Bit NOT NULL")]
		public bool declaracionMonumento
		{
			get
			{
				return this._declaracionMonumento;
			}
			set
			{
				if ((this._declaracionMonumento != value))
				{
					this.OndeclaracionMonumentoChanging(value);
					this.SendPropertyChanging();
					this._declaracionMonumento = value;
					this.SendPropertyChanged("declaracionMonumento");
					this.OndeclaracionMonumentoChanged();
				}
			}
		}
		
		[Column(Storage="_declaracionPatrimonio", DbType="Bit NOT NULL")]
		public bool declaracionPatrimonio
		{
			get
			{
				return this._declaracionPatrimonio;
			}
			set
			{
				if ((this._declaracionPatrimonio != value))
				{
					this.OndeclaracionPatrimonioChanging(value);
					this.SendPropertyChanging();
					this._declaracionPatrimonio = value;
					this.SendPropertyChanged("declaracionPatrimonio");
					this.OndeclaracionPatrimonioChanged();
				}
			}
		}
		
		[Column(Storage="_advertenciaDocumentacion", DbType="Bit NOT NULL")]
		public bool advertenciaDocumentacion
		{
			get
			{
				return this._advertenciaDocumentacion;
			}
			set
			{
				if ((this._advertenciaDocumentacion != value))
				{
					this.OnadvertenciaDocumentacionChanging(value);
					this.SendPropertyChanging();
					this._advertenciaDocumentacion = value;
					this.SendPropertyChanged("advertenciaDocumentacion");
					this.OnadvertenciaDocumentacionChanged();
				}
			}
		}
		
		[Column(Storage="_advertenciaOfertas", DbType="Bit NOT NULL")]
		public bool advertenciaOfertas
		{
			get
			{
				return this._advertenciaOfertas;
			}
			set
			{
				if ((this._advertenciaOfertas != value))
				{
					this.OnadvertenciaOfertasChanging(value);
					this.SendPropertyChanging();
					this._advertenciaOfertas = value;
					this.SendPropertyChanged("advertenciaOfertas");
					this.OnadvertenciaOfertasChanged();
				}
			}
		}
		
		[Column(Storage="_advertenciaUso", DbType="Bit NOT NULL")]
		public bool advertenciaUso
		{
			get
			{
				return this._advertenciaUso;
			}
			set
			{
				if ((this._advertenciaUso != value))
				{
					this.OnadvertenciaUsoChanging(value);
					this.SendPropertyChanging();
					this._advertenciaUso = value;
					this.SendPropertyChanged("advertenciaUso");
					this.OnadvertenciaUsoChanged();
				}
			}
		}
		
		[Column(Storage="_advertenciaObras", DbType="Bit NOT NULL")]
		public bool advertenciaObras
		{
			get
			{
				return this._advertenciaObras;
			}
			set
			{
				if ((this._advertenciaObras != value))
				{
					this.OnadvertenciaObrasChanging(value);
					this.SendPropertyChanging();
					this._advertenciaObras = value;
					this.SendPropertyChanged("advertenciaObras");
					this.OnadvertenciaObrasChanged();
				}
			}
		}
		
		[Column(Storage="_otrasAdvertencias", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string otrasAdvertencias
		{
			get
			{
				return this._otrasAdvertencias;
			}
			set
			{
				if ((this._otrasAdvertencias != value))
				{
					this.OnotrasAdvertenciasChanging(value);
					this.SendPropertyChanging();
					this._otrasAdvertencias = value;
					this.SendPropertyChanged("otrasAdvertencias");
					this.OnotrasAdvertenciasChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_Declaraciones", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.Declaraciones = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.Declaraciones = this;
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Direccion")]
	public partial class Direccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDireccion;
		
		private int _idCodigoPostal;
		
		private string _calle;
		
		private string _numeroExterior;
		
		private string _numeroInterior;
		
		private string _entre1;
		
		private string _entre2;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntitySet<Cliente> _Cliente;
		
		private EntitySet<DatoFacturacion> _DatoFacturacion;
		
		private EntitySet<DatoPaqueteria> _DatoPaqueteria;
		
		private EntitySet<DireccionInmueble> _DireccionInmueble;
		
		private EntitySet<Propietario> _Propietario;
		
		private EntitySet<Solicitante> _Solicitante;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
		private EntityRef<CodigoPostal> _CodigoPostal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnidCodigoPostalChanging(int value);
    partial void OnidCodigoPostalChanged();
    partial void OncalleChanging(string value);
    partial void OncalleChanged();
    partial void OnnumeroExteriorChanging(string value);
    partial void OnnumeroExteriorChanged();
    partial void OnnumeroInteriorChanging(string value);
    partial void OnnumeroInteriorChanged();
    partial void Onentre1Changing(string value);
    partial void Onentre1Changed();
    partial void Onentre2Changing(string value);
    partial void Onentre2Changed();
    #endregion
		
		public Direccion()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._Cliente = new EntitySet<Cliente>(new Action<Cliente>(this.attach_Cliente), new Action<Cliente>(this.detach_Cliente));
			this._DatoFacturacion = new EntitySet<DatoFacturacion>(new Action<DatoFacturacion>(this.attach_DatoFacturacion), new Action<DatoFacturacion>(this.detach_DatoFacturacion));
			this._DatoPaqueteria = new EntitySet<DatoPaqueteria>(new Action<DatoPaqueteria>(this.attach_DatoPaqueteria), new Action<DatoPaqueteria>(this.detach_DatoPaqueteria));
			this._DireccionInmueble = new EntitySet<DireccionInmueble>(new Action<DireccionInmueble>(this.attach_DireccionInmueble), new Action<DireccionInmueble>(this.detach_DireccionInmueble));
			this._Propietario = new EntitySet<Propietario>(new Action<Propietario>(this.attach_Propietario), new Action<Propietario>(this.detach_Propietario));
			this._Solicitante = new EntitySet<Solicitante>(new Action<Solicitante>(this.attach_Solicitante), new Action<Solicitante>(this.detach_Solicitante));
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			this._CodigoPostal = default(EntityRef<CodigoPostal>);
			OnCreated();
		}
		
		[Column(Storage="_idDireccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_idCodigoPostal", DbType="Int NOT NULL")]
		public int idCodigoPostal
		{
			get
			{
				return this._idCodigoPostal;
			}
			set
			{
				if ((this._idCodigoPostal != value))
				{
					if (this._CodigoPostal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._idCodigoPostal = value;
					this.SendPropertyChanged("idCodigoPostal");
					this.OnidCodigoPostalChanged();
				}
			}
		}
		
		[Column(Storage="_calle", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string calle
		{
			get
			{
				return this._calle;
			}
			set
			{
				if ((this._calle != value))
				{
					this.OncalleChanging(value);
					this.SendPropertyChanging();
					this._calle = value;
					this.SendPropertyChanged("calle");
					this.OncalleChanged();
				}
			}
		}
		
		[Column(Storage="_numeroExterior", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string numeroExterior
		{
			get
			{
				return this._numeroExterior;
			}
			set
			{
				if ((this._numeroExterior != value))
				{
					this.OnnumeroExteriorChanging(value);
					this.SendPropertyChanging();
					this._numeroExterior = value;
					this.SendPropertyChanged("numeroExterior");
					this.OnnumeroExteriorChanged();
				}
			}
		}
		
		[Column(Storage="_numeroInterior", DbType="NVarChar(10)")]
		public string numeroInterior
		{
			get
			{
				return this._numeroInterior;
			}
			set
			{
				if ((this._numeroInterior != value))
				{
					this.OnnumeroInteriorChanging(value);
					this.SendPropertyChanging();
					this._numeroInterior = value;
					this.SendPropertyChanged("numeroInterior");
					this.OnnumeroInteriorChanged();
				}
			}
		}
		
		[Column(Storage="_entre1", DbType="NVarChar(50)")]
		public string entre1
		{
			get
			{
				return this._entre1;
			}
			set
			{
				if ((this._entre1 != value))
				{
					this.Onentre1Changing(value);
					this.SendPropertyChanging();
					this._entre1 = value;
					this.SendPropertyChanged("entre1");
					this.Onentre1Changed();
				}
			}
		}
		
		[Column(Storage="_entre2", DbType="NVarChar(50)")]
		public string entre2
		{
			get
			{
				return this._entre2;
			}
			set
			{
				if ((this._entre2 != value))
				{
					this.Onentre2Changing(value);
					this.SendPropertyChanging();
					this._entre2 = value;
					this.SendPropertyChanged("entre2");
					this.Onentre2Changed();
				}
			}
		}
		
		[Association(Name="Direccion_Valuador", Storage="_Valuador", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="Direccion_Cliente", Storage="_Cliente", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<Cliente> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[Association(Name="Direccion_DatoFacturacion", Storage="_DatoFacturacion", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<DatoFacturacion> DatoFacturacion
		{
			get
			{
				return this._DatoFacturacion;
			}
			set
			{
				this._DatoFacturacion.Assign(value);
			}
		}
		
		[Association(Name="Direccion_DatoPaqueteria", Storage="_DatoPaqueteria", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<DatoPaqueteria> DatoPaqueteria
		{
			get
			{
				return this._DatoPaqueteria;
			}
			set
			{
				this._DatoPaqueteria.Assign(value);
			}
		}
		
		[Association(Name="Direccion_DireccionInmueble", Storage="_DireccionInmueble", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<DireccionInmueble> DireccionInmueble
		{
			get
			{
				return this._DireccionInmueble;
			}
			set
			{
				this._DireccionInmueble.Assign(value);
			}
		}
		
		[Association(Name="Direccion_Propietario", Storage="_Propietario", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<Propietario> Propietario
		{
			get
			{
				return this._Propietario;
			}
			set
			{
				this._Propietario.Assign(value);
			}
		}
		
		[Association(Name="Direccion_Solicitante", Storage="_Solicitante", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<Solicitante> Solicitante
		{
			get
			{
				return this._Solicitante;
			}
			set
			{
				this._Solicitante.Assign(value);
			}
		}
		
		[Association(Name="Direccion_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idDireccion", OtherKey="idDireccion")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		[Association(Name="CodigoPostal_Direccion", Storage="_CodigoPostal", ThisKey="idCodigoPostal", OtherKey="idCodigoPostal", IsForeignKey=true)]
		public CodigoPostal CodigoPostal
		{
			get
			{
				return this._CodigoPostal.Entity;
			}
			set
			{
				CodigoPostal previousValue = this._CodigoPostal.Entity;
				if (((previousValue != value) 
							|| (this._CodigoPostal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodigoPostal.Entity = null;
						previousValue.Direccion.Remove(this);
					}
					this._CodigoPostal.Entity = value;
					if ((value != null))
					{
						value.Direccion.Add(this);
						this._idCodigoPostal = value.idCodigoPostal;
					}
					else
					{
						this._idCodigoPostal = default(int);
					}
					this.SendPropertyChanged("CodigoPostal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_Cliente(Cliente entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_DatoFacturacion(DatoFacturacion entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_DatoFacturacion(DatoFacturacion entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_DatoPaqueteria(DatoPaqueteria entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_DatoPaqueteria(DatoPaqueteria entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_DireccionInmueble(DireccionInmueble entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_DireccionInmueble(DireccionInmueble entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_Propietario(Propietario entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_Propietario(Propietario entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_Solicitante(Solicitante entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_Solicitante(Solicitante entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Direccion = null;
		}
	}
	
	[Table(Name="dbo.DireccionInmueble")]
	public partial class DireccionInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDireccionInmueble;
		
		private int _idDireccion;
		
		private string _edificio;
		
		private string _lote;
		
		private string _manzana;
		
		private string _superManzana;
		
		private string _condominio;
		
		private EntitySet<Inmueble> _Inmueble;
		
		private EntityRef<CodigoPostal> _CodigoPostal;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDireccionInmuebleChanging(int value);
    partial void OnidDireccionInmuebleChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnedificioChanging(string value);
    partial void OnedificioChanged();
    partial void OnloteChanging(string value);
    partial void OnloteChanged();
    partial void OnmanzanaChanging(string value);
    partial void OnmanzanaChanged();
    partial void OnsuperManzanaChanging(string value);
    partial void OnsuperManzanaChanged();
    partial void OncondominioChanging(string value);
    partial void OncondominioChanged();
    #endregion
		
		public DireccionInmueble()
		{
			this._Inmueble = new EntitySet<Inmueble>(new Action<Inmueble>(this.attach_Inmueble), new Action<Inmueble>(this.detach_Inmueble));
			this._CodigoPostal = default(EntityRef<CodigoPostal>);
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idDireccionInmueble", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDireccionInmueble
		{
			get
			{
				return this._idDireccionInmueble;
			}
			set
			{
				if ((this._idDireccionInmueble != value))
				{
					this.OnidDireccionInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idDireccionInmueble = value;
					this.SendPropertyChanged("idDireccionInmueble");
					this.OnidDireccionInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._CodigoPostal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_edificio", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string edificio
		{
			get
			{
				return this._edificio;
			}
			set
			{
				if ((this._edificio != value))
				{
					this.OnedificioChanging(value);
					this.SendPropertyChanging();
					this._edificio = value;
					this.SendPropertyChanged("edificio");
					this.OnedificioChanged();
				}
			}
		}
		
		[Column(Storage="_lote", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string lote
		{
			get
			{
				return this._lote;
			}
			set
			{
				if ((this._lote != value))
				{
					this.OnloteChanging(value);
					this.SendPropertyChanging();
					this._lote = value;
					this.SendPropertyChanged("lote");
					this.OnloteChanged();
				}
			}
		}
		
		[Column(Storage="_manzana", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string manzana
		{
			get
			{
				return this._manzana;
			}
			set
			{
				if ((this._manzana != value))
				{
					this.OnmanzanaChanging(value);
					this.SendPropertyChanging();
					this._manzana = value;
					this.SendPropertyChanged("manzana");
					this.OnmanzanaChanged();
				}
			}
		}
		
		[Column(Storage="_superManzana", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string superManzana
		{
			get
			{
				return this._superManzana;
			}
			set
			{
				if ((this._superManzana != value))
				{
					this.OnsuperManzanaChanging(value);
					this.SendPropertyChanging();
					this._superManzana = value;
					this.SendPropertyChanged("superManzana");
					this.OnsuperManzanaChanged();
				}
			}
		}
		
		[Column(Storage="_condominio", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string condominio
		{
			get
			{
				return this._condominio;
			}
			set
			{
				if ((this._condominio != value))
				{
					this.OncondominioChanging(value);
					this.SendPropertyChanging();
					this._condominio = value;
					this.SendPropertyChanged("condominio");
					this.OncondominioChanged();
				}
			}
		}
		
		[Association(Name="DireccionInmueble_Inmueble", Storage="_Inmueble", ThisKey="idDireccionInmueble", OtherKey="idDireccionInmueble")]
		public EntitySet<Inmueble> Inmueble
		{
			get
			{
				return this._Inmueble;
			}
			set
			{
				this._Inmueble.Assign(value);
			}
		}
		
		[Association(Name="CodigoPostal_DireccionInmueble", Storage="_CodigoPostal", ThisKey="idDireccion", OtherKey="idCodigoPostal", IsForeignKey=true)]
		public CodigoPostal CodigoPostal
		{
			get
			{
				return this._CodigoPostal.Entity;
			}
			set
			{
				CodigoPostal previousValue = this._CodigoPostal.Entity;
				if (((previousValue != value) 
							|| (this._CodigoPostal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CodigoPostal.Entity = null;
						previousValue.DireccionInmueble.Remove(this);
					}
					this._CodigoPostal.Entity = value;
					if ((value != null))
					{
						value.DireccionInmueble.Add(this);
						this._idDireccion = value.idCodigoPostal;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("CodigoPostal");
				}
			}
		}
		
		[Association(Name="Direccion_DireccionInmueble", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.DireccionInmueble.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.DireccionInmueble.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.DireccionInmueble = this;
		}
		
		private void detach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.DireccionInmueble = null;
		}
	}
	
	[Table(Name="dbo.DocumentoValuador")]
	public partial class DocumentoValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idDocumento;
		
		private int _idValuador;
		
		private short _idTipoDocumento;
		
		private EntityRef<Valuador> _Valuador;
		
		private EntityRef<TipoDocumentoValuador> _TipoDocumentoValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDocumentoChanging(int value);
    partial void OnidDocumentoChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidTipoDocumentoChanging(short value);
    partial void OnidTipoDocumentoChanged();
    #endregion
		
		public DocumentoValuador()
		{
			this._Valuador = default(EntityRef<Valuador>);
			this._TipoDocumentoValuador = default(EntityRef<TipoDocumentoValuador>);
			OnCreated();
		}
		
		[Column(Storage="_idDocumento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idDocumento
		{
			get
			{
				return this._idDocumento;
			}
			set
			{
				if ((this._idDocumento != value))
				{
					this.OnidDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idDocumento = value;
					this.SendPropertyChanged("idDocumento");
					this.OnidDocumentoChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL")]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoDocumento", DbType="SmallInt NOT NULL")]
		public short idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					if (this._TipoDocumentoValuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[Association(Name="Valuador_DocumentoValuador", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.DocumentoValuador.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.DocumentoValuador.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		[Association(Name="TipoDocumentoValuador_DocumentoValuador", Storage="_TipoDocumentoValuador", ThisKey="idTipoDocumento", OtherKey="idTipoDocumento", IsForeignKey=true)]
		public TipoDocumentoValuador TipoDocumentoValuador
		{
			get
			{
				return this._TipoDocumentoValuador.Entity;
			}
			set
			{
				TipoDocumentoValuador previousValue = this._TipoDocumentoValuador.Entity;
				if (((previousValue != value) 
							|| (this._TipoDocumentoValuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDocumentoValuador.Entity = null;
						previousValue.DocumentoValuador.Remove(this);
					}
					this._TipoDocumentoValuador.Entity = value;
					if ((value != null))
					{
						value.DocumentoValuador.Add(this);
						this._idTipoDocumento = value.idTipoDocumento;
					}
					else
					{
						this._idTipoDocumento = default(short);
					}
					this.SendPropertyChanged("TipoDocumentoValuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EntidadFinanciamiento")]
	public partial class EntidadFinanciamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idEntidad;
		
		private short _idTipoCredito;
		
		private string _clave;
		
		private string _nombre;
		
		private bool _financiamiento;
		
		private bool _cofinanciamiento;
		
		private EntitySet<DatoCredito> _DatoCredito;
		
		private EntitySet<DatoCredito> _DatoCredito1;
		
		private EntitySet<TipoCreditoInterno> _TipoCreditoInterno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEntidadChanging(short value);
    partial void OnidEntidadChanged();
    partial void OnidTipoCreditoChanging(short value);
    partial void OnidTipoCreditoChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnfinanciamientoChanging(bool value);
    partial void OnfinanciamientoChanged();
    partial void OncofinanciamientoChanging(bool value);
    partial void OncofinanciamientoChanged();
    #endregion
		
		public EntidadFinanciamiento()
		{
			this._DatoCredito = new EntitySet<DatoCredito>(new Action<DatoCredito>(this.attach_DatoCredito), new Action<DatoCredito>(this.detach_DatoCredito));
			this._DatoCredito1 = new EntitySet<DatoCredito>(new Action<DatoCredito>(this.attach_DatoCredito1), new Action<DatoCredito>(this.detach_DatoCredito1));
			this._TipoCreditoInterno = new EntitySet<TipoCreditoInterno>(new Action<TipoCreditoInterno>(this.attach_TipoCreditoInterno), new Action<TipoCreditoInterno>(this.detach_TipoCreditoInterno));
			OnCreated();
		}
		
		[Column(Storage="_idEntidad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idEntidad
		{
			get
			{
				return this._idEntidad;
			}
			set
			{
				if ((this._idEntidad != value))
				{
					this.OnidEntidadChanging(value);
					this.SendPropertyChanging();
					this._idEntidad = value;
					this.SendPropertyChanged("idEntidad");
					this.OnidEntidadChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoCredito", DbType="SmallInt NOT NULL")]
		public short idTipoCredito
		{
			get
			{
				return this._idTipoCredito;
			}
			set
			{
				if ((this._idTipoCredito != value))
				{
					this.OnidTipoCreditoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCredito = value;
					this.SendPropertyChanged("idTipoCredito");
					this.OnidTipoCreditoChanged();
				}
			}
		}
		
		[Column(Storage="_clave", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_financiamiento", DbType="Bit NOT NULL")]
		public bool financiamiento
		{
			get
			{
				return this._financiamiento;
			}
			set
			{
				if ((this._financiamiento != value))
				{
					this.OnfinanciamientoChanging(value);
					this.SendPropertyChanging();
					this._financiamiento = value;
					this.SendPropertyChanged("financiamiento");
					this.OnfinanciamientoChanged();
				}
			}
		}
		
		[Column(Storage="_cofinanciamiento", DbType="Bit NOT NULL")]
		public bool cofinanciamiento
		{
			get
			{
				return this._cofinanciamiento;
			}
			set
			{
				if ((this._cofinanciamiento != value))
				{
					this.OncofinanciamientoChanging(value);
					this.SendPropertyChanging();
					this._cofinanciamiento = value;
					this.SendPropertyChanged("cofinanciamiento");
					this.OncofinanciamientoChanged();
				}
			}
		}
		
		[Association(Name="EntidadFinanciamiento_DatoCredito", Storage="_DatoCredito", ThisKey="idEntidad", OtherKey="idEntidadCofinanciamiento")]
		public EntitySet<DatoCredito> DatoCredito
		{
			get
			{
				return this._DatoCredito;
			}
			set
			{
				this._DatoCredito.Assign(value);
			}
		}
		
		[Association(Name="EntidadFinanciamiento_DatoCredito1", Storage="_DatoCredito1", ThisKey="idEntidad", OtherKey="idEntidadOtorgante")]
		public EntitySet<DatoCredito> DatoCredito1
		{
			get
			{
				return this._DatoCredito1;
			}
			set
			{
				this._DatoCredito1.Assign(value);
			}
		}
		
		[Association(Name="EntidadFinanciamiento_TipoCreditoInterno", Storage="_TipoCreditoInterno", ThisKey="idEntidad", OtherKey="idEntidad")]
		public EntitySet<TipoCreditoInterno> TipoCreditoInterno
		{
			get
			{
				return this._TipoCreditoInterno;
			}
			set
			{
				this._TipoCreditoInterno.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento = this;
		}
		
		private void detach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento = null;
		}
		
		private void attach_DatoCredito1(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento1 = this;
		}
		
		private void detach_DatoCredito1(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento1 = null;
		}
		
		private void attach_TipoCreditoInterno(TipoCreditoInterno entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento = this;
		}
		
		private void detach_TipoCreditoInterno(TipoCreditoInterno entity)
		{
			this.SendPropertyChanging();
			entity.EntidadFinanciamiento = null;
		}
	}
	
	[Table(Name="dbo.EntornoInmueble")]
	public partial class EntornoInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private short _idTipoClasificacionZona;
		
		private short _idTipoConstrucciones;
		
		private short _idTipoDensidadPoblacion;
		
		private short _idTipoProximidadUrbana;
		
		private short _idTipoNivelSocioEconomico;
		
		private short _indiceSaturacion;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidTipoClasificacionZonaChanging(short value);
    partial void OnidTipoClasificacionZonaChanged();
    partial void OnidTipoConstruccionesChanging(short value);
    partial void OnidTipoConstruccionesChanged();
    partial void OnidTipoDensidadPoblacionChanging(short value);
    partial void OnidTipoDensidadPoblacionChanged();
    partial void OnidTipoProximidadUrbanaChanging(short value);
    partial void OnidTipoProximidadUrbanaChanged();
    partial void OnidTipoNivelSocioEconomicoChanging(short value);
    partial void OnidTipoNivelSocioEconomicoChanged();
    partial void OnindiceSaturacionChanging(short value);
    partial void OnindiceSaturacionChanged();
    #endregion
		
		public EntornoInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoClasificacionZona", DbType="SmallInt NOT NULL")]
		public short idTipoClasificacionZona
		{
			get
			{
				return this._idTipoClasificacionZona;
			}
			set
			{
				if ((this._idTipoClasificacionZona != value))
				{
					this.OnidTipoClasificacionZonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoClasificacionZona = value;
					this.SendPropertyChanged("idTipoClasificacionZona");
					this.OnidTipoClasificacionZonaChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoConstrucciones", DbType="SmallInt NOT NULL")]
		public short idTipoConstrucciones
		{
			get
			{
				return this._idTipoConstrucciones;
			}
			set
			{
				if ((this._idTipoConstrucciones != value))
				{
					this.OnidTipoConstruccionesChanging(value);
					this.SendPropertyChanging();
					this._idTipoConstrucciones = value;
					this.SendPropertyChanged("idTipoConstrucciones");
					this.OnidTipoConstruccionesChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoDensidadPoblacion", DbType="SmallInt NOT NULL")]
		public short idTipoDensidadPoblacion
		{
			get
			{
				return this._idTipoDensidadPoblacion;
			}
			set
			{
				if ((this._idTipoDensidadPoblacion != value))
				{
					this.OnidTipoDensidadPoblacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoDensidadPoblacion = value;
					this.SendPropertyChanged("idTipoDensidadPoblacion");
					this.OnidTipoDensidadPoblacionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoProximidadUrbana", DbType="SmallInt NOT NULL")]
		public short idTipoProximidadUrbana
		{
			get
			{
				return this._idTipoProximidadUrbana;
			}
			set
			{
				if ((this._idTipoProximidadUrbana != value))
				{
					this.OnidTipoProximidadUrbanaChanging(value);
					this.SendPropertyChanging();
					this._idTipoProximidadUrbana = value;
					this.SendPropertyChanged("idTipoProximidadUrbana");
					this.OnidTipoProximidadUrbanaChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoNivelSocioEconomico", DbType="SmallInt NOT NULL")]
		public short idTipoNivelSocioEconomico
		{
			get
			{
				return this._idTipoNivelSocioEconomico;
			}
			set
			{
				if ((this._idTipoNivelSocioEconomico != value))
				{
					this.OnidTipoNivelSocioEconomicoChanging(value);
					this.SendPropertyChanging();
					this._idTipoNivelSocioEconomico = value;
					this.SendPropertyChanged("idTipoNivelSocioEconomico");
					this.OnidTipoNivelSocioEconomicoChanged();
				}
			}
		}
		
		[Column(Storage="_indiceSaturacion", DbType="SmallInt NOT NULL")]
		public short indiceSaturacion
		{
			get
			{
				return this._indiceSaturacion;
			}
			set
			{
				if ((this._indiceSaturacion != value))
				{
					this.OnindiceSaturacionChanging(value);
					this.SendPropertyChanging();
					this._indiceSaturacion = value;
					this.SendPropertyChanged("indiceSaturacion");
					this.OnindiceSaturacionChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_EntornoInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.EntornoInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.EntornoInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EquipamientoInmueble")]
	public partial class EquipamientoInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private System.Nullable<double> _distanciaIglesia;
		
		private System.Nullable<double> _distanciaEscuela;
		
		private System.Nullable<double> _distanciaEstacionTransporte;
		
		private System.Nullable<double> _distanciaMercado;
		
		private System.Nullable<double> _distanciaHospital;
		
		private System.Nullable<double> _distanciaPlaza;
		
		private System.Nullable<double> _distanciaParque;
		
		private System.Nullable<double> _distanciaBanco;
		
		private double _proximidadGeneral;
		
		private short _nivelEquipamientoUrbano;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OndistanciaIglesiaChanging(System.Nullable<double> value);
    partial void OndistanciaIglesiaChanged();
    partial void OndistanciaEscuelaChanging(System.Nullable<double> value);
    partial void OndistanciaEscuelaChanged();
    partial void OndistanciaEstacionTransporteChanging(System.Nullable<double> value);
    partial void OndistanciaEstacionTransporteChanged();
    partial void OndistanciaMercadoChanging(System.Nullable<double> value);
    partial void OndistanciaMercadoChanged();
    partial void OndistanciaHospitalChanging(System.Nullable<double> value);
    partial void OndistanciaHospitalChanged();
    partial void OndistanciaPlazaChanging(System.Nullable<double> value);
    partial void OndistanciaPlazaChanged();
    partial void OndistanciaParqueChanging(System.Nullable<double> value);
    partial void OndistanciaParqueChanged();
    partial void OndistanciaBancoChanging(System.Nullable<double> value);
    partial void OndistanciaBancoChanged();
    partial void OnproximidadGeneralChanging(double value);
    partial void OnproximidadGeneralChanged();
    partial void OnnivelEquipamientoUrbanoChanging(short value);
    partial void OnnivelEquipamientoUrbanoChanged();
    #endregion
		
		public EquipamientoInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaIglesia", DbType="Float")]
		public System.Nullable<double> distanciaIglesia
		{
			get
			{
				return this._distanciaIglesia;
			}
			set
			{
				if ((this._distanciaIglesia != value))
				{
					this.OndistanciaIglesiaChanging(value);
					this.SendPropertyChanging();
					this._distanciaIglesia = value;
					this.SendPropertyChanged("distanciaIglesia");
					this.OndistanciaIglesiaChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaEscuela", DbType="Float")]
		public System.Nullable<double> distanciaEscuela
		{
			get
			{
				return this._distanciaEscuela;
			}
			set
			{
				if ((this._distanciaEscuela != value))
				{
					this.OndistanciaEscuelaChanging(value);
					this.SendPropertyChanging();
					this._distanciaEscuela = value;
					this.SendPropertyChanged("distanciaEscuela");
					this.OndistanciaEscuelaChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaEstacionTransporte", DbType="Float")]
		public System.Nullable<double> distanciaEstacionTransporte
		{
			get
			{
				return this._distanciaEstacionTransporte;
			}
			set
			{
				if ((this._distanciaEstacionTransporte != value))
				{
					this.OndistanciaEstacionTransporteChanging(value);
					this.SendPropertyChanging();
					this._distanciaEstacionTransporte = value;
					this.SendPropertyChanged("distanciaEstacionTransporte");
					this.OndistanciaEstacionTransporteChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaMercado", DbType="Float")]
		public System.Nullable<double> distanciaMercado
		{
			get
			{
				return this._distanciaMercado;
			}
			set
			{
				if ((this._distanciaMercado != value))
				{
					this.OndistanciaMercadoChanging(value);
					this.SendPropertyChanging();
					this._distanciaMercado = value;
					this.SendPropertyChanged("distanciaMercado");
					this.OndistanciaMercadoChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaHospital", DbType="Float")]
		public System.Nullable<double> distanciaHospital
		{
			get
			{
				return this._distanciaHospital;
			}
			set
			{
				if ((this._distanciaHospital != value))
				{
					this.OndistanciaHospitalChanging(value);
					this.SendPropertyChanging();
					this._distanciaHospital = value;
					this.SendPropertyChanged("distanciaHospital");
					this.OndistanciaHospitalChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaPlaza", DbType="Float")]
		public System.Nullable<double> distanciaPlaza
		{
			get
			{
				return this._distanciaPlaza;
			}
			set
			{
				if ((this._distanciaPlaza != value))
				{
					this.OndistanciaPlazaChanging(value);
					this.SendPropertyChanging();
					this._distanciaPlaza = value;
					this.SendPropertyChanged("distanciaPlaza");
					this.OndistanciaPlazaChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaParque", DbType="Float")]
		public System.Nullable<double> distanciaParque
		{
			get
			{
				return this._distanciaParque;
			}
			set
			{
				if ((this._distanciaParque != value))
				{
					this.OndistanciaParqueChanging(value);
					this.SendPropertyChanging();
					this._distanciaParque = value;
					this.SendPropertyChanged("distanciaParque");
					this.OndistanciaParqueChanged();
				}
			}
		}
		
		[Column(Storage="_distanciaBanco", DbType="Float")]
		public System.Nullable<double> distanciaBanco
		{
			get
			{
				return this._distanciaBanco;
			}
			set
			{
				if ((this._distanciaBanco != value))
				{
					this.OndistanciaBancoChanging(value);
					this.SendPropertyChanging();
					this._distanciaBanco = value;
					this.SendPropertyChanged("distanciaBanco");
					this.OndistanciaBancoChanged();
				}
			}
		}
		
		[Column(Storage="_proximidadGeneral", DbType="Float NOT NULL")]
		public double proximidadGeneral
		{
			get
			{
				return this._proximidadGeneral;
			}
			set
			{
				if ((this._proximidadGeneral != value))
				{
					this.OnproximidadGeneralChanging(value);
					this.SendPropertyChanging();
					this._proximidadGeneral = value;
					this.SendPropertyChanged("proximidadGeneral");
					this.OnproximidadGeneralChanged();
				}
			}
		}
		
		[Column(Storage="_nivelEquipamientoUrbano", DbType="SmallInt NOT NULL")]
		public short nivelEquipamientoUrbano
		{
			get
			{
				return this._nivelEquipamientoUrbano;
			}
			set
			{
				if ((this._nivelEquipamientoUrbano != value))
				{
					this.OnnivelEquipamientoUrbanoChanging(value);
					this.SendPropertyChanging();
					this._nivelEquipamientoUrbano = value;
					this.SendPropertyChanged("nivelEquipamientoUrbano");
					this.OnnivelEquipamientoUrbanoChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_EquipamientoInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.EquipamientoInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.EquipamientoInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EscriturasInmueble")]
	public partial class EscriturasInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private string _numero;
		
		private string _libro;
		
		private string _volumen;
		
		private string _notario;
		
		private string _notaria;
		
		private string _plaza;
		
		private System.DateTime _fecha;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnnumeroChanging(string value);
    partial void OnnumeroChanged();
    partial void OnlibroChanging(string value);
    partial void OnlibroChanged();
    partial void OnvolumenChanging(string value);
    partial void OnvolumenChanged();
    partial void OnnotarioChanging(string value);
    partial void OnnotarioChanged();
    partial void OnnotariaChanging(string value);
    partial void OnnotariaChanged();
    partial void OnplazaChanging(string value);
    partial void OnplazaChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    #endregion
		
		public EscriturasInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_numero", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string numero
		{
			get
			{
				return this._numero;
			}
			set
			{
				if ((this._numero != value))
				{
					this.OnnumeroChanging(value);
					this.SendPropertyChanging();
					this._numero = value;
					this.SendPropertyChanged("numero");
					this.OnnumeroChanged();
				}
			}
		}
		
		[Column(Storage="_libro", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string libro
		{
			get
			{
				return this._libro;
			}
			set
			{
				if ((this._libro != value))
				{
					this.OnlibroChanging(value);
					this.SendPropertyChanging();
					this._libro = value;
					this.SendPropertyChanged("libro");
					this.OnlibroChanged();
				}
			}
		}
		
		[Column(Storage="_volumen", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string volumen
		{
			get
			{
				return this._volumen;
			}
			set
			{
				if ((this._volumen != value))
				{
					this.OnvolumenChanging(value);
					this.SendPropertyChanging();
					this._volumen = value;
					this.SendPropertyChanged("volumen");
					this.OnvolumenChanged();
				}
			}
		}
		
		[Column(Storage="_notario", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string notario
		{
			get
			{
				return this._notario;
			}
			set
			{
				if ((this._notario != value))
				{
					this.OnnotarioChanging(value);
					this.SendPropertyChanging();
					this._notario = value;
					this.SendPropertyChanged("notario");
					this.OnnotarioChanged();
				}
			}
		}
		
		[Column(Storage="_notaria", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string notaria
		{
			get
			{
				return this._notaria;
			}
			set
			{
				if ((this._notaria != value))
				{
					this.OnnotariaChanging(value);
					this.SendPropertyChanging();
					this._notaria = value;
					this.SendPropertyChanged("notaria");
					this.OnnotariaChanged();
				}
			}
		}
		
		[Column(Storage="_plaza", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string plaza
		{
			get
			{
				return this._plaza;
			}
			set
			{
				if ((this._plaza != value))
				{
					this.OnplazaChanging(value);
					this.SendPropertyChanging();
					this._plaza = value;
					this.SendPropertyChanged("plaza");
					this.OnplazaChanged();
				}
			}
		}
		
		[Column(Storage="_fecha", DbType="SmallDateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_EscriturasInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.EscriturasInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.EscriturasInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Estado")]
	public partial class Estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _claveEstado;
		
		private string _nombreEstado;
		
		private EntitySet<EstadosColindantes> _EstadosColindantes;
		
		private EntitySet<EstadosColindantes> _EstadosColindantes1;
		
		private EntitySet<Municipio> _Municipio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclaveEstadoChanging(int value);
    partial void OnclaveEstadoChanged();
    partial void OnnombreEstadoChanging(string value);
    partial void OnnombreEstadoChanged();
    #endregion
		
		public Estado()
		{
			this._EstadosColindantes = new EntitySet<EstadosColindantes>(new Action<EstadosColindantes>(this.attach_EstadosColindantes), new Action<EstadosColindantes>(this.detach_EstadosColindantes));
			this._EstadosColindantes1 = new EntitySet<EstadosColindantes>(new Action<EstadosColindantes>(this.attach_EstadosColindantes1), new Action<EstadosColindantes>(this.detach_EstadosColindantes1));
			this._Municipio = new EntitySet<Municipio>(new Action<Municipio>(this.attach_Municipio), new Action<Municipio>(this.detach_Municipio));
			OnCreated();
		}
		
		[Column(Storage="_claveEstado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int claveEstado
		{
			get
			{
				return this._claveEstado;
			}
			set
			{
				if ((this._claveEstado != value))
				{
					this.OnclaveEstadoChanging(value);
					this.SendPropertyChanging();
					this._claveEstado = value;
					this.SendPropertyChanged("claveEstado");
					this.OnclaveEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreEstado", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreEstado
		{
			get
			{
				return this._nombreEstado;
			}
			set
			{
				if ((this._nombreEstado != value))
				{
					this.OnnombreEstadoChanging(value);
					this.SendPropertyChanging();
					this._nombreEstado = value;
					this.SendPropertyChanged("nombreEstado");
					this.OnnombreEstadoChanged();
				}
			}
		}
		
		[Association(Name="Estado_EstadosColindantes", Storage="_EstadosColindantes", ThisKey="claveEstado", OtherKey="claveEstado")]
		public EntitySet<EstadosColindantes> EstadosColindantes
		{
			get
			{
				return this._EstadosColindantes;
			}
			set
			{
				this._EstadosColindantes.Assign(value);
			}
		}
		
		[Association(Name="Estado_EstadosColindantes1", Storage="_EstadosColindantes1", ThisKey="claveEstado", OtherKey="claveEstadoColindante")]
		public EntitySet<EstadosColindantes> EstadosColindantes1
		{
			get
			{
				return this._EstadosColindantes1;
			}
			set
			{
				this._EstadosColindantes1.Assign(value);
			}
		}
		
		[Association(Name="Estado_Municipio", Storage="_Municipio", ThisKey="claveEstado", OtherKey="claveEstado")]
		public EntitySet<Municipio> Municipio
		{
			get
			{
				return this._Municipio;
			}
			set
			{
				this._Municipio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstadosColindantes(EstadosColindantes entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_EstadosColindantes(EstadosColindantes entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
		
		private void attach_EstadosColindantes1(EstadosColindantes entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = this;
		}
		
		private void detach_EstadosColindantes1(EstadosColindantes entity)
		{
			this.SendPropertyChanging();
			entity.Estado1 = null;
		}
		
		private void attach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Estado = this;
		}
		
		private void detach_Municipio(Municipio entity)
		{
			this.SendPropertyChanging();
			entity.Estado = null;
		}
	}
	
	[Table(Name="dbo.EstadosColindantes")]
	public partial class EstadosColindantes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _claveEstado;
		
		private int _claveEstadoColindante;
		
		private EntityRef<Estado> _Estado;
		
		private EntityRef<Estado> _Estado1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnclaveEstadoChanging(int value);
    partial void OnclaveEstadoChanged();
    partial void OnclaveEstadoColindanteChanging(int value);
    partial void OnclaveEstadoColindanteChanged();
    #endregion
		
		public EstadosColindantes()
		{
			this._Estado = default(EntityRef<Estado>);
			this._Estado1 = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[Column(Storage="_claveEstado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int claveEstado
		{
			get
			{
				return this._claveEstado;
			}
			set
			{
				if ((this._claveEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclaveEstadoChanging(value);
					this.SendPropertyChanging();
					this._claveEstado = value;
					this.SendPropertyChanged("claveEstado");
					this.OnclaveEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_claveEstadoColindante", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int claveEstadoColindante
		{
			get
			{
				return this._claveEstadoColindante;
			}
			set
			{
				if ((this._claveEstadoColindante != value))
				{
					if (this._Estado1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclaveEstadoColindanteChanging(value);
					this.SendPropertyChanging();
					this._claveEstadoColindante = value;
					this.SendPropertyChanged("claveEstadoColindante");
					this.OnclaveEstadoColindanteChanged();
				}
			}
		}
		
		[Association(Name="Estado_EstadosColindantes", Storage="_Estado", ThisKey="claveEstado", OtherKey="claveEstado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.EstadosColindantes.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.EstadosColindantes.Add(this);
						this._claveEstado = value.claveEstado;
					}
					else
					{
						this._claveEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		[Association(Name="Estado_EstadosColindantes1", Storage="_Estado1", ThisKey="claveEstadoColindante", OtherKey="claveEstado", IsForeignKey=true)]
		public Estado Estado1
		{
			get
			{
				return this._Estado1.Entity;
			}
			set
			{
				Estado previousValue = this._Estado1.Entity;
				if (((previousValue != value) 
							|| (this._Estado1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado1.Entity = null;
						previousValue.EstadosColindantes1.Remove(this);
					}
					this._Estado1.Entity = value;
					if ((value != null))
					{
						value.EstadosColindantes1.Add(this);
						this._claveEstadoColindante = value.claveEstado;
					}
					else
					{
						this._claveEstadoColindante = default(int);
					}
					this.SendPropertyChanged("Estado1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FormacionProfesional")]
	public partial class FormacionProfesional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFormacionProfesional;
		
		private short _idCarrera;
		
		private short _idUniversidad;
		
		private string _cedula;
		
		private System.DateTime _fechaCedula;
		
		private EntitySet<FormacionProfesionalValuador> _FormacionProfesionalValuador;
		
		private EntityRef<Carrera> _Carrera;
		
		private EntityRef<Universidad> _Universidad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFormacionProfesionalChanging(int value);
    partial void OnidFormacionProfesionalChanged();
    partial void OnidCarreraChanging(short value);
    partial void OnidCarreraChanged();
    partial void OnidUniversidadChanging(short value);
    partial void OnidUniversidadChanged();
    partial void OncedulaChanging(string value);
    partial void OncedulaChanged();
    partial void OnfechaCedulaChanging(System.DateTime value);
    partial void OnfechaCedulaChanged();
    #endregion
		
		public FormacionProfesional()
		{
			this._FormacionProfesionalValuador = new EntitySet<FormacionProfesionalValuador>(new Action<FormacionProfesionalValuador>(this.attach_FormacionProfesionalValuador), new Action<FormacionProfesionalValuador>(this.detach_FormacionProfesionalValuador));
			this._Carrera = default(EntityRef<Carrera>);
			this._Universidad = default(EntityRef<Universidad>);
			OnCreated();
		}
		
		[Column(Storage="_idFormacionProfesional", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFormacionProfesional
		{
			get
			{
				return this._idFormacionProfesional;
			}
			set
			{
				if ((this._idFormacionProfesional != value))
				{
					this.OnidFormacionProfesionalChanging(value);
					this.SendPropertyChanging();
					this._idFormacionProfesional = value;
					this.SendPropertyChanged("idFormacionProfesional");
					this.OnidFormacionProfesionalChanged();
				}
			}
		}
		
		[Column(Storage="_idCarrera", DbType="SmallInt NOT NULL")]
		public short idCarrera
		{
			get
			{
				return this._idCarrera;
			}
			set
			{
				if ((this._idCarrera != value))
				{
					if (this._Carrera.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCarreraChanging(value);
					this.SendPropertyChanging();
					this._idCarrera = value;
					this.SendPropertyChanged("idCarrera");
					this.OnidCarreraChanged();
				}
			}
		}
		
		[Column(Storage="_idUniversidad", DbType="SmallInt NOT NULL")]
		public short idUniversidad
		{
			get
			{
				return this._idUniversidad;
			}
			set
			{
				if ((this._idUniversidad != value))
				{
					if (this._Universidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUniversidadChanging(value);
					this.SendPropertyChanging();
					this._idUniversidad = value;
					this.SendPropertyChanged("idUniversidad");
					this.OnidUniversidadChanged();
				}
			}
		}
		
		[Column(Storage="_cedula", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string cedula
		{
			get
			{
				return this._cedula;
			}
			set
			{
				if ((this._cedula != value))
				{
					this.OncedulaChanging(value);
					this.SendPropertyChanging();
					this._cedula = value;
					this.SendPropertyChanged("cedula");
					this.OncedulaChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCedula", DbType="SmallDateTime NOT NULL")]
		public System.DateTime fechaCedula
		{
			get
			{
				return this._fechaCedula;
			}
			set
			{
				if ((this._fechaCedula != value))
				{
					this.OnfechaCedulaChanging(value);
					this.SendPropertyChanging();
					this._fechaCedula = value;
					this.SendPropertyChanged("fechaCedula");
					this.OnfechaCedulaChanged();
				}
			}
		}
		
		[Association(Name="FormacionProfesional_FormacionProfesionalValuador", Storage="_FormacionProfesionalValuador", ThisKey="idFormacionProfesional", OtherKey="idFormacionProfesional")]
		public EntitySet<FormacionProfesionalValuador> FormacionProfesionalValuador
		{
			get
			{
				return this._FormacionProfesionalValuador;
			}
			set
			{
				this._FormacionProfesionalValuador.Assign(value);
			}
		}
		
		[Association(Name="Carrera_FormacionProfesional", Storage="_Carrera", ThisKey="idCarrera", OtherKey="idCarrera", IsForeignKey=true)]
		public Carrera Carrera
		{
			get
			{
				return this._Carrera.Entity;
			}
			set
			{
				Carrera previousValue = this._Carrera.Entity;
				if (((previousValue != value) 
							|| (this._Carrera.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carrera.Entity = null;
						previousValue.FormacionProfesional.Remove(this);
					}
					this._Carrera.Entity = value;
					if ((value != null))
					{
						value.FormacionProfesional.Add(this);
						this._idCarrera = value.idCarrera;
					}
					else
					{
						this._idCarrera = default(short);
					}
					this.SendPropertyChanged("Carrera");
				}
			}
		}
		
		[Association(Name="Universidad_FormacionProfesional", Storage="_Universidad", ThisKey="idUniversidad", OtherKey="idUniversidad", IsForeignKey=true)]
		public Universidad Universidad
		{
			get
			{
				return this._Universidad.Entity;
			}
			set
			{
				Universidad previousValue = this._Universidad.Entity;
				if (((previousValue != value) 
							|| (this._Universidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Universidad.Entity = null;
						previousValue.FormacionProfesional.Remove(this);
					}
					this._Universidad.Entity = value;
					if ((value != null))
					{
						value.FormacionProfesional.Add(this);
						this._idUniversidad = value.idUniversidad;
					}
					else
					{
						this._idUniversidad = default(short);
					}
					this.SendPropertyChanged("Universidad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.FormacionProfesional = this;
		}
		
		private void detach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.FormacionProfesional = null;
		}
	}
	
	[Table(Name="dbo.FormacionProfesionalValuador")]
	public partial class FormacionProfesionalValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFormacionProfesional;
		
		private int _idValuador;
		
		private short _idTipoFormacion;
		
		private EntityRef<FormacionProfesional> _FormacionProfesional;
		
		private EntityRef<Valuador> _Valuador;
		
		private EntityRef<TipoFormacionProfesional> _TipoFormacionProfesional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFormacionProfesionalChanging(int value);
    partial void OnidFormacionProfesionalChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidTipoFormacionChanging(short value);
    partial void OnidTipoFormacionChanged();
    #endregion
		
		public FormacionProfesionalValuador()
		{
			this._FormacionProfesional = default(EntityRef<FormacionProfesional>);
			this._Valuador = default(EntityRef<Valuador>);
			this._TipoFormacionProfesional = default(EntityRef<TipoFormacionProfesional>);
			OnCreated();
		}
		
		[Column(Storage="_idFormacionProfesional", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFormacionProfesional
		{
			get
			{
				return this._idFormacionProfesional;
			}
			set
			{
				if ((this._idFormacionProfesional != value))
				{
					if (this._FormacionProfesional.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFormacionProfesionalChanging(value);
					this.SendPropertyChanging();
					this._idFormacionProfesional = value;
					this.SendPropertyChanged("idFormacionProfesional");
					this.OnidFormacionProfesionalChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoFormacion", DbType="SmallInt NOT NULL")]
		public short idTipoFormacion
		{
			get
			{
				return this._idTipoFormacion;
			}
			set
			{
				if ((this._idTipoFormacion != value))
				{
					if (this._TipoFormacionProfesional.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoFormacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoFormacion = value;
					this.SendPropertyChanged("idTipoFormacion");
					this.OnidTipoFormacionChanged();
				}
			}
		}
		
		[Association(Name="FormacionProfesional_FormacionProfesionalValuador", Storage="_FormacionProfesional", ThisKey="idFormacionProfesional", OtherKey="idFormacionProfesional", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FormacionProfesional FormacionProfesional
		{
			get
			{
				return this._FormacionProfesional.Entity;
			}
			set
			{
				FormacionProfesional previousValue = this._FormacionProfesional.Entity;
				if (((previousValue != value) 
							|| (this._FormacionProfesional.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormacionProfesional.Entity = null;
						previousValue.FormacionProfesionalValuador.Remove(this);
					}
					this._FormacionProfesional.Entity = value;
					if ((value != null))
					{
						value.FormacionProfesionalValuador.Add(this);
						this._idFormacionProfesional = value.idFormacionProfesional;
					}
					else
					{
						this._idFormacionProfesional = default(int);
					}
					this.SendPropertyChanged("FormacionProfesional");
				}
			}
		}
		
		[Association(Name="Valuador_FormacionProfesionalValuador", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.FormacionProfesionalValuador.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.FormacionProfesionalValuador.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		[Association(Name="TipoFormacionProfesional_FormacionProfesionalValuador", Storage="_TipoFormacionProfesional", ThisKey="idTipoFormacion", OtherKey="idTipoFormacion", IsForeignKey=true)]
		public TipoFormacionProfesional TipoFormacionProfesional
		{
			get
			{
				return this._TipoFormacionProfesional.Entity;
			}
			set
			{
				TipoFormacionProfesional previousValue = this._TipoFormacionProfesional.Entity;
				if (((previousValue != value) 
							|| (this._TipoFormacionProfesional.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoFormacionProfesional.Entity = null;
						previousValue.FormacionProfesionalValuador.Remove(this);
					}
					this._TipoFormacionProfesional.Entity = value;
					if ((value != null))
					{
						value.FormacionProfesionalValuador.Add(this);
						this._idTipoFormacion = value.idTipoFormacion;
					}
					else
					{
						this._idTipoFormacion = default(short);
					}
					this.SendPropertyChanged("TipoFormacionProfesional");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.FormacionValuador")]
	public partial class FormacionValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFormacionValuador;
		
		private short _idColegio;
		
		private string _registro;
		
		private System.DateTime _fechaIngreso;
		
		private EntitySet<Valuador> _Valuador;
		
		private EntityRef<ColegioValuadores> _ColegioValuadores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFormacionValuadorChanging(int value);
    partial void OnidFormacionValuadorChanged();
    partial void OnidColegioChanging(short value);
    partial void OnidColegioChanged();
    partial void OnregistroChanging(string value);
    partial void OnregistroChanged();
    partial void OnfechaIngresoChanging(System.DateTime value);
    partial void OnfechaIngresoChanged();
    #endregion
		
		public FormacionValuador()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			this._ColegioValuadores = default(EntityRef<ColegioValuadores>);
			OnCreated();
		}
		
		[Column(Storage="_idFormacionValuador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFormacionValuador
		{
			get
			{
				return this._idFormacionValuador;
			}
			set
			{
				if ((this._idFormacionValuador != value))
				{
					this.OnidFormacionValuadorChanging(value);
					this.SendPropertyChanging();
					this._idFormacionValuador = value;
					this.SendPropertyChanged("idFormacionValuador");
					this.OnidFormacionValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idColegio", DbType="SmallInt NOT NULL")]
		public short idColegio
		{
			get
			{
				return this._idColegio;
			}
			set
			{
				if ((this._idColegio != value))
				{
					if (this._ColegioValuadores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidColegioChanging(value);
					this.SendPropertyChanging();
					this._idColegio = value;
					this.SendPropertyChanged("idColegio");
					this.OnidColegioChanged();
				}
			}
		}
		
		[Column(Storage="_registro", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string registro
		{
			get
			{
				return this._registro;
			}
			set
			{
				if ((this._registro != value))
				{
					this.OnregistroChanging(value);
					this.SendPropertyChanging();
					this._registro = value;
					this.SendPropertyChanged("registro");
					this.OnregistroChanged();
				}
			}
		}
		
		[Column(Storage="_fechaIngreso", DbType="SmallDateTime NOT NULL")]
		public System.DateTime fechaIngreso
		{
			get
			{
				return this._fechaIngreso;
			}
			set
			{
				if ((this._fechaIngreso != value))
				{
					this.OnfechaIngresoChanging(value);
					this.SendPropertyChanging();
					this._fechaIngreso = value;
					this.SendPropertyChanged("fechaIngreso");
					this.OnfechaIngresoChanged();
				}
			}
		}
		
		[Association(Name="FormacionValuador_Valuador", Storage="_Valuador", ThisKey="idFormacionValuador", OtherKey="idFormacionValuacion")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		[Association(Name="ColegioValuadores_FormacionValuador", Storage="_ColegioValuadores", ThisKey="idColegio", OtherKey="idcolegioValuadores", IsForeignKey=true)]
		public ColegioValuadores ColegioValuadores
		{
			get
			{
				return this._ColegioValuadores.Entity;
			}
			set
			{
				ColegioValuadores previousValue = this._ColegioValuadores.Entity;
				if (((previousValue != value) 
							|| (this._ColegioValuadores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ColegioValuadores.Entity = null;
						previousValue.FormacionValuador.Remove(this);
					}
					this._ColegioValuadores.Entity = value;
					if ((value != null))
					{
						value.FormacionValuador.Add(this);
						this._idColegio = value.idcolegioValuadores;
					}
					else
					{
						this._idColegio = default(short);
					}
					this.SendPropertyChanged("ColegioValuadores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.FormacionValuador = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.FormacionValuador = null;
		}
	}
	
	[Table(Name="dbo.GeolocalizacionInmueble")]
	public partial class GeolocalizacionInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private bool _formatoAbsoluto;
		
		private decimal _longitud;
		
		private decimal _latitud;
		
		private decimal _altitud;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnformatoAbsolutoChanging(bool value);
    partial void OnformatoAbsolutoChanged();
    partial void OnlongitudChanging(decimal value);
    partial void OnlongitudChanged();
    partial void OnlatitudChanging(decimal value);
    partial void OnlatitudChanged();
    partial void OnaltitudChanging(decimal value);
    partial void OnaltitudChanged();
    #endregion
		
		public GeolocalizacionInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_formatoAbsoluto", DbType="Bit NOT NULL")]
		public bool formatoAbsoluto
		{
			get
			{
				return this._formatoAbsoluto;
			}
			set
			{
				if ((this._formatoAbsoluto != value))
				{
					this.OnformatoAbsolutoChanging(value);
					this.SendPropertyChanging();
					this._formatoAbsoluto = value;
					this.SendPropertyChanged("formatoAbsoluto");
					this.OnformatoAbsolutoChanged();
				}
			}
		}
		
		[Column(Storage="_longitud", DbType="Decimal(18,0) NOT NULL")]
		public decimal longitud
		{
			get
			{
				return this._longitud;
			}
			set
			{
				if ((this._longitud != value))
				{
					this.OnlongitudChanging(value);
					this.SendPropertyChanging();
					this._longitud = value;
					this.SendPropertyChanged("longitud");
					this.OnlongitudChanged();
				}
			}
		}
		
		[Column(Storage="_latitud", DbType="Decimal(18,0) NOT NULL")]
		public decimal latitud
		{
			get
			{
				return this._latitud;
			}
			set
			{
				if ((this._latitud != value))
				{
					this.OnlatitudChanging(value);
					this.SendPropertyChanging();
					this._latitud = value;
					this.SendPropertyChanged("latitud");
					this.OnlatitudChanged();
				}
			}
		}
		
		[Column(Storage="_altitud", DbType="Decimal(18,0) NOT NULL")]
		public decimal altitud
		{
			get
			{
				return this._altitud;
			}
			set
			{
				if ((this._altitud != value))
				{
					this.OnaltitudChanging(value);
					this.SendPropertyChanging();
					this._altitud = value;
					this.SendPropertyChanged("altitud");
					this.OnaltitudChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_GeolocalizacionInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true)]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.GeolocalizacionInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.GeolocalizacionInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.HistorialRevision")]
	public partial class HistorialRevision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHistorial;
		
		private int _idRevision;
		
		private System.Nullable<int> _idCapturaAvaluo;
		
		private string _observaciones;
		
		private System.DateTime _fechaRevision;
		
		private EntityRef<Archivo> _Archivo;
		
		private EntityRef<RevisionAvaluo> _RevisionAvaluo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHistorialChanging(int value);
    partial void OnidHistorialChanged();
    partial void OnidRevisionChanging(int value);
    partial void OnidRevisionChanged();
    partial void OnidCapturaAvaluoChanging(System.Nullable<int> value);
    partial void OnidCapturaAvaluoChanged();
    partial void OnobservacionesChanging(string value);
    partial void OnobservacionesChanged();
    partial void OnfechaRevisionChanging(System.DateTime value);
    partial void OnfechaRevisionChanged();
    #endregion
		
		public HistorialRevision()
		{
			this._Archivo = default(EntityRef<Archivo>);
			this._RevisionAvaluo = default(EntityRef<RevisionAvaluo>);
			OnCreated();
		}
		
		[Column(Storage="_idHistorial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHistorial
		{
			get
			{
				return this._idHistorial;
			}
			set
			{
				if ((this._idHistorial != value))
				{
					this.OnidHistorialChanging(value);
					this.SendPropertyChanging();
					this._idHistorial = value;
					this.SendPropertyChanged("idHistorial");
					this.OnidHistorialChanged();
				}
			}
		}
		
		[Column(Storage="_idRevision", DbType="Int NOT NULL")]
		public int idRevision
		{
			get
			{
				return this._idRevision;
			}
			set
			{
				if ((this._idRevision != value))
				{
					if (this._RevisionAvaluo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRevisionChanging(value);
					this.SendPropertyChanging();
					this._idRevision = value;
					this.SendPropertyChanged("idRevision");
					this.OnidRevisionChanged();
				}
			}
		}
		
		[Column(Storage="_idCapturaAvaluo", DbType="Int")]
		public System.Nullable<int> idCapturaAvaluo
		{
			get
			{
				return this._idCapturaAvaluo;
			}
			set
			{
				if ((this._idCapturaAvaluo != value))
				{
					if (this._Archivo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCapturaAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idCapturaAvaluo = value;
					this.SendPropertyChanged("idCapturaAvaluo");
					this.OnidCapturaAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_observaciones", DbType="NVarChar(512)")]
		public string observaciones
		{
			get
			{
				return this._observaciones;
			}
			set
			{
				if ((this._observaciones != value))
				{
					this.OnobservacionesChanging(value);
					this.SendPropertyChanging();
					this._observaciones = value;
					this.SendPropertyChanged("observaciones");
					this.OnobservacionesChanged();
				}
			}
		}
		
		[Column(Storage="_fechaRevision", DbType="DateTime NOT NULL")]
		public System.DateTime fechaRevision
		{
			get
			{
				return this._fechaRevision;
			}
			set
			{
				if ((this._fechaRevision != value))
				{
					this.OnfechaRevisionChanging(value);
					this.SendPropertyChanging();
					this._fechaRevision = value;
					this.SendPropertyChanged("fechaRevision");
					this.OnfechaRevisionChanged();
				}
			}
		}
		
		[Association(Name="Archivo_HistorialRevision", Storage="_Archivo", ThisKey="idCapturaAvaluo", OtherKey="idArchivo", IsForeignKey=true)]
		public Archivo Archivo
		{
			get
			{
				return this._Archivo.Entity;
			}
			set
			{
				Archivo previousValue = this._Archivo.Entity;
				if (((previousValue != value) 
							|| (this._Archivo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Archivo.Entity = null;
						previousValue.HistorialRevision.Remove(this);
					}
					this._Archivo.Entity = value;
					if ((value != null))
					{
						value.HistorialRevision.Add(this);
						this._idCapturaAvaluo = value.idArchivo;
					}
					else
					{
						this._idCapturaAvaluo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Archivo");
				}
			}
		}
		
		[Association(Name="RevisionAvaluo_HistorialRevision", Storage="_RevisionAvaluo", ThisKey="idRevision", OtherKey="idRevision", IsForeignKey=true)]
		public RevisionAvaluo RevisionAvaluo
		{
			get
			{
				return this._RevisionAvaluo.Entity;
			}
			set
			{
				RevisionAvaluo previousValue = this._RevisionAvaluo.Entity;
				if (((previousValue != value) 
							|| (this._RevisionAvaluo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevisionAvaluo.Entity = null;
						previousValue.HistorialRevision.Remove(this);
					}
					this._RevisionAvaluo.Entity = value;
					if ((value != null))
					{
						value.HistorialRevision.Add(this);
						this._idRevision = value.idRevision;
					}
					else
					{
						this._idRevision = default(int);
					}
					this.SendPropertyChanged("RevisionAvaluo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.InfraestructuraInmueble")]
	public partial class InfraestructuraInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private bool _aguaPotable;
		
		private bool _aguaPotableSuministro;
		
		private bool _electrificacion;
		
		private bool _electrificacionRedAerea;
		
		private bool _electrificacionConAcometida;
		
		private bool _drenaje;
		
		private bool _drenajeConexion;
		
		private bool _drenajeFosaSeptica;
		
		private bool _alumbradoPublico;
		
		private bool _alumbradoPublicoAereo;
		
		private bool _vialidades;
		
		private System.Nullable<short> _idTipoVialidades;
		
		private System.Nullable<double> _anchoVialidades;
		
		private bool _banquetas;
		
		private System.Nullable<short> _idTipoBanquetas;
		
		private bool _guarniciones;
		
		private System.Nullable<short> _idTipoGuarniciones;
		
		private double _nivelInfraestructura;
		
		private short _nivelInfraestructuraSHF;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnaguaPotableChanging(bool value);
    partial void OnaguaPotableChanged();
    partial void OnaguaPotableSuministroChanging(bool value);
    partial void OnaguaPotableSuministroChanged();
    partial void OnelectrificacionChanging(bool value);
    partial void OnelectrificacionChanged();
    partial void OnelectrificacionRedAereaChanging(bool value);
    partial void OnelectrificacionRedAereaChanged();
    partial void OnelectrificacionConAcometidaChanging(bool value);
    partial void OnelectrificacionConAcometidaChanged();
    partial void OndrenajeChanging(bool value);
    partial void OndrenajeChanged();
    partial void OndrenajeConexionChanging(bool value);
    partial void OndrenajeConexionChanged();
    partial void OndrenajeFosaSepticaChanging(bool value);
    partial void OndrenajeFosaSepticaChanged();
    partial void OnalumbradoPublicoChanging(bool value);
    partial void OnalumbradoPublicoChanged();
    partial void OnalumbradoPublicoAereoChanging(bool value);
    partial void OnalumbradoPublicoAereoChanged();
    partial void OnvialidadesChanging(bool value);
    partial void OnvialidadesChanged();
    partial void OnidTipoVialidadesChanging(System.Nullable<short> value);
    partial void OnidTipoVialidadesChanged();
    partial void OnanchoVialidadesChanging(System.Nullable<double> value);
    partial void OnanchoVialidadesChanged();
    partial void OnbanquetasChanging(bool value);
    partial void OnbanquetasChanged();
    partial void OnidTipoBanquetasChanging(System.Nullable<short> value);
    partial void OnidTipoBanquetasChanged();
    partial void OnguarnicionesChanging(bool value);
    partial void OnguarnicionesChanged();
    partial void OnidTipoGuarnicionesChanging(System.Nullable<short> value);
    partial void OnidTipoGuarnicionesChanged();
    partial void OnnivelInfraestructuraChanging(double value);
    partial void OnnivelInfraestructuraChanged();
    partial void OnnivelInfraestructuraSHFChanging(short value);
    partial void OnnivelInfraestructuraSHFChanged();
    #endregion
		
		public InfraestructuraInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_aguaPotable", DbType="Bit NOT NULL")]
		public bool aguaPotable
		{
			get
			{
				return this._aguaPotable;
			}
			set
			{
				if ((this._aguaPotable != value))
				{
					this.OnaguaPotableChanging(value);
					this.SendPropertyChanging();
					this._aguaPotable = value;
					this.SendPropertyChanged("aguaPotable");
					this.OnaguaPotableChanged();
				}
			}
		}
		
		[Column(Storage="_aguaPotableSuministro", DbType="Bit NOT NULL")]
		public bool aguaPotableSuministro
		{
			get
			{
				return this._aguaPotableSuministro;
			}
			set
			{
				if ((this._aguaPotableSuministro != value))
				{
					this.OnaguaPotableSuministroChanging(value);
					this.SendPropertyChanging();
					this._aguaPotableSuministro = value;
					this.SendPropertyChanged("aguaPotableSuministro");
					this.OnaguaPotableSuministroChanged();
				}
			}
		}
		
		[Column(Storage="_electrificacion", DbType="Bit NOT NULL")]
		public bool electrificacion
		{
			get
			{
				return this._electrificacion;
			}
			set
			{
				if ((this._electrificacion != value))
				{
					this.OnelectrificacionChanging(value);
					this.SendPropertyChanging();
					this._electrificacion = value;
					this.SendPropertyChanged("electrificacion");
					this.OnelectrificacionChanged();
				}
			}
		}
		
		[Column(Storage="_electrificacionRedAerea", DbType="Bit NOT NULL")]
		public bool electrificacionRedAerea
		{
			get
			{
				return this._electrificacionRedAerea;
			}
			set
			{
				if ((this._electrificacionRedAerea != value))
				{
					this.OnelectrificacionRedAereaChanging(value);
					this.SendPropertyChanging();
					this._electrificacionRedAerea = value;
					this.SendPropertyChanged("electrificacionRedAerea");
					this.OnelectrificacionRedAereaChanged();
				}
			}
		}
		
		[Column(Storage="_electrificacionConAcometida", DbType="Bit NOT NULL")]
		public bool electrificacionConAcometida
		{
			get
			{
				return this._electrificacionConAcometida;
			}
			set
			{
				if ((this._electrificacionConAcometida != value))
				{
					this.OnelectrificacionConAcometidaChanging(value);
					this.SendPropertyChanging();
					this._electrificacionConAcometida = value;
					this.SendPropertyChanged("electrificacionConAcometida");
					this.OnelectrificacionConAcometidaChanged();
				}
			}
		}
		
		[Column(Storage="_drenaje", DbType="Bit NOT NULL")]
		public bool drenaje
		{
			get
			{
				return this._drenaje;
			}
			set
			{
				if ((this._drenaje != value))
				{
					this.OndrenajeChanging(value);
					this.SendPropertyChanging();
					this._drenaje = value;
					this.SendPropertyChanged("drenaje");
					this.OndrenajeChanged();
				}
			}
		}
		
		[Column(Storage="_drenajeConexion", DbType="Bit NOT NULL")]
		public bool drenajeConexion
		{
			get
			{
				return this._drenajeConexion;
			}
			set
			{
				if ((this._drenajeConexion != value))
				{
					this.OndrenajeConexionChanging(value);
					this.SendPropertyChanging();
					this._drenajeConexion = value;
					this.SendPropertyChanged("drenajeConexion");
					this.OndrenajeConexionChanged();
				}
			}
		}
		
		[Column(Storage="_drenajeFosaSeptica", DbType="Bit NOT NULL")]
		public bool drenajeFosaSeptica
		{
			get
			{
				return this._drenajeFosaSeptica;
			}
			set
			{
				if ((this._drenajeFosaSeptica != value))
				{
					this.OndrenajeFosaSepticaChanging(value);
					this.SendPropertyChanging();
					this._drenajeFosaSeptica = value;
					this.SendPropertyChanged("drenajeFosaSeptica");
					this.OndrenajeFosaSepticaChanged();
				}
			}
		}
		
		[Column(Storage="_alumbradoPublico", DbType="Bit NOT NULL")]
		public bool alumbradoPublico
		{
			get
			{
				return this._alumbradoPublico;
			}
			set
			{
				if ((this._alumbradoPublico != value))
				{
					this.OnalumbradoPublicoChanging(value);
					this.SendPropertyChanging();
					this._alumbradoPublico = value;
					this.SendPropertyChanged("alumbradoPublico");
					this.OnalumbradoPublicoChanged();
				}
			}
		}
		
		[Column(Storage="_alumbradoPublicoAereo", DbType="Bit NOT NULL")]
		public bool alumbradoPublicoAereo
		{
			get
			{
				return this._alumbradoPublicoAereo;
			}
			set
			{
				if ((this._alumbradoPublicoAereo != value))
				{
					this.OnalumbradoPublicoAereoChanging(value);
					this.SendPropertyChanging();
					this._alumbradoPublicoAereo = value;
					this.SendPropertyChanged("alumbradoPublicoAereo");
					this.OnalumbradoPublicoAereoChanged();
				}
			}
		}
		
		[Column(Storage="_vialidades", DbType="Bit NOT NULL")]
		public bool vialidades
		{
			get
			{
				return this._vialidades;
			}
			set
			{
				if ((this._vialidades != value))
				{
					this.OnvialidadesChanging(value);
					this.SendPropertyChanging();
					this._vialidades = value;
					this.SendPropertyChanged("vialidades");
					this.OnvialidadesChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoVialidades", DbType="SmallInt")]
		public System.Nullable<short> idTipoVialidades
		{
			get
			{
				return this._idTipoVialidades;
			}
			set
			{
				if ((this._idTipoVialidades != value))
				{
					this.OnidTipoVialidadesChanging(value);
					this.SendPropertyChanging();
					this._idTipoVialidades = value;
					this.SendPropertyChanged("idTipoVialidades");
					this.OnidTipoVialidadesChanged();
				}
			}
		}
		
		[Column(Storage="_anchoVialidades", DbType="Float")]
		public System.Nullable<double> anchoVialidades
		{
			get
			{
				return this._anchoVialidades;
			}
			set
			{
				if ((this._anchoVialidades != value))
				{
					this.OnanchoVialidadesChanging(value);
					this.SendPropertyChanging();
					this._anchoVialidades = value;
					this.SendPropertyChanged("anchoVialidades");
					this.OnanchoVialidadesChanged();
				}
			}
		}
		
		[Column(Storage="_banquetas", DbType="Bit NOT NULL")]
		public bool banquetas
		{
			get
			{
				return this._banquetas;
			}
			set
			{
				if ((this._banquetas != value))
				{
					this.OnbanquetasChanging(value);
					this.SendPropertyChanging();
					this._banquetas = value;
					this.SendPropertyChanged("banquetas");
					this.OnbanquetasChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoBanquetas", DbType="SmallInt")]
		public System.Nullable<short> idTipoBanquetas
		{
			get
			{
				return this._idTipoBanquetas;
			}
			set
			{
				if ((this._idTipoBanquetas != value))
				{
					this.OnidTipoBanquetasChanging(value);
					this.SendPropertyChanging();
					this._idTipoBanquetas = value;
					this.SendPropertyChanged("idTipoBanquetas");
					this.OnidTipoBanquetasChanged();
				}
			}
		}
		
		[Column(Storage="_guarniciones", DbType="Bit NOT NULL")]
		public bool guarniciones
		{
			get
			{
				return this._guarniciones;
			}
			set
			{
				if ((this._guarniciones != value))
				{
					this.OnguarnicionesChanging(value);
					this.SendPropertyChanging();
					this._guarniciones = value;
					this.SendPropertyChanged("guarniciones");
					this.OnguarnicionesChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoGuarniciones", DbType="SmallInt")]
		public System.Nullable<short> idTipoGuarniciones
		{
			get
			{
				return this._idTipoGuarniciones;
			}
			set
			{
				if ((this._idTipoGuarniciones != value))
				{
					this.OnidTipoGuarnicionesChanging(value);
					this.SendPropertyChanging();
					this._idTipoGuarniciones = value;
					this.SendPropertyChanged("idTipoGuarniciones");
					this.OnidTipoGuarnicionesChanged();
				}
			}
		}
		
		[Column(Storage="_nivelInfraestructura", DbType="Float NOT NULL")]
		public double nivelInfraestructura
		{
			get
			{
				return this._nivelInfraestructura;
			}
			set
			{
				if ((this._nivelInfraestructura != value))
				{
					this.OnnivelInfraestructuraChanging(value);
					this.SendPropertyChanging();
					this._nivelInfraestructura = value;
					this.SendPropertyChanged("nivelInfraestructura");
					this.OnnivelInfraestructuraChanged();
				}
			}
		}
		
		[Column(Storage="_nivelInfraestructuraSHF", DbType="SmallInt NOT NULL")]
		public short nivelInfraestructuraSHF
		{
			get
			{
				return this._nivelInfraestructuraSHF;
			}
			set
			{
				if ((this._nivelInfraestructuraSHF != value))
				{
					this.OnnivelInfraestructuraSHFChanging(value);
					this.SendPropertyChanging();
					this._nivelInfraestructuraSHF = value;
					this.SendPropertyChanged("nivelInfraestructuraSHF");
					this.OnnivelInfraestructuraSHFChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_InfraestructuraInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.InfraestructuraInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.InfraestructuraInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Inmueble")]
	public partial class Inmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private int _idPropietario;
		
		private short _idTipoInmueble;
		
		private short _idRegimenPropiedad;
		
		private int _idDireccionInmueble;
		
		private string _otroTipoInmueble;
		
		private string _claveCatastral;
		
		private string _cuentaPredial;
		
		private string _cuentaAgua;
		
		private string _telefono;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntityRef<EntornoInmueble> _EntornoInmueble;
		
		private EntityRef<EquipamientoInmueble> _EquipamientoInmueble;
		
		private EntityRef<EscriturasInmueble> _EscriturasInmueble;
		
		private EntityRef<GeolocalizacionInmueble> _GeolocalizacionInmueble;
		
		private EntityRef<InfraestructuraInmueble> _InfraestructuraInmueble;
		
		private EntityRef<ServiciosInmueble> _ServiciosInmueble;
		
		private EntityRef<SuperficiesInmueble> _SuperficiesInmueble;
		
		private EntityRef<UbicacionCallesInmueble> _UbicacionCallesInmueble;
		
		private EntityRef<UbicacionInmueble> _UbicacionInmueble;
		
		private EntityRef<UsoActualInmueble> _UsoActualInmueble;
		
		private EntitySet<ViasAcceso> _ViasAcceso;
		
		private EntityRef<ConstruccionInmueble> _ConstruccionInmueble;
		
		private EntityRef<DatoCondominio> _DatoCondominio;
		
		private EntityRef<DireccionInmueble> _DireccionInmueble;
		
		private EntityRef<Propietario> _Propietario;
		
		private EntityRef<RegimenPropiedad> _RegimenPropiedad;
		
		private EntityRef<TipoInmueble> _TipoInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidPropietarioChanging(int value);
    partial void OnidPropietarioChanged();
    partial void OnidTipoInmuebleChanging(short value);
    partial void OnidTipoInmuebleChanged();
    partial void OnidRegimenPropiedadChanging(short value);
    partial void OnidRegimenPropiedadChanged();
    partial void OnidDireccionInmuebleChanging(int value);
    partial void OnidDireccionInmuebleChanged();
    partial void OnotroTipoInmuebleChanging(string value);
    partial void OnotroTipoInmuebleChanged();
    partial void OnclaveCatastralChanging(string value);
    partial void OnclaveCatastralChanged();
    partial void OncuentaPredialChanging(string value);
    partial void OncuentaPredialChanged();
    partial void OncuentaAguaChanging(string value);
    partial void OncuentaAguaChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public Inmueble()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			this._EntornoInmueble = default(EntityRef<EntornoInmueble>);
			this._EquipamientoInmueble = default(EntityRef<EquipamientoInmueble>);
			this._EscriturasInmueble = default(EntityRef<EscriturasInmueble>);
			this._GeolocalizacionInmueble = default(EntityRef<GeolocalizacionInmueble>);
			this._InfraestructuraInmueble = default(EntityRef<InfraestructuraInmueble>);
			this._ServiciosInmueble = default(EntityRef<ServiciosInmueble>);
			this._SuperficiesInmueble = default(EntityRef<SuperficiesInmueble>);
			this._UbicacionCallesInmueble = default(EntityRef<UbicacionCallesInmueble>);
			this._UbicacionInmueble = default(EntityRef<UbicacionInmueble>);
			this._UsoActualInmueble = default(EntityRef<UsoActualInmueble>);
			this._ViasAcceso = new EntitySet<ViasAcceso>(new Action<ViasAcceso>(this.attach_ViasAcceso), new Action<ViasAcceso>(this.detach_ViasAcceso));
			this._ConstruccionInmueble = default(EntityRef<ConstruccionInmueble>);
			this._DatoCondominio = default(EntityRef<DatoCondominio>);
			this._DireccionInmueble = default(EntityRef<DireccionInmueble>);
			this._Propietario = default(EntityRef<Propietario>);
			this._RegimenPropiedad = default(EntityRef<RegimenPropiedad>);
			this._TipoInmueble = default(EntityRef<TipoInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idPropietario", DbType="Int NOT NULL")]
		public int idPropietario
		{
			get
			{
				return this._idPropietario;
			}
			set
			{
				if ((this._idPropietario != value))
				{
					if (this._Propietario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPropietarioChanging(value);
					this.SendPropertyChanging();
					this._idPropietario = value;
					this.SendPropertyChanged("idPropietario");
					this.OnidPropietarioChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoInmueble", DbType="SmallInt NOT NULL")]
		public short idTipoInmueble
		{
			get
			{
				return this._idTipoInmueble;
			}
			set
			{
				if ((this._idTipoInmueble != value))
				{
					if (this._TipoInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idTipoInmueble = value;
					this.SendPropertyChanged("idTipoInmueble");
					this.OnidTipoInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idRegimenPropiedad", DbType="SmallInt NOT NULL")]
		public short idRegimenPropiedad
		{
			get
			{
				return this._idRegimenPropiedad;
			}
			set
			{
				if ((this._idRegimenPropiedad != value))
				{
					if (this._RegimenPropiedad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRegimenPropiedadChanging(value);
					this.SendPropertyChanging();
					this._idRegimenPropiedad = value;
					this.SendPropertyChanged("idRegimenPropiedad");
					this.OnidRegimenPropiedadChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccionInmueble", DbType="Int NOT NULL")]
		public int idDireccionInmueble
		{
			get
			{
				return this._idDireccionInmueble;
			}
			set
			{
				if ((this._idDireccionInmueble != value))
				{
					if (this._DireccionInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idDireccionInmueble = value;
					this.SendPropertyChanged("idDireccionInmueble");
					this.OnidDireccionInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_otroTipoInmueble", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string otroTipoInmueble
		{
			get
			{
				return this._otroTipoInmueble;
			}
			set
			{
				if ((this._otroTipoInmueble != value))
				{
					this.OnotroTipoInmuebleChanging(value);
					this.SendPropertyChanging();
					this._otroTipoInmueble = value;
					this.SendPropertyChanged("otroTipoInmueble");
					this.OnotroTipoInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_claveCatastral", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string claveCatastral
		{
			get
			{
				return this._claveCatastral;
			}
			set
			{
				if ((this._claveCatastral != value))
				{
					this.OnclaveCatastralChanging(value);
					this.SendPropertyChanging();
					this._claveCatastral = value;
					this.SendPropertyChanged("claveCatastral");
					this.OnclaveCatastralChanged();
				}
			}
		}
		
		[Column(Storage="_cuentaPredial", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string cuentaPredial
		{
			get
			{
				return this._cuentaPredial;
			}
			set
			{
				if ((this._cuentaPredial != value))
				{
					this.OncuentaPredialChanging(value);
					this.SendPropertyChanging();
					this._cuentaPredial = value;
					this.SendPropertyChanged("cuentaPredial");
					this.OncuentaPredialChanged();
				}
			}
		}
		
		[Column(Storage="_cuentaAgua", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string cuentaAgua
		{
			get
			{
				return this._cuentaAgua;
			}
			set
			{
				if ((this._cuentaAgua != value))
				{
					this.OncuentaAguaChanging(value);
					this.SendPropertyChanging();
					this._cuentaAgua = value;
					this.SendPropertyChanged("cuentaAgua");
					this.OncuentaAguaChanged();
				}
			}
		}
		
		[Column(Storage="_telefono", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.Inmueble = null;
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		[Association(Name="Inmueble_EntornoInmueble", Storage="_EntornoInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public EntornoInmueble EntornoInmueble
		{
			get
			{
				return this._EntornoInmueble.Entity;
			}
			set
			{
				EntornoInmueble previousValue = this._EntornoInmueble.Entity;
				if (((previousValue != value) 
							|| (this._EntornoInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntornoInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._EntornoInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("EntornoInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_EquipamientoInmueble", Storage="_EquipamientoInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public EquipamientoInmueble EquipamientoInmueble
		{
			get
			{
				return this._EquipamientoInmueble.Entity;
			}
			set
			{
				EquipamientoInmueble previousValue = this._EquipamientoInmueble.Entity;
				if (((previousValue != value) 
							|| (this._EquipamientoInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EquipamientoInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._EquipamientoInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("EquipamientoInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_EscriturasInmueble", Storage="_EscriturasInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public EscriturasInmueble EscriturasInmueble
		{
			get
			{
				return this._EscriturasInmueble.Entity;
			}
			set
			{
				EscriturasInmueble previousValue = this._EscriturasInmueble.Entity;
				if (((previousValue != value) 
							|| (this._EscriturasInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EscriturasInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._EscriturasInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("EscriturasInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_GeolocalizacionInmueble", Storage="_GeolocalizacionInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public GeolocalizacionInmueble GeolocalizacionInmueble
		{
			get
			{
				return this._GeolocalizacionInmueble.Entity;
			}
			set
			{
				GeolocalizacionInmueble previousValue = this._GeolocalizacionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._GeolocalizacionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeolocalizacionInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._GeolocalizacionInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("GeolocalizacionInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_InfraestructuraInmueble", Storage="_InfraestructuraInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public InfraestructuraInmueble InfraestructuraInmueble
		{
			get
			{
				return this._InfraestructuraInmueble.Entity;
			}
			set
			{
				InfraestructuraInmueble previousValue = this._InfraestructuraInmueble.Entity;
				if (((previousValue != value) 
							|| (this._InfraestructuraInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InfraestructuraInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._InfraestructuraInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("InfraestructuraInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_ServiciosInmueble", Storage="_ServiciosInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public ServiciosInmueble ServiciosInmueble
		{
			get
			{
				return this._ServiciosInmueble.Entity;
			}
			set
			{
				ServiciosInmueble previousValue = this._ServiciosInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ServiciosInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiciosInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._ServiciosInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("ServiciosInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_SuperficiesInmueble", Storage="_SuperficiesInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public SuperficiesInmueble SuperficiesInmueble
		{
			get
			{
				return this._SuperficiesInmueble.Entity;
			}
			set
			{
				SuperficiesInmueble previousValue = this._SuperficiesInmueble.Entity;
				if (((previousValue != value) 
							|| (this._SuperficiesInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuperficiesInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._SuperficiesInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("SuperficiesInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_UbicacionCallesInmueble", Storage="_UbicacionCallesInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public UbicacionCallesInmueble UbicacionCallesInmueble
		{
			get
			{
				return this._UbicacionCallesInmueble.Entity;
			}
			set
			{
				UbicacionCallesInmueble previousValue = this._UbicacionCallesInmueble.Entity;
				if (((previousValue != value) 
							|| (this._UbicacionCallesInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UbicacionCallesInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._UbicacionCallesInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("UbicacionCallesInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_UbicacionInmueble", Storage="_UbicacionInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public UbicacionInmueble UbicacionInmueble
		{
			get
			{
				return this._UbicacionInmueble.Entity;
			}
			set
			{
				UbicacionInmueble previousValue = this._UbicacionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._UbicacionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UbicacionInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._UbicacionInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("UbicacionInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_UsoActualInmueble", Storage="_UsoActualInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public UsoActualInmueble UsoActualInmueble
		{
			get
			{
				return this._UsoActualInmueble.Entity;
			}
			set
			{
				UsoActualInmueble previousValue = this._UsoActualInmueble.Entity;
				if (((previousValue != value) 
							|| (this._UsoActualInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsoActualInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._UsoActualInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("UsoActualInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_ViasAcceso", Storage="_ViasAcceso", ThisKey="idInmueble", OtherKey="idInmueble")]
		public EntitySet<ViasAcceso> ViasAcceso
		{
			get
			{
				return this._ViasAcceso;
			}
			set
			{
				this._ViasAcceso.Assign(value);
			}
		}
		
		[Association(Name="Inmueble_ConstruccionInmueble", Storage="_ConstruccionInmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public ConstruccionInmueble ConstruccionInmueble
		{
			get
			{
				return this._ConstruccionInmueble.Entity;
			}
			set
			{
				ConstruccionInmueble previousValue = this._ConstruccionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ConstruccionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConstruccionInmueble.Entity = null;
						previousValue.Inmueble = null;
					}
					this._ConstruccionInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("ConstruccionInmueble");
				}
			}
		}
		
		[Association(Name="Inmueble_DatoCondominio", Storage="_DatoCondominio", ThisKey="idInmueble", OtherKey="idInmueble", IsUnique=true, IsForeignKey=false)]
		public DatoCondominio DatoCondominio
		{
			get
			{
				return this._DatoCondominio.Entity;
			}
			set
			{
				DatoCondominio previousValue = this._DatoCondominio.Entity;
				if (((previousValue != value) 
							|| (this._DatoCondominio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoCondominio.Entity = null;
						previousValue.Inmueble = null;
					}
					this._DatoCondominio.Entity = value;
					if ((value != null))
					{
						value.Inmueble = this;
					}
					this.SendPropertyChanged("DatoCondominio");
				}
			}
		}
		
		[Association(Name="DireccionInmueble_Inmueble", Storage="_DireccionInmueble", ThisKey="idDireccionInmueble", OtherKey="idDireccionInmueble", IsForeignKey=true)]
		public DireccionInmueble DireccionInmueble
		{
			get
			{
				return this._DireccionInmueble.Entity;
			}
			set
			{
				DireccionInmueble previousValue = this._DireccionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._DireccionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DireccionInmueble.Entity = null;
						previousValue.Inmueble.Remove(this);
					}
					this._DireccionInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble.Add(this);
						this._idDireccionInmueble = value.idDireccionInmueble;
					}
					else
					{
						this._idDireccionInmueble = default(int);
					}
					this.SendPropertyChanged("DireccionInmueble");
				}
			}
		}
		
		[Association(Name="Propietario_Inmueble", Storage="_Propietario", ThisKey="idPropietario", OtherKey="idPropietario", IsForeignKey=true)]
		public Propietario Propietario
		{
			get
			{
				return this._Propietario.Entity;
			}
			set
			{
				Propietario previousValue = this._Propietario.Entity;
				if (((previousValue != value) 
							|| (this._Propietario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Propietario.Entity = null;
						previousValue.Inmueble.Remove(this);
					}
					this._Propietario.Entity = value;
					if ((value != null))
					{
						value.Inmueble.Add(this);
						this._idPropietario = value.idPropietario;
					}
					else
					{
						this._idPropietario = default(int);
					}
					this.SendPropertyChanged("Propietario");
				}
			}
		}
		
		[Association(Name="RegimenPropiedad_Inmueble", Storage="_RegimenPropiedad", ThisKey="idRegimenPropiedad", OtherKey="idRegimenPropiedad", IsForeignKey=true)]
		public RegimenPropiedad RegimenPropiedad
		{
			get
			{
				return this._RegimenPropiedad.Entity;
			}
			set
			{
				RegimenPropiedad previousValue = this._RegimenPropiedad.Entity;
				if (((previousValue != value) 
							|| (this._RegimenPropiedad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegimenPropiedad.Entity = null;
						previousValue.Inmueble.Remove(this);
					}
					this._RegimenPropiedad.Entity = value;
					if ((value != null))
					{
						value.Inmueble.Add(this);
						this._idRegimenPropiedad = value.idRegimenPropiedad;
					}
					else
					{
						this._idRegimenPropiedad = default(short);
					}
					this.SendPropertyChanged("RegimenPropiedad");
				}
			}
		}
		
		[Association(Name="TipoInmueble_Inmueble", Storage="_TipoInmueble", ThisKey="idTipoInmueble", OtherKey="idTipoInmueble", IsForeignKey=true)]
		public TipoInmueble TipoInmueble
		{
			get
			{
				return this._TipoInmueble.Entity;
			}
			set
			{
				TipoInmueble previousValue = this._TipoInmueble.Entity;
				if (((previousValue != value) 
							|| (this._TipoInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoInmueble.Entity = null;
						previousValue.Inmueble.Remove(this);
					}
					this._TipoInmueble.Entity = value;
					if ((value != null))
					{
						value.Inmueble.Add(this);
						this._idTipoInmueble = value.idTipoInmueble;
					}
					else
					{
						this._idTipoInmueble = default(short);
					}
					this.SendPropertyChanged("TipoInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ViasAcceso(ViasAcceso entity)
		{
			this.SendPropertyChanging();
			entity.Inmueble = this;
		}
		
		private void detach_ViasAcceso(ViasAcceso entity)
		{
			this.SendPropertyChanging();
			entity.Inmueble = null;
		}
	}
	
	[Table(Name="dbo.Municipio")]
	public partial class Municipio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMunicipio;
		
		private int _claveMunicipio;
		
		private int _claveEstado;
		
		private string _nombreMunicipio;
		
		private EntitySet<Asentamiento> _Asentamiento;
		
		private EntityRef<Estado> _Estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMunicipioChanging(int value);
    partial void OnidMunicipioChanged();
    partial void OnclaveMunicipioChanging(int value);
    partial void OnclaveMunicipioChanged();
    partial void OnclaveEstadoChanging(int value);
    partial void OnclaveEstadoChanged();
    partial void OnnombreMunicipioChanging(string value);
    partial void OnnombreMunicipioChanged();
    #endregion
		
		public Municipio()
		{
			this._Asentamiento = new EntitySet<Asentamiento>(new Action<Asentamiento>(this.attach_Asentamiento), new Action<Asentamiento>(this.detach_Asentamiento));
			this._Estado = default(EntityRef<Estado>);
			OnCreated();
		}
		
		[Column(Storage="_idMunicipio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMunicipio
		{
			get
			{
				return this._idMunicipio;
			}
			set
			{
				if ((this._idMunicipio != value))
				{
					this.OnidMunicipioChanging(value);
					this.SendPropertyChanging();
					this._idMunicipio = value;
					this.SendPropertyChanged("idMunicipio");
					this.OnidMunicipioChanged();
				}
			}
		}
		
		[Column(Storage="_claveMunicipio", DbType="Int NOT NULL")]
		public int claveMunicipio
		{
			get
			{
				return this._claveMunicipio;
			}
			set
			{
				if ((this._claveMunicipio != value))
				{
					this.OnclaveMunicipioChanging(value);
					this.SendPropertyChanging();
					this._claveMunicipio = value;
					this.SendPropertyChanged("claveMunicipio");
					this.OnclaveMunicipioChanged();
				}
			}
		}
		
		[Column(Storage="_claveEstado", DbType="Int NOT NULL")]
		public int claveEstado
		{
			get
			{
				return this._claveEstado;
			}
			set
			{
				if ((this._claveEstado != value))
				{
					if (this._Estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnclaveEstadoChanging(value);
					this.SendPropertyChanging();
					this._claveEstado = value;
					this.SendPropertyChanged("claveEstado");
					this.OnclaveEstadoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreMunicipio", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreMunicipio
		{
			get
			{
				return this._nombreMunicipio;
			}
			set
			{
				if ((this._nombreMunicipio != value))
				{
					this.OnnombreMunicipioChanging(value);
					this.SendPropertyChanging();
					this._nombreMunicipio = value;
					this.SendPropertyChanged("nombreMunicipio");
					this.OnnombreMunicipioChanged();
				}
			}
		}
		
		[Association(Name="Municipio_Asentamiento", Storage="_Asentamiento", ThisKey="idMunicipio", OtherKey="idMunicipio")]
		public EntitySet<Asentamiento> Asentamiento
		{
			get
			{
				return this._Asentamiento;
			}
			set
			{
				this._Asentamiento.Assign(value);
			}
		}
		
		[Association(Name="Estado_Municipio", Storage="_Estado", ThisKey="claveEstado", OtherKey="claveEstado", IsForeignKey=true)]
		public Estado Estado
		{
			get
			{
				return this._Estado.Entity;
			}
			set
			{
				Estado previousValue = this._Estado.Entity;
				if (((previousValue != value) 
							|| (this._Estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estado.Entity = null;
						previousValue.Municipio.Remove(this);
					}
					this._Estado.Entity = value;
					if ((value != null))
					{
						value.Municipio.Add(this);
						this._claveEstado = value.claveEstado;
					}
					else
					{
						this._claveEstado = default(int);
					}
					this.SendPropertyChanged("Estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asentamiento(Asentamiento entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = this;
		}
		
		private void detach_Asentamiento(Asentamiento entity)
		{
			this.SendPropertyChanging();
			entity.Municipio = null;
		}
	}
	
	[Table(Name="dbo.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPersonal;
		
		private int _idUsuario;
		
		private string _nombre;
		
		private System.DateTime _fechaAlta;
		
		private bool _activo;
		
		private EntitySet<RechazoAvaluo> _RechazoAvaluo;
		
		private EntitySet<RevisionAvaluo> _RevisionAvaluo;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPersonalChanging(int value);
    partial void OnidPersonalChanged();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnfechaAltaChanging(System.DateTime value);
    partial void OnfechaAltaChanged();
    partial void OnactivoChanging(bool value);
    partial void OnactivoChanged();
    #endregion
		
		public Personal()
		{
			this._RechazoAvaluo = new EntitySet<RechazoAvaluo>(new Action<RechazoAvaluo>(this.attach_RechazoAvaluo), new Action<RechazoAvaluo>(this.detach_RechazoAvaluo));
			this._RevisionAvaluo = new EntitySet<RevisionAvaluo>(new Action<RevisionAvaluo>(this.attach_RevisionAvaluo), new Action<RevisionAvaluo>(this.detach_RevisionAvaluo));
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idPersonal", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPersonal
		{
			get
			{
				return this._idPersonal;
			}
			set
			{
				if ((this._idPersonal != value))
				{
					this.OnidPersonalChanging(value);
					this.SendPropertyChanging();
					this._idPersonal = value;
					this.SendPropertyChanged("idPersonal");
					this.OnidPersonalChanged();
				}
			}
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL")]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_fechaAlta", DbType="DateTime NOT NULL")]
		public System.DateTime fechaAlta
		{
			get
			{
				return this._fechaAlta;
			}
			set
			{
				if ((this._fechaAlta != value))
				{
					this.OnfechaAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaAlta = value;
					this.SendPropertyChanged("fechaAlta");
					this.OnfechaAltaChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit NOT NULL")]
		public bool activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Association(Name="Personal_RechazoAvaluo", Storage="_RechazoAvaluo", ThisKey="idPersonal", OtherKey="idPersonal")]
		public EntitySet<RechazoAvaluo> RechazoAvaluo
		{
			get
			{
				return this._RechazoAvaluo;
			}
			set
			{
				this._RechazoAvaluo.Assign(value);
			}
		}
		
		[Association(Name="Personal_RevisionAvaluo", Storage="_RevisionAvaluo", ThisKey="idPersonal", OtherKey="idPersonal")]
		public EntitySet<RevisionAvaluo> RevisionAvaluo
		{
			get
			{
				return this._RevisionAvaluo;
			}
			set
			{
				this._RevisionAvaluo.Assign(value);
			}
		}
		
		[Association(Name="Usuario_Personal", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Personal.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Personal.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_RechazoAvaluo(RechazoAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
		
		private void attach_RevisionAvaluo(RevisionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_RevisionAvaluo(RevisionAvaluo entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
	}
	
	[Table(Name="dbo.Propietario")]
	public partial class Propietario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPropietario;
		
		private int _idDireccion;
		
		private string _nombre;
		
		private string _CURP;
		
		private string _RFC;
		
		private EntitySet<Inmueble> _Inmueble;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPropietarioChanging(int value);
    partial void OnidPropietarioChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnCURPChanging(string value);
    partial void OnCURPChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    #endregion
		
		public Propietario()
		{
			this._Inmueble = new EntitySet<Inmueble>(new Action<Inmueble>(this.attach_Inmueble), new Action<Inmueble>(this.detach_Inmueble));
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idPropietario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPropietario
		{
			get
			{
				return this._idPropietario;
			}
			set
			{
				if ((this._idPropietario != value))
				{
					this.OnidPropietarioChanging(value);
					this.SendPropertyChanging();
					this._idPropietario = value;
					this.SendPropertyChanged("idPropietario");
					this.OnidPropietarioChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_CURP", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CURP
		{
			get
			{
				return this._CURP;
			}
			set
			{
				if ((this._CURP != value))
				{
					this.OnCURPChanging(value);
					this.SendPropertyChanging();
					this._CURP = value;
					this.SendPropertyChanged("CURP");
					this.OnCURPChanged();
				}
			}
		}
		
		[Column(Storage="_RFC", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[Association(Name="Propietario_Inmueble", Storage="_Inmueble", ThisKey="idPropietario", OtherKey="idPropietario")]
		public EntitySet<Inmueble> Inmueble
		{
			get
			{
				return this._Inmueble;
			}
			set
			{
				this._Inmueble.Assign(value);
			}
		}
		
		[Association(Name="Direccion_Propietario", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.Propietario.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.Propietario.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.Propietario = this;
		}
		
		private void detach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.Propietario = null;
		}
	}
	
	[Table(Name="dbo.PropositoAvaluo")]
	public partial class PropositoAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idProposito;
		
		private string _descripcion;
		
		private EntitySet<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPropositoChanging(short value);
    partial void OnidPropositoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public PropositoAvaluo()
		{
			this._AvaluoInmobiliario = new EntitySet<AvaluoInmobiliario>(new Action<AvaluoInmobiliario>(this.attach_AvaluoInmobiliario), new Action<AvaluoInmobiliario>(this.detach_AvaluoInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idProposito", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idProposito
		{
			get
			{
				return this._idProposito;
			}
			set
			{
				if ((this._idProposito != value))
				{
					this.OnidPropositoChanging(value);
					this.SendPropertyChanging();
					this._idProposito = value;
					this.SendPropertyChanged("idProposito");
					this.OnidPropositoChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="PropositoAvaluo_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idProposito", OtherKey="idProposito")]
		public EntitySet<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario;
			}
			set
			{
				this._AvaluoInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.PropositoAvaluo = this;
		}
		
		private void detach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.PropositoAvaluo = null;
		}
	}
	
	[Table(Name="dbo.RechazoAvaluo")]
	public partial class RechazoAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRechazo;
		
		private int _idAvaluo;
		
		private System.Nullable<int> _idPersonal;
		
		private System.Nullable<int> _idControlador;
		
		private string _comentarios;
		
		private System.DateTime _fechaRechazo;
		
		private long _corregido;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntityRef<Personal> _Personal;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRechazoChanging(int value);
    partial void OnidRechazoChanged();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnidPersonalChanging(System.Nullable<int> value);
    partial void OnidPersonalChanged();
    partial void OnidControladorChanging(System.Nullable<int> value);
    partial void OnidControladorChanged();
    partial void OncomentariosChanging(string value);
    partial void OncomentariosChanged();
    partial void OnfechaRechazoChanging(System.DateTime value);
    partial void OnfechaRechazoChanged();
    partial void OncorregidoChanging(long value);
    partial void OncorregidoChanged();
    #endregion
		
		public RechazoAvaluo()
		{
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			this._Personal = default(EntityRef<Personal>);
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idRechazo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRechazo
		{
			get
			{
				return this._idRechazo;
			}
			set
			{
				if ((this._idRechazo != value))
				{
					this.OnidRechazoChanging(value);
					this.SendPropertyChanging();
					this._idRechazo = value;
					this.SendPropertyChanged("idRechazo");
					this.OnidRechazoChanged();
				}
			}
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL")]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_idPersonal", DbType="Int")]
		public System.Nullable<int> idPersonal
		{
			get
			{
				return this._idPersonal;
			}
			set
			{
				if ((this._idPersonal != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonalChanging(value);
					this.SendPropertyChanging();
					this._idPersonal = value;
					this.SendPropertyChanged("idPersonal");
					this.OnidPersonalChanged();
				}
			}
		}
		
		[Column(Storage="_idControlador", DbType="Int")]
		public System.Nullable<int> idControlador
		{
			get
			{
				return this._idControlador;
			}
			set
			{
				if ((this._idControlador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidControladorChanging(value);
					this.SendPropertyChanging();
					this._idControlador = value;
					this.SendPropertyChanged("idControlador");
					this.OnidControladorChanged();
				}
			}
		}
		
		[Column(Storage="_comentarios", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string comentarios
		{
			get
			{
				return this._comentarios;
			}
			set
			{
				if ((this._comentarios != value))
				{
					this.OncomentariosChanging(value);
					this.SendPropertyChanging();
					this._comentarios = value;
					this.SendPropertyChanged("comentarios");
					this.OncomentariosChanged();
				}
			}
		}
		
		[Column(Storage="_fechaRechazo", DbType="DateTime NOT NULL")]
		public System.DateTime fechaRechazo
		{
			get
			{
				return this._fechaRechazo;
			}
			set
			{
				if ((this._fechaRechazo != value))
				{
					this.OnfechaRechazoChanging(value);
					this.SendPropertyChanging();
					this._fechaRechazo = value;
					this.SendPropertyChanged("fechaRechazo");
					this.OnfechaRechazoChanged();
				}
			}
		}
		
		[Column(Storage="_corregido", DbType="BigInt NOT NULL")]
		public long corregido
		{
			get
			{
				return this._corregido;
			}
			set
			{
				if ((this._corregido != value))
				{
					this.OncorregidoChanging(value);
					this.SendPropertyChanging();
					this._corregido = value;
					this.SendPropertyChanged("corregido");
					this.OncorregidoChanged();
				}
			}
		}
		
		[Association(Name="AvaluoInmobiliario_RechazoAvaluo", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true)]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.RechazoAvaluo.Remove(this);
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.RechazoAvaluo.Add(this);
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		[Association(Name="Personal_RechazoAvaluo", Storage="_Personal", ThisKey="idPersonal", OtherKey="idPersonal", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.RechazoAvaluo.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.RechazoAvaluo.Add(this);
						this._idPersonal = value.idPersonal;
					}
					else
					{
						this._idPersonal = default(Nullable<int>);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		[Association(Name="Valuador_RechazoAvaluo", Storage="_Valuador", ThisKey="idControlador", OtherKey="idValuador", IsForeignKey=true)]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.RechazoAvaluo.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.RechazoAvaluo.Add(this);
						this._idControlador = value.idValuador;
					}
					else
					{
						this._idControlador = default(Nullable<int>);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RegimenPropiedad")]
	public partial class RegimenPropiedad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idRegimenPropiedad;
		
		private string _descripcion;
		
		private EntitySet<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRegimenPropiedadChanging(short value);
    partial void OnidRegimenPropiedadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public RegimenPropiedad()
		{
			this._Inmueble = new EntitySet<Inmueble>(new Action<Inmueble>(this.attach_Inmueble), new Action<Inmueble>(this.detach_Inmueble));
			OnCreated();
		}
		
		[Column(Storage="_idRegimenPropiedad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idRegimenPropiedad
		{
			get
			{
				return this._idRegimenPropiedad;
			}
			set
			{
				if ((this._idRegimenPropiedad != value))
				{
					this.OnidRegimenPropiedadChanging(value);
					this.SendPropertyChanging();
					this._idRegimenPropiedad = value;
					this.SendPropertyChanged("idRegimenPropiedad");
					this.OnidRegimenPropiedadChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="RegimenPropiedad_Inmueble", Storage="_Inmueble", ThisKey="idRegimenPropiedad", OtherKey="idRegimenPropiedad")]
		public EntitySet<Inmueble> Inmueble
		{
			get
			{
				return this._Inmueble;
			}
			set
			{
				this._Inmueble.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.RegimenPropiedad = this;
		}
		
		private void detach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.RegimenPropiedad = null;
		}
	}
	
	[Table(Name="dbo.RegistroSHF")]
	public partial class RegistroSHF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idValuador;
		
		private short _numeroRegistro;
		
		private string _claveSHF;
		
		private System.DateTime _fechaAlta;
		
		private System.DateTime _vigencia;
		
		private int _idEstado;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnnumeroRegistroChanging(short value);
    partial void OnnumeroRegistroChanged();
    partial void OnclaveSHFChanging(string value);
    partial void OnclaveSHFChanged();
    partial void OnfechaAltaChanging(System.DateTime value);
    partial void OnfechaAltaChanged();
    partial void OnvigenciaChanging(System.DateTime value);
    partial void OnvigenciaChanged();
    partial void OnidEstadoChanging(int value);
    partial void OnidEstadoChanged();
    #endregion
		
		public RegistroSHF()
		{
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_numeroRegistro", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numeroRegistro
		{
			get
			{
				return this._numeroRegistro;
			}
			set
			{
				if ((this._numeroRegistro != value))
				{
					this.OnnumeroRegistroChanging(value);
					this.SendPropertyChanging();
					this._numeroRegistro = value;
					this.SendPropertyChanged("numeroRegistro");
					this.OnnumeroRegistroChanged();
				}
			}
		}
		
		[Column(Storage="_claveSHF", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string claveSHF
		{
			get
			{
				return this._claveSHF;
			}
			set
			{
				if ((this._claveSHF != value))
				{
					this.OnclaveSHFChanging(value);
					this.SendPropertyChanging();
					this._claveSHF = value;
					this.SendPropertyChanged("claveSHF");
					this.OnclaveSHFChanged();
				}
			}
		}
		
		[Column(Storage="_fechaAlta", DbType="SmallDateTime NOT NULL")]
		public System.DateTime fechaAlta
		{
			get
			{
				return this._fechaAlta;
			}
			set
			{
				if ((this._fechaAlta != value))
				{
					this.OnfechaAltaChanging(value);
					this.SendPropertyChanging();
					this._fechaAlta = value;
					this.SendPropertyChanged("fechaAlta");
					this.OnfechaAltaChanged();
				}
			}
		}
		
		[Column(Storage="_vigencia", DbType="SmallDateTime NOT NULL")]
		public System.DateTime vigencia
		{
			get
			{
				return this._vigencia;
			}
			set
			{
				if ((this._vigencia != value))
				{
					this.OnvigenciaChanging(value);
					this.SendPropertyChanging();
					this._vigencia = value;
					this.SendPropertyChanged("vigencia");
					this.OnvigenciaChanged();
				}
			}
		}
		
		[Column(Storage="_idEstado", DbType="Int NOT NULL")]
		public int idEstado
		{
			get
			{
				return this._idEstado;
			}
			set
			{
				if ((this._idEstado != value))
				{
					this.OnidEstadoChanging(value);
					this.SendPropertyChanging();
					this._idEstado = value;
					this.SendPropertyChanged("idEstado");
					this.OnidEstadoChanged();
				}
			}
		}
		
		[Association(Name="Valuador_RegistroSHF", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.RegistroSHF.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.RegistroSHF.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RevisionAvaluo")]
	public partial class RevisionAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRevision;
		
		private int _idAvaluo;
		
		private int _idPersonal;
		
		private System.DateTime _fechaAsignacion;
		
		private bool _completada;
		
		private EntitySet<HistorialRevision> _HistorialRevision;
		
		private EntityRef<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntityRef<Personal> _Personal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRevisionChanging(int value);
    partial void OnidRevisionChanged();
    partial void OnidAvaluoChanging(int value);
    partial void OnidAvaluoChanged();
    partial void OnidPersonalChanging(int value);
    partial void OnidPersonalChanged();
    partial void OnfechaAsignacionChanging(System.DateTime value);
    partial void OnfechaAsignacionChanged();
    partial void OncompletadaChanging(bool value);
    partial void OncompletadaChanged();
    #endregion
		
		public RevisionAvaluo()
		{
			this._HistorialRevision = new EntitySet<HistorialRevision>(new Action<HistorialRevision>(this.attach_HistorialRevision), new Action<HistorialRevision>(this.detach_HistorialRevision));
			this._AvaluoInmobiliario = default(EntityRef<AvaluoInmobiliario>);
			this._Personal = default(EntityRef<Personal>);
			OnCreated();
		}
		
		[Column(Storage="_idRevision", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRevision
		{
			get
			{
				return this._idRevision;
			}
			set
			{
				if ((this._idRevision != value))
				{
					this.OnidRevisionChanging(value);
					this.SendPropertyChanging();
					this._idRevision = value;
					this.SendPropertyChanged("idRevision");
					this.OnidRevisionChanged();
				}
			}
		}
		
		[Column(Storage="_idAvaluo", DbType="Int NOT NULL")]
		public int idAvaluo
		{
			get
			{
				return this._idAvaluo;
			}
			set
			{
				if ((this._idAvaluo != value))
				{
					if (this._AvaluoInmobiliario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAvaluoChanging(value);
					this.SendPropertyChanging();
					this._idAvaluo = value;
					this.SendPropertyChanged("idAvaluo");
					this.OnidAvaluoChanged();
				}
			}
		}
		
		[Column(Storage="_idPersonal", DbType="Int NOT NULL")]
		public int idPersonal
		{
			get
			{
				return this._idPersonal;
			}
			set
			{
				if ((this._idPersonal != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonalChanging(value);
					this.SendPropertyChanging();
					this._idPersonal = value;
					this.SendPropertyChanged("idPersonal");
					this.OnidPersonalChanged();
				}
			}
		}
		
		[Column(Storage="_fechaAsignacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaAsignacion
		{
			get
			{
				return this._fechaAsignacion;
			}
			set
			{
				if ((this._fechaAsignacion != value))
				{
					this.OnfechaAsignacionChanging(value);
					this.SendPropertyChanging();
					this._fechaAsignacion = value;
					this.SendPropertyChanged("fechaAsignacion");
					this.OnfechaAsignacionChanged();
				}
			}
		}
		
		[Column(Storage="_completada", DbType="Bit NOT NULL")]
		public bool completada
		{
			get
			{
				return this._completada;
			}
			set
			{
				if ((this._completada != value))
				{
					this.OncompletadaChanging(value);
					this.SendPropertyChanging();
					this._completada = value;
					this.SendPropertyChanged("completada");
					this.OncompletadaChanged();
				}
			}
		}
		
		[Association(Name="RevisionAvaluo_HistorialRevision", Storage="_HistorialRevision", ThisKey="idRevision", OtherKey="idRevision")]
		public EntitySet<HistorialRevision> HistorialRevision
		{
			get
			{
				return this._HistorialRevision;
			}
			set
			{
				this._HistorialRevision.Assign(value);
			}
		}
		
		[Association(Name="AvaluoInmobiliario_RevisionAvaluo", Storage="_AvaluoInmobiliario", ThisKey="idAvaluo", OtherKey="idAvaluo", IsForeignKey=true)]
		public AvaluoInmobiliario AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario.Entity;
			}
			set
			{
				AvaluoInmobiliario previousValue = this._AvaluoInmobiliario.Entity;
				if (((previousValue != value) 
							|| (this._AvaluoInmobiliario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AvaluoInmobiliario.Entity = null;
						previousValue.RevisionAvaluo.Remove(this);
					}
					this._AvaluoInmobiliario.Entity = value;
					if ((value != null))
					{
						value.RevisionAvaluo.Add(this);
						this._idAvaluo = value.idAvaluo;
					}
					else
					{
						this._idAvaluo = default(int);
					}
					this.SendPropertyChanged("AvaluoInmobiliario");
				}
			}
		}
		
		[Association(Name="Personal_RevisionAvaluo", Storage="_Personal", ThisKey="idPersonal", OtherKey="idPersonal", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.RevisionAvaluo.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.RevisionAvaluo.Add(this);
						this._idPersonal = value.idPersonal;
					}
					else
					{
						this._idPersonal = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistorialRevision(HistorialRevision entity)
		{
			this.SendPropertyChanging();
			entity.RevisionAvaluo = this;
		}
		
		private void detach_HistorialRevision(HistorialRevision entity)
		{
			this.SendPropertyChanging();
			entity.RevisionAvaluo = null;
		}
	}
	
	[Table(Name="dbo.RolSistema")]
	public partial class RolSistema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idRol;
		
		private string _nombreRol;
		
		private EntitySet<RolUsuario> _RolUsuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRolChanging(short value);
    partial void OnidRolChanged();
    partial void OnnombreRolChanging(string value);
    partial void OnnombreRolChanged();
    #endregion
		
		public RolSistema()
		{
			this._RolUsuario = new EntitySet<RolUsuario>(new Action<RolUsuario>(this.attach_RolUsuario), new Action<RolUsuario>(this.detach_RolUsuario));
			OnCreated();
		}
		
		[Column(Storage="_idRol", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[Column(Storage="_nombreRol", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombreRol
		{
			get
			{
				return this._nombreRol;
			}
			set
			{
				if ((this._nombreRol != value))
				{
					this.OnnombreRolChanging(value);
					this.SendPropertyChanging();
					this._nombreRol = value;
					this.SendPropertyChanged("nombreRol");
					this.OnnombreRolChanged();
				}
			}
		}
		
		[Association(Name="RolSistema_RolUsuario", Storage="_RolUsuario", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<RolUsuario> RolUsuario
		{
			get
			{
				return this._RolUsuario;
			}
			set
			{
				this._RolUsuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolUsuario(RolUsuario entity)
		{
			this.SendPropertyChanging();
			entity.RolSistema = this;
		}
		
		private void detach_RolUsuario(RolUsuario entity)
		{
			this.SendPropertyChanging();
			entity.RolSistema = null;
		}
	}
	
	[Table(Name="dbo.RolUsuario")]
	public partial class RolUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private short _idRol;
		
		private EntityRef<RolSistema> _RolSistema;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidRolChanging(short value);
    partial void OnidRolChanged();
    #endregion
		
		public RolUsuario()
		{
			this._RolSistema = default(EntityRef<RolSistema>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idRol", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._RolSistema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[Association(Name="RolSistema_RolUsuario", Storage="_RolSistema", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RolSistema RolSistema
		{
			get
			{
				return this._RolSistema.Entity;
			}
			set
			{
				RolSistema previousValue = this._RolSistema.Entity;
				if (((previousValue != value) 
							|| (this._RolSistema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RolSistema.Entity = null;
						previousValue.RolUsuario.Remove(this);
					}
					this._RolSistema.Entity = value;
					if ((value != null))
					{
						value.RolUsuario.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(short);
					}
					this.SendPropertyChanged("RolSistema");
				}
			}
		}
		
		[Association(Name="Usuario_RolUsuario", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.RolUsuario.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.RolUsuario.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ServiciosInmueble")]
	public partial class ServiciosInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private bool _gasNatural;
		
		private bool _gasNaturalSuministro;
		
		private bool _redTelefonica;
		
		private bool _redTelefonicaAerea;
		
		private bool _redTelefonicaAcometida;
		
		private bool _transporteUrbano;
		
		private System.Nullable<double> _transporteUrbanoDistancia;
		
		private System.Nullable<double> _transporteUrbanoFrecuencia;
		
		private bool _transporteSuburbano;
		
		private System.Nullable<double> _transporteSuburbanoDistancia;
		
		private System.Nullable<double> _transporteSuburbanoFrecuencia;
		
		private bool _vigilancia;
		
		private bool _vigilanciaMunicipal;
		
		private bool _senalizacionNomencaltura;
		
		private bool _recoleccionBasura;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OngasNaturalChanging(bool value);
    partial void OngasNaturalChanged();
    partial void OngasNaturalSuministroChanging(bool value);
    partial void OngasNaturalSuministroChanged();
    partial void OnredTelefonicaChanging(bool value);
    partial void OnredTelefonicaChanged();
    partial void OnredTelefonicaAereaChanging(bool value);
    partial void OnredTelefonicaAereaChanged();
    partial void OnredTelefonicaAcometidaChanging(bool value);
    partial void OnredTelefonicaAcometidaChanged();
    partial void OntransporteUrbanoChanging(bool value);
    partial void OntransporteUrbanoChanged();
    partial void OntransporteUrbanoDistanciaChanging(System.Nullable<double> value);
    partial void OntransporteUrbanoDistanciaChanged();
    partial void OntransporteUrbanoFrecuenciaChanging(System.Nullable<double> value);
    partial void OntransporteUrbanoFrecuenciaChanged();
    partial void OntransporteSuburbanoChanging(bool value);
    partial void OntransporteSuburbanoChanged();
    partial void OntransporteSuburbanoDistanciaChanging(System.Nullable<double> value);
    partial void OntransporteSuburbanoDistanciaChanged();
    partial void OntransporteSuburbanoFrecuenciaChanging(System.Nullable<double> value);
    partial void OntransporteSuburbanoFrecuenciaChanged();
    partial void OnvigilanciaChanging(bool value);
    partial void OnvigilanciaChanged();
    partial void OnvigilanciaMunicipalChanging(bool value);
    partial void OnvigilanciaMunicipalChanged();
    partial void OnsenalizacionNomencalturaChanging(bool value);
    partial void OnsenalizacionNomencalturaChanged();
    partial void OnrecoleccionBasuraChanging(bool value);
    partial void OnrecoleccionBasuraChanged();
    #endregion
		
		public ServiciosInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_gasNatural", DbType="Bit NOT NULL")]
		public bool gasNatural
		{
			get
			{
				return this._gasNatural;
			}
			set
			{
				if ((this._gasNatural != value))
				{
					this.OngasNaturalChanging(value);
					this.SendPropertyChanging();
					this._gasNatural = value;
					this.SendPropertyChanged("gasNatural");
					this.OngasNaturalChanged();
				}
			}
		}
		
		[Column(Storage="_gasNaturalSuministro", DbType="Bit NOT NULL")]
		public bool gasNaturalSuministro
		{
			get
			{
				return this._gasNaturalSuministro;
			}
			set
			{
				if ((this._gasNaturalSuministro != value))
				{
					this.OngasNaturalSuministroChanging(value);
					this.SendPropertyChanging();
					this._gasNaturalSuministro = value;
					this.SendPropertyChanged("gasNaturalSuministro");
					this.OngasNaturalSuministroChanged();
				}
			}
		}
		
		[Column(Storage="_redTelefonica", DbType="Bit NOT NULL")]
		public bool redTelefonica
		{
			get
			{
				return this._redTelefonica;
			}
			set
			{
				if ((this._redTelefonica != value))
				{
					this.OnredTelefonicaChanging(value);
					this.SendPropertyChanging();
					this._redTelefonica = value;
					this.SendPropertyChanged("redTelefonica");
					this.OnredTelefonicaChanged();
				}
			}
		}
		
		[Column(Storage="_redTelefonicaAerea", DbType="Bit NOT NULL")]
		public bool redTelefonicaAerea
		{
			get
			{
				return this._redTelefonicaAerea;
			}
			set
			{
				if ((this._redTelefonicaAerea != value))
				{
					this.OnredTelefonicaAereaChanging(value);
					this.SendPropertyChanging();
					this._redTelefonicaAerea = value;
					this.SendPropertyChanged("redTelefonicaAerea");
					this.OnredTelefonicaAereaChanged();
				}
			}
		}
		
		[Column(Storage="_redTelefonicaAcometida", DbType="Bit NOT NULL")]
		public bool redTelefonicaAcometida
		{
			get
			{
				return this._redTelefonicaAcometida;
			}
			set
			{
				if ((this._redTelefonicaAcometida != value))
				{
					this.OnredTelefonicaAcometidaChanging(value);
					this.SendPropertyChanging();
					this._redTelefonicaAcometida = value;
					this.SendPropertyChanged("redTelefonicaAcometida");
					this.OnredTelefonicaAcometidaChanged();
				}
			}
		}
		
		[Column(Storage="_transporteUrbano", DbType="Bit NOT NULL")]
		public bool transporteUrbano
		{
			get
			{
				return this._transporteUrbano;
			}
			set
			{
				if ((this._transporteUrbano != value))
				{
					this.OntransporteUrbanoChanging(value);
					this.SendPropertyChanging();
					this._transporteUrbano = value;
					this.SendPropertyChanged("transporteUrbano");
					this.OntransporteUrbanoChanged();
				}
			}
		}
		
		[Column(Storage="_transporteUrbanoDistancia", DbType="Float")]
		public System.Nullable<double> transporteUrbanoDistancia
		{
			get
			{
				return this._transporteUrbanoDistancia;
			}
			set
			{
				if ((this._transporteUrbanoDistancia != value))
				{
					this.OntransporteUrbanoDistanciaChanging(value);
					this.SendPropertyChanging();
					this._transporteUrbanoDistancia = value;
					this.SendPropertyChanged("transporteUrbanoDistancia");
					this.OntransporteUrbanoDistanciaChanged();
				}
			}
		}
		
		[Column(Storage="_transporteUrbanoFrecuencia", DbType="Float")]
		public System.Nullable<double> transporteUrbanoFrecuencia
		{
			get
			{
				return this._transporteUrbanoFrecuencia;
			}
			set
			{
				if ((this._transporteUrbanoFrecuencia != value))
				{
					this.OntransporteUrbanoFrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._transporteUrbanoFrecuencia = value;
					this.SendPropertyChanged("transporteUrbanoFrecuencia");
					this.OntransporteUrbanoFrecuenciaChanged();
				}
			}
		}
		
		[Column(Storage="_transporteSuburbano", DbType="Bit NOT NULL")]
		public bool transporteSuburbano
		{
			get
			{
				return this._transporteSuburbano;
			}
			set
			{
				if ((this._transporteSuburbano != value))
				{
					this.OntransporteSuburbanoChanging(value);
					this.SendPropertyChanging();
					this._transporteSuburbano = value;
					this.SendPropertyChanged("transporteSuburbano");
					this.OntransporteSuburbanoChanged();
				}
			}
		}
		
		[Column(Storage="_transporteSuburbanoDistancia", DbType="Float")]
		public System.Nullable<double> transporteSuburbanoDistancia
		{
			get
			{
				return this._transporteSuburbanoDistancia;
			}
			set
			{
				if ((this._transporteSuburbanoDistancia != value))
				{
					this.OntransporteSuburbanoDistanciaChanging(value);
					this.SendPropertyChanging();
					this._transporteSuburbanoDistancia = value;
					this.SendPropertyChanged("transporteSuburbanoDistancia");
					this.OntransporteSuburbanoDistanciaChanged();
				}
			}
		}
		
		[Column(Storage="_transporteSuburbanoFrecuencia", DbType="Float")]
		public System.Nullable<double> transporteSuburbanoFrecuencia
		{
			get
			{
				return this._transporteSuburbanoFrecuencia;
			}
			set
			{
				if ((this._transporteSuburbanoFrecuencia != value))
				{
					this.OntransporteSuburbanoFrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._transporteSuburbanoFrecuencia = value;
					this.SendPropertyChanged("transporteSuburbanoFrecuencia");
					this.OntransporteSuburbanoFrecuenciaChanged();
				}
			}
		}
		
		[Column(Storage="_vigilancia", DbType="Bit NOT NULL")]
		public bool vigilancia
		{
			get
			{
				return this._vigilancia;
			}
			set
			{
				if ((this._vigilancia != value))
				{
					this.OnvigilanciaChanging(value);
					this.SendPropertyChanging();
					this._vigilancia = value;
					this.SendPropertyChanged("vigilancia");
					this.OnvigilanciaChanged();
				}
			}
		}
		
		[Column(Storage="_vigilanciaMunicipal", DbType="Bit NOT NULL")]
		public bool vigilanciaMunicipal
		{
			get
			{
				return this._vigilanciaMunicipal;
			}
			set
			{
				if ((this._vigilanciaMunicipal != value))
				{
					this.OnvigilanciaMunicipalChanging(value);
					this.SendPropertyChanging();
					this._vigilanciaMunicipal = value;
					this.SendPropertyChanged("vigilanciaMunicipal");
					this.OnvigilanciaMunicipalChanged();
				}
			}
		}
		
		[Column(Storage="_senalizacionNomencaltura", DbType="Bit NOT NULL")]
		public bool senalizacionNomencaltura
		{
			get
			{
				return this._senalizacionNomencaltura;
			}
			set
			{
				if ((this._senalizacionNomencaltura != value))
				{
					this.OnsenalizacionNomencalturaChanging(value);
					this.SendPropertyChanging();
					this._senalizacionNomencaltura = value;
					this.SendPropertyChanged("senalizacionNomencaltura");
					this.OnsenalizacionNomencalturaChanged();
				}
			}
		}
		
		[Column(Storage="_recoleccionBasura", DbType="Bit NOT NULL")]
		public bool recoleccionBasura
		{
			get
			{
				return this._recoleccionBasura;
			}
			set
			{
				if ((this._recoleccionBasura != value))
				{
					this.OnrecoleccionBasuraChanging(value);
					this.SendPropertyChanging();
					this._recoleccionBasura = value;
					this.SendPropertyChanged("recoleccionBasura");
					this.OnrecoleccionBasuraChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_ServiciosInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.ServiciosInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.ServiciosInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Solicitante")]
	public partial class Solicitante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSolicitante;
		
		private int _idDireccion;
		
		private string _nombre;
		
		private string _NSS;
		
		private string _CURP;
		
		private string _RFC;
		
		private EntitySet<AvaluoInmobiliario> _AvaluoInmobiliario;
		
		private EntityRef<Direccion> _Direccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSolicitanteChanging(int value);
    partial void OnidSolicitanteChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnNSSChanging(string value);
    partial void OnNSSChanged();
    partial void OnCURPChanging(string value);
    partial void OnCURPChanged();
    partial void OnRFCChanging(string value);
    partial void OnRFCChanged();
    #endregion
		
		public Solicitante()
		{
			this._AvaluoInmobiliario = new EntitySet<AvaluoInmobiliario>(new Action<AvaluoInmobiliario>(this.attach_AvaluoInmobiliario), new Action<AvaluoInmobiliario>(this.detach_AvaluoInmobiliario));
			this._Direccion = default(EntityRef<Direccion>);
			OnCreated();
		}
		
		[Column(Storage="_idSolicitante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSolicitante
		{
			get
			{
				return this._idSolicitante;
			}
			set
			{
				if ((this._idSolicitante != value))
				{
					this.OnidSolicitanteChanging(value);
					this.SendPropertyChanging();
					this._idSolicitante = value;
					this.SendPropertyChanged("idSolicitante");
					this.OnidSolicitanteChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_NSS", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string NSS
		{
			get
			{
				return this._NSS;
			}
			set
			{
				if ((this._NSS != value))
				{
					this.OnNSSChanging(value);
					this.SendPropertyChanging();
					this._NSS = value;
					this.SendPropertyChanged("NSS");
					this.OnNSSChanged();
				}
			}
		}
		
		[Column(Storage="_CURP", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string CURP
		{
			get
			{
				return this._CURP;
			}
			set
			{
				if ((this._CURP != value))
				{
					this.OnCURPChanging(value);
					this.SendPropertyChanging();
					this._CURP = value;
					this.SendPropertyChanged("CURP");
					this.OnCURPChanged();
				}
			}
		}
		
		[Column(Storage="_RFC", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string RFC
		{
			get
			{
				return this._RFC;
			}
			set
			{
				if ((this._RFC != value))
				{
					this.OnRFCChanging(value);
					this.SendPropertyChanging();
					this._RFC = value;
					this.SendPropertyChanged("RFC");
					this.OnRFCChanged();
				}
			}
		}
		
		[Association(Name="Solicitante_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idSolicitante", OtherKey="idSolicitante")]
		public EntitySet<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario;
			}
			set
			{
				this._AvaluoInmobiliario.Assign(value);
			}
		}
		
		[Association(Name="Direccion_Solicitante", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.Solicitante.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.Solicitante.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Solicitante = this;
		}
		
		private void detach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.Solicitante = null;
		}
	}
	
	[Table(Name="dbo.StatusAvaluo")]
	public partial class StatusAvaluo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idStatus;
		
		private string _descripcion;
		
		private EntitySet<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStatusChanging(short value);
    partial void OnidStatusChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public StatusAvaluo()
		{
			this._AvaluoInmobiliario = new EntitySet<AvaluoInmobiliario>(new Action<AvaluoInmobiliario>(this.attach_AvaluoInmobiliario), new Action<AvaluoInmobiliario>(this.detach_AvaluoInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idStatus", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idStatus
		{
			get
			{
				return this._idStatus;
			}
			set
			{
				if ((this._idStatus != value))
				{
					this.OnidStatusChanging(value);
					this.SendPropertyChanging();
					this._idStatus = value;
					this.SendPropertyChanged("idStatus");
					this.OnidStatusChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="StatusAvaluo_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idStatus", OtherKey="idStatus")]
		public EntitySet<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario;
			}
			set
			{
				this._AvaluoInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.StatusAvaluo = this;
		}
		
		private void detach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.StatusAvaluo = null;
		}
	}
	
	[Table(Name="dbo.SuperficiesInmueble")]
	public partial class SuperficiesInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private double _totalTerreno;
		
		private double _frenteLote;
		
		private int _fuenteTerreno;
		
		private string _otraFuenteTerreno;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OntotalTerrenoChanging(double value);
    partial void OntotalTerrenoChanged();
    partial void OnfrenteLoteChanging(double value);
    partial void OnfrenteLoteChanged();
    partial void OnfuenteTerrenoChanging(int value);
    partial void OnfuenteTerrenoChanged();
    partial void OnotraFuenteTerrenoChanging(string value);
    partial void OnotraFuenteTerrenoChanged();
    #endregion
		
		public SuperficiesInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_totalTerreno", DbType="Float NOT NULL")]
		public double totalTerreno
		{
			get
			{
				return this._totalTerreno;
			}
			set
			{
				if ((this._totalTerreno != value))
				{
					this.OntotalTerrenoChanging(value);
					this.SendPropertyChanging();
					this._totalTerreno = value;
					this.SendPropertyChanged("totalTerreno");
					this.OntotalTerrenoChanged();
				}
			}
		}
		
		[Column(Storage="_frenteLote", DbType="Float NOT NULL")]
		public double frenteLote
		{
			get
			{
				return this._frenteLote;
			}
			set
			{
				if ((this._frenteLote != value))
				{
					this.OnfrenteLoteChanging(value);
					this.SendPropertyChanging();
					this._frenteLote = value;
					this.SendPropertyChanged("frenteLote");
					this.OnfrenteLoteChanged();
				}
			}
		}
		
		[Column(Storage="_fuenteTerreno", DbType="Int NOT NULL")]
		public int fuenteTerreno
		{
			get
			{
				return this._fuenteTerreno;
			}
			set
			{
				if ((this._fuenteTerreno != value))
				{
					this.OnfuenteTerrenoChanging(value);
					this.SendPropertyChanging();
					this._fuenteTerreno = value;
					this.SendPropertyChanged("fuenteTerreno");
					this.OnfuenteTerrenoChanged();
				}
			}
		}
		
		[Column(Storage="_otraFuenteTerreno", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string otraFuenteTerreno
		{
			get
			{
				return this._otraFuenteTerreno;
			}
			set
			{
				if ((this._otraFuenteTerreno != value))
				{
					this.OnotraFuenteTerrenoChanging(value);
					this.SendPropertyChanging();
					this._otraFuenteTerreno = value;
					this.SendPropertyChanged("otraFuenteTerreno");
					this.OnotraFuenteTerrenoChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_SuperficiesInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.SuperficiesInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.SuperficiesInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoAsentamiento")]
	public partial class TipoAsentamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoAsentamiento;
		
		private string _tipoAsentamiento1;
		
		private EntitySet<Asentamiento> _Asentamiento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoAsentamientoChanging(short value);
    partial void OnidTipoAsentamientoChanged();
    partial void OntipoAsentamiento1Changing(string value);
    partial void OntipoAsentamiento1Changed();
    #endregion
		
		public TipoAsentamiento()
		{
			this._Asentamiento = new EntitySet<Asentamiento>(new Action<Asentamiento>(this.attach_Asentamiento), new Action<Asentamiento>(this.detach_Asentamiento));
			OnCreated();
		}
		
		[Column(Storage="_idTipoAsentamiento", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoAsentamiento
		{
			get
			{
				return this._idTipoAsentamiento;
			}
			set
			{
				if ((this._idTipoAsentamiento != value))
				{
					this.OnidTipoAsentamientoChanging(value);
					this.SendPropertyChanging();
					this._idTipoAsentamiento = value;
					this.SendPropertyChanged("idTipoAsentamiento");
					this.OnidTipoAsentamientoChanged();
				}
			}
		}
		
		[Column(Name="tipoAsentamiento", Storage="_tipoAsentamiento1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string tipoAsentamiento1
		{
			get
			{
				return this._tipoAsentamiento1;
			}
			set
			{
				if ((this._tipoAsentamiento1 != value))
				{
					this.OntipoAsentamiento1Changing(value);
					this.SendPropertyChanging();
					this._tipoAsentamiento1 = value;
					this.SendPropertyChanged("tipoAsentamiento1");
					this.OntipoAsentamiento1Changed();
				}
			}
		}
		
		[Association(Name="TipoAsentamiento_Asentamiento", Storage="_Asentamiento", ThisKey="idTipoAsentamiento", OtherKey="idTipoAsentamiento")]
		public EntitySet<Asentamiento> Asentamiento
		{
			get
			{
				return this._Asentamiento;
			}
			set
			{
				this._Asentamiento.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asentamiento(Asentamiento entity)
		{
			this.SendPropertyChanging();
			entity.TipoAsentamiento = this;
		}
		
		private void detach_Asentamiento(Asentamiento entity)
		{
			this.SendPropertyChanging();
			entity.TipoAsentamiento = null;
		}
	}
	
	[Table(Name="dbo.TipoAvaluoInmobiliario")]
	public partial class TipoAvaluoInmobiliario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idSubTipo;
		
		private string _nombre;
		
		private EntitySet<AvaluoInmobiliario> _AvaluoInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSubTipoChanging(short value);
    partial void OnidSubTipoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public TipoAvaluoInmobiliario()
		{
			this._AvaluoInmobiliario = new EntitySet<AvaluoInmobiliario>(new Action<AvaluoInmobiliario>(this.attach_AvaluoInmobiliario), new Action<AvaluoInmobiliario>(this.detach_AvaluoInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idSubTipo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idSubTipo
		{
			get
			{
				return this._idSubTipo;
			}
			set
			{
				if ((this._idSubTipo != value))
				{
					this.OnidSubTipoChanging(value);
					this.SendPropertyChanging();
					this._idSubTipo = value;
					this.SendPropertyChanged("idSubTipo");
					this.OnidSubTipoChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Association(Name="TipoAvaluoInmobiliario_AvaluoInmobiliario", Storage="_AvaluoInmobiliario", ThisKey="idSubTipo", OtherKey="idSubTipo")]
		public EntitySet<AvaluoInmobiliario> AvaluoInmobiliario
		{
			get
			{
				return this._AvaluoInmobiliario;
			}
			set
			{
				this._AvaluoInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoAvaluoInmobiliario = this;
		}
		
		private void detach_AvaluoInmobiliario(AvaluoInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoAvaluoInmobiliario = null;
		}
	}
	
	[Table(Name="dbo.TipoCalidadProyecto")]
	public partial class TipoCalidadProyecto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoCalidadProyecto;
		
		private string _descricion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoCalidadProyectoChanging(short value);
    partial void OnidTipoCalidadProyectoChanged();
    partial void OndescricionChanging(string value);
    partial void OndescricionChanged();
    #endregion
		
		public TipoCalidadProyecto()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoCalidadProyecto", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoCalidadProyecto
		{
			get
			{
				return this._idTipoCalidadProyecto;
			}
			set
			{
				if ((this._idTipoCalidadProyecto != value))
				{
					this.OnidTipoCalidadProyectoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCalidadProyecto = value;
					this.SendPropertyChanged("idTipoCalidadProyecto");
					this.OnidTipoCalidadProyectoChanged();
				}
			}
		}
		
		[Column(Storage="_descricion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descricion
		{
			get
			{
				return this._descricion;
			}
			set
			{
				if ((this._descricion != value))
				{
					this.OndescricionChanging(value);
					this.SendPropertyChanging();
					this._descricion = value;
					this.SendPropertyChanged("descricion");
					this.OndescricionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoCaracteristicaPanoramica")]
	public partial class TipoCaracteristicaPanoramica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoCaracteristica;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoCaracteristicaChanging(short value);
    partial void OnidTipoCaracteristicaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoCaracteristicaPanoramica()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoCaracteristica", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoCaracteristica
		{
			get
			{
				return this._idTipoCaracteristica;
			}
			set
			{
				if ((this._idTipoCaracteristica != value))
				{
					this.OnidTipoCaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._idTipoCaracteristica = value;
					this.SendPropertyChanged("idTipoCaracteristica");
					this.OnidTipoCaracteristicaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoClasificacionZona")]
	public partial class TipoClasificacionZona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoClasificacionZona;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoClasificacionZonaChanging(short value);
    partial void OnidTipoClasificacionZonaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoClasificacionZona()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoClasificacionZona", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoClasificacionZona
		{
			get
			{
				return this._idTipoClasificacionZona;
			}
			set
			{
				if ((this._idTipoClasificacionZona != value))
				{
					this.OnidTipoClasificacionZonaChanging(value);
					this.SendPropertyChanging();
					this._idTipoClasificacionZona = value;
					this.SendPropertyChanged("idTipoClasificacionZona");
					this.OnidTipoClasificacionZonaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoClasificacionZona", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoClasificacionZona.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoClasificacionZona.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoColindancia")]
	public partial class TipoColindancia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoColindancia;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoColindanciaChanging(short value);
    partial void OnidTipoColindanciaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoColindancia()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoColindancia", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoColindancia
		{
			get
			{
				return this._idTipoColindancia;
			}
			set
			{
				if ((this._idTipoColindancia != value))
				{
					this.OnidTipoColindanciaChanging(value);
					this.SendPropertyChanging();
					this._idTipoColindancia = value;
					this.SendPropertyChanged("idTipoColindancia");
					this.OnidTipoColindanciaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoComparable")]
	public partial class TipoComparable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoComparable;
		
		private string _descripcion;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoComparableChanging(short value);
    partial void OnidTipoComparableChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoComparable()
		{
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idTipoComparable", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoComparable
		{
			get
			{
				return this._idTipoComparable;
			}
			set
			{
				if ((this._idTipoComparable != value))
				{
					this.OnidTipoComparableChanging(value);
					this.SendPropertyChanging();
					this._idTipoComparable = value;
					this.SendPropertyChanged("idTipoComparable");
					this.OnidTipoComparableChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoComparable_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idTipoComparable", OtherKey="idTipoComparable")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoComparable = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoComparable = null;
		}
	}
	
	[Table(Name="dbo.TipoConstruccionPredominante")]
	public partial class TipoConstruccionPredominante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoConstruccionPredominante;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoConstruccionPredominanteChanging(short value);
    partial void OnidTipoConstruccionPredominanteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoConstruccionPredominante()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoConstruccionPredominante", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoConstruccionPredominante
		{
			get
			{
				return this._idTipoConstruccionPredominante;
			}
			set
			{
				if ((this._idTipoConstruccionPredominante != value))
				{
					this.OnidTipoConstruccionPredominanteChanging(value);
					this.SendPropertyChanging();
					this._idTipoConstruccionPredominante = value;
					this.SendPropertyChanged("idTipoConstruccionPredominante");
					this.OnidTipoConstruccionPredominanteChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoConstruccionPredominante", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoConstruccionPredominante.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoConstruccionPredominante.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoCredito")]
	public partial class TipoCredito : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoCredito;
		
		private string _decripcion;
		
		private bool _tieneCofinanciamiento;
		
		private EntitySet<DatoCredito> _DatoCredito;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoCreditoChanging(short value);
    partial void OnidTipoCreditoChanged();
    partial void OndecripcionChanging(string value);
    partial void OndecripcionChanged();
    partial void OntieneCofinanciamientoChanging(bool value);
    partial void OntieneCofinanciamientoChanged();
    #endregion
		
		public TipoCredito()
		{
			this._DatoCredito = new EntitySet<DatoCredito>(new Action<DatoCredito>(this.attach_DatoCredito), new Action<DatoCredito>(this.detach_DatoCredito));
			OnCreated();
		}
		
		[Column(Storage="_idTipoCredito", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoCredito
		{
			get
			{
				return this._idTipoCredito;
			}
			set
			{
				if ((this._idTipoCredito != value))
				{
					this.OnidTipoCreditoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCredito = value;
					this.SendPropertyChanged("idTipoCredito");
					this.OnidTipoCreditoChanged();
				}
			}
		}
		
		[Column(Storage="_decripcion", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string decripcion
		{
			get
			{
				return this._decripcion;
			}
			set
			{
				if ((this._decripcion != value))
				{
					this.OndecripcionChanging(value);
					this.SendPropertyChanging();
					this._decripcion = value;
					this.SendPropertyChanged("decripcion");
					this.OndecripcionChanged();
				}
			}
		}
		
		[Column(Storage="_tieneCofinanciamiento", DbType="Bit NOT NULL")]
		public bool tieneCofinanciamiento
		{
			get
			{
				return this._tieneCofinanciamiento;
			}
			set
			{
				if ((this._tieneCofinanciamiento != value))
				{
					this.OntieneCofinanciamientoChanging(value);
					this.SendPropertyChanging();
					this._tieneCofinanciamiento = value;
					this.SendPropertyChanged("tieneCofinanciamiento");
					this.OntieneCofinanciamientoChanged();
				}
			}
		}
		
		[Association(Name="TipoCredito_DatoCredito", Storage="_DatoCredito", ThisKey="idTipoCredito", OtherKey="idTipoCredito")]
		public EntitySet<DatoCredito> DatoCredito
		{
			get
			{
				return this._DatoCredito;
			}
			set
			{
				this._DatoCredito.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.TipoCredito = this;
		}
		
		private void detach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.TipoCredito = null;
		}
	}
	
	[Table(Name="dbo.TipoCreditoInterno")]
	public partial class TipoCreditoInterno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoCreditoInterno;
		
		private short _idEntidad;
		
		private string _descripcion;
		
		private EntitySet<DatoCredito> _DatoCredito;
		
		private EntityRef<EntidadFinanciamiento> _EntidadFinanciamiento;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoCreditoInternoChanging(short value);
    partial void OnidTipoCreditoInternoChanged();
    partial void OnidEntidadChanging(short value);
    partial void OnidEntidadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoCreditoInterno()
		{
			this._DatoCredito = new EntitySet<DatoCredito>(new Action<DatoCredito>(this.attach_DatoCredito), new Action<DatoCredito>(this.detach_DatoCredito));
			this._EntidadFinanciamiento = default(EntityRef<EntidadFinanciamiento>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoCreditoInterno", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoCreditoInterno
		{
			get
			{
				return this._idTipoCreditoInterno;
			}
			set
			{
				if ((this._idTipoCreditoInterno != value))
				{
					this.OnidTipoCreditoInternoChanging(value);
					this.SendPropertyChanging();
					this._idTipoCreditoInterno = value;
					this.SendPropertyChanged("idTipoCreditoInterno");
					this.OnidTipoCreditoInternoChanged();
				}
			}
		}
		
		[Column(Storage="_idEntidad", DbType="SmallInt NOT NULL")]
		public short idEntidad
		{
			get
			{
				return this._idEntidad;
			}
			set
			{
				if ((this._idEntidad != value))
				{
					if (this._EntidadFinanciamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEntidadChanging(value);
					this.SendPropertyChanging();
					this._idEntidad = value;
					this.SendPropertyChanged("idEntidad");
					this.OnidEntidadChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoCreditoInterno_DatoCredito", Storage="_DatoCredito", ThisKey="idTipoCreditoInterno", OtherKey="idTipoCreditoInterno")]
		public EntitySet<DatoCredito> DatoCredito
		{
			get
			{
				return this._DatoCredito;
			}
			set
			{
				this._DatoCredito.Assign(value);
			}
		}
		
		[Association(Name="EntidadFinanciamiento_TipoCreditoInterno", Storage="_EntidadFinanciamiento", ThisKey="idEntidad", OtherKey="idEntidad", IsForeignKey=true)]
		public EntidadFinanciamiento EntidadFinanciamiento
		{
			get
			{
				return this._EntidadFinanciamiento.Entity;
			}
			set
			{
				EntidadFinanciamiento previousValue = this._EntidadFinanciamiento.Entity;
				if (((previousValue != value) 
							|| (this._EntidadFinanciamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntidadFinanciamiento.Entity = null;
						previousValue.TipoCreditoInterno.Remove(this);
					}
					this._EntidadFinanciamiento.Entity = value;
					if ((value != null))
					{
						value.TipoCreditoInterno.Add(this);
						this._idEntidad = value.idEntidad;
					}
					else
					{
						this._idEntidad = default(short);
					}
					this.SendPropertyChanged("EntidadFinanciamiento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.TipoCreditoInterno = this;
		}
		
		private void detach_DatoCredito(DatoCredito entity)
		{
			this.SendPropertyChanging();
			entity.TipoCreditoInterno = null;
		}
	}
	
	[Table(Name="dbo.TipoDensidad")]
	public partial class TipoDensidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoDensidad;
		
		private string _Densidad;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoDensidadChanging(short value);
    partial void OnidTipoDensidadChanged();
    partial void OnDensidadChanging(string value);
    partial void OnDensidadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoDensidad()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoDensidad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoDensidad
		{
			get
			{
				return this._idTipoDensidad;
			}
			set
			{
				if ((this._idTipoDensidad != value))
				{
					this.OnidTipoDensidadChanging(value);
					this.SendPropertyChanging();
					this._idTipoDensidad = value;
					this.SendPropertyChanged("idTipoDensidad");
					this.OnidTipoDensidadChanged();
				}
			}
		}
		
		[Column(Storage="_Densidad", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Densidad
		{
			get
			{
				return this._Densidad;
			}
			set
			{
				if ((this._Densidad != value))
				{
					this.OnDensidadChanging(value);
					this.SendPropertyChanging();
					this._Densidad = value;
					this.SendPropertyChanged("Densidad");
					this.OnDensidadChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoDensidad", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoDensidad.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoDensidad.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoDocumentoValuador")]
	public partial class TipoDocumentoValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoDocumento;
		
		private string _nombreTipoDocumento;
		
		private EntitySet<DocumentoValuador> _DocumentoValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoDocumentoChanging(short value);
    partial void OnidTipoDocumentoChanged();
    partial void OnnombreTipoDocumentoChanging(string value);
    partial void OnnombreTipoDocumentoChanged();
    #endregion
		
		public TipoDocumentoValuador()
		{
			this._DocumentoValuador = new EntitySet<DocumentoValuador>(new Action<DocumentoValuador>(this.attach_DocumentoValuador), new Action<DocumentoValuador>(this.detach_DocumentoValuador));
			OnCreated();
		}
		
		[Column(Storage="_idTipoDocumento", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoDocumento
		{
			get
			{
				return this._idTipoDocumento;
			}
			set
			{
				if ((this._idTipoDocumento != value))
				{
					this.OnidTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._idTipoDocumento = value;
					this.SendPropertyChanged("idTipoDocumento");
					this.OnidTipoDocumentoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreTipoDocumento", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombreTipoDocumento
		{
			get
			{
				return this._nombreTipoDocumento;
			}
			set
			{
				if ((this._nombreTipoDocumento != value))
				{
					this.OnnombreTipoDocumentoChanging(value);
					this.SendPropertyChanging();
					this._nombreTipoDocumento = value;
					this.SendPropertyChanged("nombreTipoDocumento");
					this.OnnombreTipoDocumentoChanged();
				}
			}
		}
		
		[Association(Name="TipoDocumentoValuador_DocumentoValuador", Storage="_DocumentoValuador", ThisKey="idTipoDocumento", OtherKey="idTipoDocumento")]
		public EntitySet<DocumentoValuador> DocumentoValuador
		{
			get
			{
				return this._DocumentoValuador;
			}
			set
			{
				this._DocumentoValuador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentoValuador(DocumentoValuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumentoValuador = this;
		}
		
		private void detach_DocumentoValuador(DocumentoValuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoDocumentoValuador = null;
		}
	}
	
	[Table(Name="dbo.TipoEstadoConservacion")]
	public partial class TipoEstadoConservacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoEstadoConservacion;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoEstadoConservacionChanging(short value);
    partial void OnidTipoEstadoConservacionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoEstadoConservacion()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoEstadoConservacion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoEstadoConservacion
		{
			get
			{
				return this._idTipoEstadoConservacion;
			}
			set
			{
				if ((this._idTipoEstadoConservacion != value))
				{
					this.OnidTipoEstadoConservacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoEstadoConservacion = value;
					this.SendPropertyChanged("idTipoEstadoConservacion");
					this.OnidTipoEstadoConservacionChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoFormacionProfesional")]
	public partial class TipoFormacionProfesional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoFormacion;
		
		private string _nombreFormacion;
		
		private EntitySet<FormacionProfesionalValuador> _FormacionProfesionalValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoFormacionChanging(short value);
    partial void OnidTipoFormacionChanged();
    partial void OnnombreFormacionChanging(string value);
    partial void OnnombreFormacionChanged();
    #endregion
		
		public TipoFormacionProfesional()
		{
			this._FormacionProfesionalValuador = new EntitySet<FormacionProfesionalValuador>(new Action<FormacionProfesionalValuador>(this.attach_FormacionProfesionalValuador), new Action<FormacionProfesionalValuador>(this.detach_FormacionProfesionalValuador));
			OnCreated();
		}
		
		[Column(Storage="_idTipoFormacion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoFormacion
		{
			get
			{
				return this._idTipoFormacion;
			}
			set
			{
				if ((this._idTipoFormacion != value))
				{
					this.OnidTipoFormacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoFormacion = value;
					this.SendPropertyChanged("idTipoFormacion");
					this.OnidTipoFormacionChanged();
				}
			}
		}
		
		[Column(Storage="_nombreFormacion", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreFormacion
		{
			get
			{
				return this._nombreFormacion;
			}
			set
			{
				if ((this._nombreFormacion != value))
				{
					this.OnnombreFormacionChanging(value);
					this.SendPropertyChanging();
					this._nombreFormacion = value;
					this.SendPropertyChanged("nombreFormacion");
					this.OnnombreFormacionChanged();
				}
			}
		}
		
		[Association(Name="TipoFormacionProfesional_FormacionProfesionalValuador", Storage="_FormacionProfesionalValuador", ThisKey="idTipoFormacion", OtherKey="idTipoFormacion")]
		public EntitySet<FormacionProfesionalValuador> FormacionProfesionalValuador
		{
			get
			{
				return this._FormacionProfesionalValuador;
			}
			set
			{
				this._FormacionProfesionalValuador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoFormacionProfesional = this;
		}
		
		private void detach_FormacionProfesionalValuador(FormacionProfesionalValuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoFormacionProfesional = null;
		}
	}
	
	[Table(Name="dbo.TipoFuente")]
	public partial class TipoFuente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoFuente;
		
		private string _descripcion;
		
		private System.Nullable<bool> _condominio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoFuenteChanging(short value);
    partial void OnidTipoFuenteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OncondominioChanging(System.Nullable<bool> value);
    partial void OncondominioChanged();
    #endregion
		
		public TipoFuente()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoFuente", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoFuente
		{
			get
			{
				return this._idTipoFuente;
			}
			set
			{
				if ((this._idTipoFuente != value))
				{
					this.OnidTipoFuenteChanging(value);
					this.SendPropertyChanging();
					this._idTipoFuente = value;
					this.SendPropertyChanged("idTipoFuente");
					this.OnidTipoFuenteChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_condominio", DbType="Bit")]
		public System.Nullable<bool> condominio
		{
			get
			{
				return this._condominio;
			}
			set
			{
				if ((this._condominio != value))
				{
					this.OncondominioChanging(value);
					this.SendPropertyChanging();
					this._condominio = value;
					this.SendPropertyChanged("condominio");
					this.OncondominioChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoImportanciaVialidad")]
	public partial class TipoImportanciaVialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idImportanciaVialidad;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidImportanciaVialidadChanging(short value);
    partial void OnidImportanciaVialidadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoImportanciaVialidad()
		{
			OnCreated();
		}
		
		[Column(Storage="_idImportanciaVialidad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idImportanciaVialidad
		{
			get
			{
				return this._idImportanciaVialidad;
			}
			set
			{
				if ((this._idImportanciaVialidad != value))
				{
					this.OnidImportanciaVialidadChanging(value);
					this.SendPropertyChanging();
					this._idImportanciaVialidad = value;
					this.SendPropertyChanged("idImportanciaVialidad");
					this.OnidImportanciaVialidadChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoInmueble")]
	public partial class TipoInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoInmueble;
		
		private string _descripcion;
		
		private EntitySet<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoInmuebleChanging(short value);
    partial void OnidTipoInmuebleChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoInmueble()
		{
			this._Inmueble = new EntitySet<Inmueble>(new Action<Inmueble>(this.attach_Inmueble), new Action<Inmueble>(this.detach_Inmueble));
			OnCreated();
		}
		
		[Column(Storage="_idTipoInmueble", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoInmueble
		{
			get
			{
				return this._idTipoInmueble;
			}
			set
			{
				if ((this._idTipoInmueble != value))
				{
					this.OnidTipoInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idTipoInmueble = value;
					this.SendPropertyChanged("idTipoInmueble");
					this.OnidTipoInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoInmueble_Inmueble", Storage="_Inmueble", ThisKey="idTipoInmueble", OtherKey="idTipoInmueble")]
		public EntitySet<Inmueble> Inmueble
		{
			get
			{
				return this._Inmueble;
			}
			set
			{
				this._Inmueble.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.TipoInmueble = this;
		}
		
		private void detach_Inmueble(Inmueble entity)
		{
			this.SendPropertyChanging();
			entity.TipoInmueble = null;
		}
	}
	
	[Table(Name="dbo.TipoMaterial")]
	public partial class TipoMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoMaterial;
		
		private string _descripcion;
		
		private EntitySet<ValorMaterial> _ValorMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoMaterialChanging(short value);
    partial void OnidTipoMaterialChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoMaterial()
		{
			this._ValorMaterial = new EntitySet<ValorMaterial>(new Action<ValorMaterial>(this.attach_ValorMaterial), new Action<ValorMaterial>(this.detach_ValorMaterial));
			OnCreated();
		}
		
		[Column(Storage="_idTipoMaterial", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoMaterial
		{
			get
			{
				return this._idTipoMaterial;
			}
			set
			{
				if ((this._idTipoMaterial != value))
				{
					this.OnidTipoMaterialChanging(value);
					this.SendPropertyChanging();
					this._idTipoMaterial = value;
					this.SendPropertyChanged("idTipoMaterial");
					this.OnidTipoMaterialChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoMaterial_ValorMaterial", Storage="_ValorMaterial", ThisKey="idTipoMaterial", OtherKey="idTipoMaterial")]
		public EntitySet<ValorMaterial> ValorMaterial
		{
			get
			{
				return this._ValorMaterial;
			}
			set
			{
				this._ValorMaterial.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ValorMaterial(ValorMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TipoMaterial = this;
		}
		
		private void detach_ValorMaterial(ValorMaterial entity)
		{
			this.SendPropertyChanging();
			entity.TipoMaterial = null;
		}
	}
	
	[Table(Name="dbo.TipoNivelSocioeconomico")]
	public partial class TipoNivelSocioeconomico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoNivelEconomico;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoNivelEconomicoChanging(short value);
    partial void OnidTipoNivelEconomicoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoNivelSocioeconomico()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoNivelEconomico", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoNivelEconomico
		{
			get
			{
				return this._idTipoNivelEconomico;
			}
			set
			{
				if ((this._idTipoNivelEconomico != value))
				{
					this.OnidTipoNivelEconomicoChanging(value);
					this.SendPropertyChanging();
					this._idTipoNivelEconomico = value;
					this.SendPropertyChanged("idTipoNivelEconomico");
					this.OnidTipoNivelEconomicoChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoNivelSocioeconomico", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoNivelSocioeconomico.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoNivelSocioeconomico.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoOrientacion")]
	public partial class TipoOrientacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoOrientacion;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoOrientacionChanging(short value);
    partial void OnidTipoOrientacionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoOrientacion()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoOrientacion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoOrientacion
		{
			get
			{
				return this._idTipoOrientacion;
			}
			set
			{
				if ((this._idTipoOrientacion != value))
				{
					this.OnidTipoOrientacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoOrientacion = value;
					this.SendPropertyChanged("idTipoOrientacion");
					this.OnidTipoOrientacionChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoProximidadUrbana")]
	public partial class TipoProximidadUrbana : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoProximidadUrbana;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoProximidadUrbanaChanging(short value);
    partial void OnidTipoProximidadUrbanaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoProximidadUrbana()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoProximidadUrbana", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoProximidadUrbana
		{
			get
			{
				return this._idTipoProximidadUrbana;
			}
			set
			{
				if ((this._idTipoProximidadUrbana != value))
				{
					this.OnidTipoProximidadUrbanaChanging(value);
					this.SendPropertyChanging();
					this._idTipoProximidadUrbana = value;
					this.SendPropertyChanged("idTipoProximidadUrbana");
					this.OnidTipoProximidadUrbanaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoProximidadUrbana", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoProximidadUrbana.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoProximidadUrbana.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoServicio")]
	public partial class TipoServicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoServicio;
		
		private string _descripcion;
		
		private EntitySet<ValorServicio> _ValorServicio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoServicioChanging(short value);
    partial void OnidTipoServicioChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoServicio()
		{
			this._ValorServicio = new EntitySet<ValorServicio>(new Action<ValorServicio>(this.attach_ValorServicio), new Action<ValorServicio>(this.detach_ValorServicio));
			OnCreated();
		}
		
		[Column(Storage="_idTipoServicio", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idTipoServicio
		{
			get
			{
				return this._idTipoServicio;
			}
			set
			{
				if ((this._idTipoServicio != value))
				{
					this.OnidTipoServicioChanging(value);
					this.SendPropertyChanging();
					this._idTipoServicio = value;
					this.SendPropertyChanged("idTipoServicio");
					this.OnidTipoServicioChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoServicio_ValorServicio", Storage="_ValorServicio", ThisKey="idTipoServicio", OtherKey="idTipoServicio")]
		public EntitySet<ValorServicio> ValorServicio
		{
			get
			{
				return this._ValorServicio;
			}
			set
			{
				this._ValorServicio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ValorServicio(ValorServicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio = this;
		}
		
		private void detach_ValorServicio(ValorServicio entity)
		{
			this.SendPropertyChanging();
			entity.TipoServicio = null;
		}
	}
	
	[Table(Name="dbo.TipoServidumbre")]
	public partial class TipoServidumbre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoServidumbre;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoServidumbreChanging(short value);
    partial void OnidTipoServidumbreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoServidumbre()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoServidumbre", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoServidumbre
		{
			get
			{
				return this._idTipoServidumbre;
			}
			set
			{
				if ((this._idTipoServidumbre != value))
				{
					this.OnidTipoServidumbreChanging(value);
					this.SendPropertyChanging();
					this._idTipoServidumbre = value;
					this.SendPropertyChanged("idTipoServidumbre");
					this.OnidTipoServidumbreChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoTopografia")]
	public partial class TipoTopografia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoTopografia;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoTopografiaChanging(short value);
    partial void OnidTipoTopografiaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoTopografia()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoTopografia", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoTopografia
		{
			get
			{
				return this._idTipoTopografia;
			}
			set
			{
				if ((this._idTipoTopografia != value))
				{
					this.OnidTipoTopografiaChanging(value);
					this.SendPropertyChanging();
					this._idTipoTopografia = value;
					this.SendPropertyChanged("idTipoTopografia");
					this.OnidTipoTopografiaChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoUbicacion")]
	public partial class TipoUbicacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoUbicacion;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUbicacionChanging(short value);
    partial void OnidTipoUbicacionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoUbicacion()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoUbicacion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoUbicacion
		{
			get
			{
				return this._idTipoUbicacion;
			}
			set
			{
				if ((this._idTipoUbicacion != value))
				{
					this.OnidTipoUbicacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoUbicacion = value;
					this.SendPropertyChanged("idTipoUbicacion");
					this.OnidTipoUbicacionChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoUnidad")]
	public partial class TipoUnidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoUnidad;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUnidadChanging(short value);
    partial void OnidTipoUnidadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoUnidad()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoUnidad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoUnidad
		{
			get
			{
				return this._idTipoUnidad;
			}
			set
			{
				if ((this._idTipoUnidad != value))
				{
					this.OnidTipoUnidadChanging(value);
					this.SendPropertyChanging();
					this._idTipoUnidad = value;
					this.SendPropertyChanged("idTipoUnidad");
					this.OnidTipoUnidadChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoUsoConstruccion")]
	public partial class TipoUsoConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoUsoConstruccion;
		
		private string _descripcion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUsoConstruccionChanging(short value);
    partial void OnidTipoUsoConstruccionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoUsoConstruccion()
		{
			OnCreated();
		}
		
		[Column(Storage="_idTipoUsoConstruccion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoUsoConstruccion
		{
			get
			{
				return this._idTipoUsoConstruccion;
			}
			set
			{
				if ((this._idTipoUsoConstruccion != value))
				{
					this.OnidTipoUsoConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idTipoUsoConstruccion = value;
					this.SendPropertyChanged("idTipoUsoConstruccion");
					this.OnidTipoUsoConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoUsoSuelo")]
	public partial class TipoUsoSuelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoUsoSuelo;
		
		private string _descripcion;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUsoSueloChanging(short value);
    partial void OnidTipoUsoSueloChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public TipoUsoSuelo()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idTipoUsoSuelo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoUsoSuelo
		{
			get
			{
				return this._idTipoUsoSuelo;
			}
			set
			{
				if ((this._idTipoUsoSuelo != value))
				{
					this.OnidTipoUsoSueloChanging(value);
					this.SendPropertyChanging();
					this._idTipoUsoSuelo = value;
					this.SendPropertyChanged("idTipoUsoSuelo");
					this.OnidTipoUsoSueloChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_TipoUsoSuelo", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.TipoUsoSuelo.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoUsoSuelo.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoValuador")]
	public partial class TipoValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoValuador;
		
		private string _descripcion;
		
		private EntitySet<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoValuadorChanging(short value);
    partial void OnidTipoValuadorChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoValuador()
		{
			this._Valuador = new EntitySet<Valuador>(new Action<Valuador>(this.attach_Valuador), new Action<Valuador>(this.detach_Valuador));
			OnCreated();
		}
		
		[Column(Storage="_idTipoValuador", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoValuador
		{
			get
			{
				return this._idTipoValuador;
			}
			set
			{
				if ((this._idTipoValuador != value))
				{
					this.OnidTipoValuadorChanging(value);
					this.SendPropertyChanging();
					this._idTipoValuador = value;
					this.SendPropertyChanged("idTipoValuador");
					this.OnidTipoValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoValuador_Valuador", Storage="_Valuador", ThisKey="idTipoValuador", OtherKey="idTipoValuador")]
		public EntitySet<Valuador> Valuador
		{
			get
			{
				return this._Valuador;
			}
			set
			{
				this._Valuador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoValuador = this;
		}
		
		private void detach_Valuador(Valuador entity)
		{
			this.SendPropertyChanging();
			entity.TipoValuador = null;
		}
	}
	
	[Table(Name="dbo.UbicacionCallesInmueble")]
	public partial class UbicacionCallesInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private short _idTipoOrientacion1;
		
		private short _idTipoOrientacion2;
		
		private short _idTipoOrientacion3;
		
		private string _calleTransversal1;
		
		private string _calleTransversal2;
		
		private string _calleLimitrofe;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidTipoOrientacion1Changing(short value);
    partial void OnidTipoOrientacion1Changed();
    partial void OnidTipoOrientacion2Changing(short value);
    partial void OnidTipoOrientacion2Changed();
    partial void OnidTipoOrientacion3Changing(short value);
    partial void OnidTipoOrientacion3Changed();
    partial void OncalleTransversal1Changing(string value);
    partial void OncalleTransversal1Changed();
    partial void OncalleTransversal2Changing(string value);
    partial void OncalleTransversal2Changed();
    partial void OncalleLimitrofeChanging(string value);
    partial void OncalleLimitrofeChanged();
    #endregion
		
		public UbicacionCallesInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoOrientacion1", DbType="SmallInt NOT NULL")]
		public short idTipoOrientacion1
		{
			get
			{
				return this._idTipoOrientacion1;
			}
			set
			{
				if ((this._idTipoOrientacion1 != value))
				{
					this.OnidTipoOrientacion1Changing(value);
					this.SendPropertyChanging();
					this._idTipoOrientacion1 = value;
					this.SendPropertyChanged("idTipoOrientacion1");
					this.OnidTipoOrientacion1Changed();
				}
			}
		}
		
		[Column(Storage="_idTipoOrientacion2", DbType="SmallInt NOT NULL")]
		public short idTipoOrientacion2
		{
			get
			{
				return this._idTipoOrientacion2;
			}
			set
			{
				if ((this._idTipoOrientacion2 != value))
				{
					this.OnidTipoOrientacion2Changing(value);
					this.SendPropertyChanging();
					this._idTipoOrientacion2 = value;
					this.SendPropertyChanged("idTipoOrientacion2");
					this.OnidTipoOrientacion2Changed();
				}
			}
		}
		
		[Column(Storage="_idTipoOrientacion3", DbType="SmallInt NOT NULL")]
		public short idTipoOrientacion3
		{
			get
			{
				return this._idTipoOrientacion3;
			}
			set
			{
				if ((this._idTipoOrientacion3 != value))
				{
					this.OnidTipoOrientacion3Changing(value);
					this.SendPropertyChanging();
					this._idTipoOrientacion3 = value;
					this.SendPropertyChanged("idTipoOrientacion3");
					this.OnidTipoOrientacion3Changed();
				}
			}
		}
		
		[Column(Storage="_calleTransversal1", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string calleTransversal1
		{
			get
			{
				return this._calleTransversal1;
			}
			set
			{
				if ((this._calleTransversal1 != value))
				{
					this.OncalleTransversal1Changing(value);
					this.SendPropertyChanging();
					this._calleTransversal1 = value;
					this.SendPropertyChanged("calleTransversal1");
					this.OncalleTransversal1Changed();
				}
			}
		}
		
		[Column(Storage="_calleTransversal2", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string calleTransversal2
		{
			get
			{
				return this._calleTransversal2;
			}
			set
			{
				if ((this._calleTransversal2 != value))
				{
					this.OncalleTransversal2Changing(value);
					this.SendPropertyChanging();
					this._calleTransversal2 = value;
					this.SendPropertyChanged("calleTransversal2");
					this.OncalleTransversal2Changed();
				}
			}
		}
		
		[Column(Storage="_calleLimitrofe", DbType="NVarChar(35) NOT NULL", CanBeNull=false)]
		public string calleLimitrofe
		{
			get
			{
				return this._calleLimitrofe;
			}
			set
			{
				if ((this._calleLimitrofe != value))
				{
					this.OncalleLimitrofeChanging(value);
					this.SendPropertyChanging();
					this._calleLimitrofe = value;
					this.SendPropertyChanged("calleLimitrofe");
					this.OncalleLimitrofeChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_UbicacionCallesInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.UbicacionCallesInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.UbicacionCallesInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UbicacionInmueble")]
	public partial class UbicacionInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInmueble;
		
		private short _idTipoUbicacion;
		
		private short _idTipotopografia;
		
		private short _idTipoCaracteristicasPanoramicas;
		
		private short _idTipoUsoSuelo;
		
		private short _idTipoServidumbre;
		
		private short _idFuenteMedida;
		
		private string _otraFuente;
		
		private bool _configuracionRegular;
		
		private double _densidadHabitantes;
		
		private double _densidadViviendas;
		
		private short _frentes;
		
		private short _lados;
		
		private string _descripcionColindancias;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidTipoUbicacionChanging(short value);
    partial void OnidTipoUbicacionChanged();
    partial void OnidTipotopografiaChanging(short value);
    partial void OnidTipotopografiaChanged();
    partial void OnidTipoCaracteristicasPanoramicasChanging(short value);
    partial void OnidTipoCaracteristicasPanoramicasChanged();
    partial void OnidTipoUsoSueloChanging(short value);
    partial void OnidTipoUsoSueloChanged();
    partial void OnidTipoServidumbreChanging(short value);
    partial void OnidTipoServidumbreChanged();
    partial void OnidFuenteMedidaChanging(short value);
    partial void OnidFuenteMedidaChanged();
    partial void OnotraFuenteChanging(string value);
    partial void OnotraFuenteChanged();
    partial void OnconfiguracionRegularChanging(bool value);
    partial void OnconfiguracionRegularChanged();
    partial void OndensidadHabitantesChanging(double value);
    partial void OndensidadHabitantesChanged();
    partial void OndensidadViviendasChanging(double value);
    partial void OndensidadViviendasChanged();
    partial void OnfrentesChanging(short value);
    partial void OnfrentesChanged();
    partial void OnladosChanging(short value);
    partial void OnladosChanged();
    partial void OndescripcionColindanciasChanging(string value);
    partial void OndescripcionColindanciasChanged();
    #endregion
		
		public UbicacionInmueble()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoUbicacion", DbType="SmallInt NOT NULL")]
		public short idTipoUbicacion
		{
			get
			{
				return this._idTipoUbicacion;
			}
			set
			{
				if ((this._idTipoUbicacion != value))
				{
					this.OnidTipoUbicacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoUbicacion = value;
					this.SendPropertyChanged("idTipoUbicacion");
					this.OnidTipoUbicacionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipotopografia", DbType="SmallInt NOT NULL")]
		public short idTipotopografia
		{
			get
			{
				return this._idTipotopografia;
			}
			set
			{
				if ((this._idTipotopografia != value))
				{
					this.OnidTipotopografiaChanging(value);
					this.SendPropertyChanging();
					this._idTipotopografia = value;
					this.SendPropertyChanged("idTipotopografia");
					this.OnidTipotopografiaChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoCaracteristicasPanoramicas", DbType="SmallInt NOT NULL")]
		public short idTipoCaracteristicasPanoramicas
		{
			get
			{
				return this._idTipoCaracteristicasPanoramicas;
			}
			set
			{
				if ((this._idTipoCaracteristicasPanoramicas != value))
				{
					this.OnidTipoCaracteristicasPanoramicasChanging(value);
					this.SendPropertyChanging();
					this._idTipoCaracteristicasPanoramicas = value;
					this.SendPropertyChanged("idTipoCaracteristicasPanoramicas");
					this.OnidTipoCaracteristicasPanoramicasChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoUsoSuelo", DbType="SmallInt NOT NULL")]
		public short idTipoUsoSuelo
		{
			get
			{
				return this._idTipoUsoSuelo;
			}
			set
			{
				if ((this._idTipoUsoSuelo != value))
				{
					this.OnidTipoUsoSueloChanging(value);
					this.SendPropertyChanging();
					this._idTipoUsoSuelo = value;
					this.SendPropertyChanged("idTipoUsoSuelo");
					this.OnidTipoUsoSueloChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoServidumbre", DbType="SmallInt NOT NULL")]
		public short idTipoServidumbre
		{
			get
			{
				return this._idTipoServidumbre;
			}
			set
			{
				if ((this._idTipoServidumbre != value))
				{
					this.OnidTipoServidumbreChanging(value);
					this.SendPropertyChanging();
					this._idTipoServidumbre = value;
					this.SendPropertyChanged("idTipoServidumbre");
					this.OnidTipoServidumbreChanged();
				}
			}
		}
		
		[Column(Storage="_idFuenteMedida", DbType="SmallInt NOT NULL")]
		public short idFuenteMedida
		{
			get
			{
				return this._idFuenteMedida;
			}
			set
			{
				if ((this._idFuenteMedida != value))
				{
					this.OnidFuenteMedidaChanging(value);
					this.SendPropertyChanging();
					this._idFuenteMedida = value;
					this.SendPropertyChanged("idFuenteMedida");
					this.OnidFuenteMedidaChanged();
				}
			}
		}
		
		[Column(Storage="_otraFuente", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string otraFuente
		{
			get
			{
				return this._otraFuente;
			}
			set
			{
				if ((this._otraFuente != value))
				{
					this.OnotraFuenteChanging(value);
					this.SendPropertyChanging();
					this._otraFuente = value;
					this.SendPropertyChanged("otraFuente");
					this.OnotraFuenteChanged();
				}
			}
		}
		
		[Column(Storage="_configuracionRegular", DbType="Bit NOT NULL")]
		public bool configuracionRegular
		{
			get
			{
				return this._configuracionRegular;
			}
			set
			{
				if ((this._configuracionRegular != value))
				{
					this.OnconfiguracionRegularChanging(value);
					this.SendPropertyChanging();
					this._configuracionRegular = value;
					this.SendPropertyChanged("configuracionRegular");
					this.OnconfiguracionRegularChanged();
				}
			}
		}
		
		[Column(Storage="_densidadHabitantes", DbType="Float NOT NULL")]
		public double densidadHabitantes
		{
			get
			{
				return this._densidadHabitantes;
			}
			set
			{
				if ((this._densidadHabitantes != value))
				{
					this.OndensidadHabitantesChanging(value);
					this.SendPropertyChanging();
					this._densidadHabitantes = value;
					this.SendPropertyChanged("densidadHabitantes");
					this.OndensidadHabitantesChanged();
				}
			}
		}
		
		[Column(Storage="_densidadViviendas", DbType="Float NOT NULL")]
		public double densidadViviendas
		{
			get
			{
				return this._densidadViviendas;
			}
			set
			{
				if ((this._densidadViviendas != value))
				{
					this.OndensidadViviendasChanging(value);
					this.SendPropertyChanging();
					this._densidadViviendas = value;
					this.SendPropertyChanged("densidadViviendas");
					this.OndensidadViviendasChanged();
				}
			}
		}
		
		[Column(Storage="_frentes", DbType="SmallInt NOT NULL")]
		public short frentes
		{
			get
			{
				return this._frentes;
			}
			set
			{
				if ((this._frentes != value))
				{
					this.OnfrentesChanging(value);
					this.SendPropertyChanging();
					this._frentes = value;
					this.SendPropertyChanged("frentes");
					this.OnfrentesChanged();
				}
			}
		}
		
		[Column(Storage="_lados", DbType="SmallInt NOT NULL")]
		public short lados
		{
			get
			{
				return this._lados;
			}
			set
			{
				if ((this._lados != value))
				{
					this.OnladosChanging(value);
					this.SendPropertyChanging();
					this._lados = value;
					this.SendPropertyChanged("lados");
					this.OnladosChanged();
				}
			}
		}
		
		[Column(Storage="_descripcionColindancias", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string descripcionColindancias
		{
			get
			{
				return this._descripcionColindancias;
			}
			set
			{
				if ((this._descripcionColindancias != value))
				{
					this.OndescripcionColindanciasChanging(value);
					this.SendPropertyChanging();
					this._descripcionColindancias = value;
					this.SendPropertyChanged("descripcionColindancias");
					this.OndescripcionColindanciasChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_UbicacionInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.UbicacionInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.UbicacionInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Universidad")]
	public partial class Universidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idUniversidad;
		
		private string _nombreUniversidad;
		
		private bool _tienePosgrados;
		
		private EntitySet<FormacionProfesional> _FormacionProfesional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUniversidadChanging(short value);
    partial void OnidUniversidadChanged();
    partial void OnnombreUniversidadChanging(string value);
    partial void OnnombreUniversidadChanged();
    partial void OntienePosgradosChanging(bool value);
    partial void OntienePosgradosChanged();
    #endregion
		
		public Universidad()
		{
			this._FormacionProfesional = new EntitySet<FormacionProfesional>(new Action<FormacionProfesional>(this.attach_FormacionProfesional), new Action<FormacionProfesional>(this.detach_FormacionProfesional));
			OnCreated();
		}
		
		[Column(Storage="_idUniversidad", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idUniversidad
		{
			get
			{
				return this._idUniversidad;
			}
			set
			{
				if ((this._idUniversidad != value))
				{
					this.OnidUniversidadChanging(value);
					this.SendPropertyChanging();
					this._idUniversidad = value;
					this.SendPropertyChanged("idUniversidad");
					this.OnidUniversidadChanged();
				}
			}
		}
		
		[Column(Storage="_nombreUniversidad", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string nombreUniversidad
		{
			get
			{
				return this._nombreUniversidad;
			}
			set
			{
				if ((this._nombreUniversidad != value))
				{
					this.OnnombreUniversidadChanging(value);
					this.SendPropertyChanging();
					this._nombreUniversidad = value;
					this.SendPropertyChanged("nombreUniversidad");
					this.OnnombreUniversidadChanged();
				}
			}
		}
		
		[Column(Storage="_tienePosgrados", DbType="Bit NOT NULL")]
		public bool tienePosgrados
		{
			get
			{
				return this._tienePosgrados;
			}
			set
			{
				if ((this._tienePosgrados != value))
				{
					this.OntienePosgradosChanging(value);
					this.SendPropertyChanging();
					this._tienePosgrados = value;
					this.SendPropertyChanged("tienePosgrados");
					this.OntienePosgradosChanged();
				}
			}
		}
		
		[Association(Name="Universidad_FormacionProfesional", Storage="_FormacionProfesional", ThisKey="idUniversidad", OtherKey="idUniversidad")]
		public EntitySet<FormacionProfesional> FormacionProfesional
		{
			get
			{
				return this._FormacionProfesional;
			}
			set
			{
				this._FormacionProfesional.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FormacionProfesional(FormacionProfesional entity)
		{
			this.SendPropertyChanging();
			entity.Universidad = this;
		}
		
		private void detach_FormacionProfesional(FormacionProfesional entity)
		{
			this.SendPropertyChanging();
			entity.Universidad = null;
		}
	}
	
	[Table(Name="dbo.UsoActualArea")]
	public partial class UsoActualArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsoActual;
		
		private short _planta;
		
		private bool _cuartoServicio;
		
		private bool _cuartoLavado;
		
		private System.Nullable<bool> _areaServicio;
		
		private System.Nullable<bool> _vestibuloIngreso;
		
		private System.Nullable<bool> _escaleraPrincipal;
		
		private System.Nullable<bool> _sala;
		
		private bool _escaleraServicio;
		
		private EntityRef<UsoActualInmueble> _UsoActualInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsoActualChanging(int value);
    partial void OnidUsoActualChanged();
    partial void OnplantaChanging(short value);
    partial void OnplantaChanged();
    partial void OncuartoServicioChanging(bool value);
    partial void OncuartoServicioChanged();
    partial void OncuartoLavadoChanging(bool value);
    partial void OncuartoLavadoChanged();
    partial void OnareaServicioChanging(System.Nullable<bool> value);
    partial void OnareaServicioChanged();
    partial void OnvestibuloIngresoChanging(System.Nullable<bool> value);
    partial void OnvestibuloIngresoChanged();
    partial void OnescaleraPrincipalChanging(System.Nullable<bool> value);
    partial void OnescaleraPrincipalChanged();
    partial void OnsalaChanging(System.Nullable<bool> value);
    partial void OnsalaChanged();
    partial void OnescaleraServicioChanging(bool value);
    partial void OnescaleraServicioChanged();
    #endregion
		
		public UsoActualArea()
		{
			this._UsoActualInmueble = default(EntityRef<UsoActualInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idUsoActual", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsoActual
		{
			get
			{
				return this._idUsoActual;
			}
			set
			{
				if ((this._idUsoActual != value))
				{
					if (this._UsoActualInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsoActualChanging(value);
					this.SendPropertyChanging();
					this._idUsoActual = value;
					this.SendPropertyChanged("idUsoActual");
					this.OnidUsoActualChanged();
				}
			}
		}
		
		[Column(Storage="_planta", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short planta
		{
			get
			{
				return this._planta;
			}
			set
			{
				if ((this._planta != value))
				{
					this.OnplantaChanging(value);
					this.SendPropertyChanging();
					this._planta = value;
					this.SendPropertyChanged("planta");
					this.OnplantaChanged();
				}
			}
		}
		
		[Column(Storage="_cuartoServicio", DbType="Bit NOT NULL")]
		public bool cuartoServicio
		{
			get
			{
				return this._cuartoServicio;
			}
			set
			{
				if ((this._cuartoServicio != value))
				{
					this.OncuartoServicioChanging(value);
					this.SendPropertyChanging();
					this._cuartoServicio = value;
					this.SendPropertyChanged("cuartoServicio");
					this.OncuartoServicioChanged();
				}
			}
		}
		
		[Column(Storage="_cuartoLavado", DbType="Bit NOT NULL")]
		public bool cuartoLavado
		{
			get
			{
				return this._cuartoLavado;
			}
			set
			{
				if ((this._cuartoLavado != value))
				{
					this.OncuartoLavadoChanging(value);
					this.SendPropertyChanging();
					this._cuartoLavado = value;
					this.SendPropertyChanged("cuartoLavado");
					this.OncuartoLavadoChanged();
				}
			}
		}
		
		[Column(Storage="_areaServicio", DbType="Bit")]
		public System.Nullable<bool> areaServicio
		{
			get
			{
				return this._areaServicio;
			}
			set
			{
				if ((this._areaServicio != value))
				{
					this.OnareaServicioChanging(value);
					this.SendPropertyChanging();
					this._areaServicio = value;
					this.SendPropertyChanged("areaServicio");
					this.OnareaServicioChanged();
				}
			}
		}
		
		[Column(Storage="_vestibuloIngreso", DbType="Bit")]
		public System.Nullable<bool> vestibuloIngreso
		{
			get
			{
				return this._vestibuloIngreso;
			}
			set
			{
				if ((this._vestibuloIngreso != value))
				{
					this.OnvestibuloIngresoChanging(value);
					this.SendPropertyChanging();
					this._vestibuloIngreso = value;
					this.SendPropertyChanged("vestibuloIngreso");
					this.OnvestibuloIngresoChanged();
				}
			}
		}
		
		[Column(Storage="_escaleraPrincipal", DbType="Bit")]
		public System.Nullable<bool> escaleraPrincipal
		{
			get
			{
				return this._escaleraPrincipal;
			}
			set
			{
				if ((this._escaleraPrincipal != value))
				{
					this.OnescaleraPrincipalChanging(value);
					this.SendPropertyChanging();
					this._escaleraPrincipal = value;
					this.SendPropertyChanged("escaleraPrincipal");
					this.OnescaleraPrincipalChanged();
				}
			}
		}
		
		[Column(Storage="_sala", DbType="Bit")]
		public System.Nullable<bool> sala
		{
			get
			{
				return this._sala;
			}
			set
			{
				if ((this._sala != value))
				{
					this.OnsalaChanging(value);
					this.SendPropertyChanging();
					this._sala = value;
					this.SendPropertyChanged("sala");
					this.OnsalaChanged();
				}
			}
		}
		
		[Column(Storage="_escaleraServicio", DbType="Bit")]
		public bool escaleraServicio
		{
			get
			{
				return this._escaleraServicio;
			}
			set
			{
				if ((this._escaleraServicio != value))
				{
					this.OnescaleraServicioChanging(value);
					this.SendPropertyChanging();
					this._escaleraServicio = value;
					this.SendPropertyChanged("escaleraServicio");
					this.OnescaleraServicioChanged();
				}
			}
		}
		
		[Association(Name="UsoActualInmueble_UsoActualArea", Storage="_UsoActualInmueble", ThisKey="idUsoActual", OtherKey="idUsoActual", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UsoActualInmueble UsoActualInmueble
		{
			get
			{
				return this._UsoActualInmueble.Entity;
			}
			set
			{
				UsoActualInmueble previousValue = this._UsoActualInmueble.Entity;
				if (((previousValue != value) 
							|| (this._UsoActualInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsoActualInmueble.Entity = null;
						previousValue.UsoActualArea.Remove(this);
					}
					this._UsoActualInmueble.Entity = value;
					if ((value != null))
					{
						value.UsoActualArea.Add(this);
						this._idUsoActual = value.idUsoActual;
					}
					else
					{
						this._idUsoActual = default(int);
					}
					this.SendPropertyChanged("UsoActualInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UsoActualInmueble")]
	public partial class UsoActualInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsoActual;
		
		private int _idInmueble;
		
		private short _idTipoEstacionamiento;
		
		private System.Nullable<short> _cupoEstacionamiento;
		
		private bool _jardinesFrontales;
		
		private bool _jardinesFondo;
		
		private bool _jardinesLateral;
		
		private bool _elevador;
		
		private bool _cocina;
		
		private bool _cocinaMuebles;
		
		private bool _cocinaIntegral;
		
		private bool _comedor;
		
		private bool _despensa;
		
		private short _numBaniosCompletos;
		
		private short _numBaniosMedios;
		
		private EntitySet<UsoActualArea> _UsoActualArea;
		
		private EntitySet<UsoActualRecamara> _UsoActualRecamara;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsoActualChanging(int value);
    partial void OnidUsoActualChanged();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidTipoEstacionamientoChanging(short value);
    partial void OnidTipoEstacionamientoChanged();
    partial void OncupoEstacionamientoChanging(System.Nullable<short> value);
    partial void OncupoEstacionamientoChanged();
    partial void OnjardinesFrontalesChanging(bool value);
    partial void OnjardinesFrontalesChanged();
    partial void OnjardinesFondoChanging(bool value);
    partial void OnjardinesFondoChanged();
    partial void OnjardinesLateralChanging(bool value);
    partial void OnjardinesLateralChanged();
    partial void OnelevadorChanging(bool value);
    partial void OnelevadorChanged();
    partial void OncocinaChanging(bool value);
    partial void OncocinaChanged();
    partial void OncocinaMueblesChanging(bool value);
    partial void OncocinaMueblesChanged();
    partial void OncocinaIntegralChanging(bool value);
    partial void OncocinaIntegralChanged();
    partial void OncomedorChanging(bool value);
    partial void OncomedorChanged();
    partial void OndespensaChanging(bool value);
    partial void OndespensaChanged();
    partial void OnnumBaniosCompletosChanging(short value);
    partial void OnnumBaniosCompletosChanged();
    partial void OnnumBaniosMediosChanging(short value);
    partial void OnnumBaniosMediosChanged();
    #endregion
		
		public UsoActualInmueble()
		{
			this._UsoActualArea = new EntitySet<UsoActualArea>(new Action<UsoActualArea>(this.attach_UsoActualArea), new Action<UsoActualArea>(this.detach_UsoActualArea));
			this._UsoActualRecamara = new EntitySet<UsoActualRecamara>(new Action<UsoActualRecamara>(this.attach_UsoActualRecamara), new Action<UsoActualRecamara>(this.detach_UsoActualRecamara));
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idUsoActual", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsoActual
		{
			get
			{
				return this._idUsoActual;
			}
			set
			{
				if ((this._idUsoActual != value))
				{
					this.OnidUsoActualChanging(value);
					this.SendPropertyChanging();
					this._idUsoActual = value;
					this.SendPropertyChanged("idUsoActual");
					this.OnidUsoActualChanged();
				}
			}
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL")]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoEstacionamiento", DbType="SmallInt NOT NULL")]
		public short idTipoEstacionamiento
		{
			get
			{
				return this._idTipoEstacionamiento;
			}
			set
			{
				if ((this._idTipoEstacionamiento != value))
				{
					this.OnidTipoEstacionamientoChanging(value);
					this.SendPropertyChanging();
					this._idTipoEstacionamiento = value;
					this.SendPropertyChanged("idTipoEstacionamiento");
					this.OnidTipoEstacionamientoChanged();
				}
			}
		}
		
		[Column(Storage="_cupoEstacionamiento", DbType="SmallInt")]
		public System.Nullable<short> cupoEstacionamiento
		{
			get
			{
				return this._cupoEstacionamiento;
			}
			set
			{
				if ((this._cupoEstacionamiento != value))
				{
					this.OncupoEstacionamientoChanging(value);
					this.SendPropertyChanging();
					this._cupoEstacionamiento = value;
					this.SendPropertyChanged("cupoEstacionamiento");
					this.OncupoEstacionamientoChanged();
				}
			}
		}
		
		[Column(Storage="_jardinesFrontales", DbType="Bit NOT NULL")]
		public bool jardinesFrontales
		{
			get
			{
				return this._jardinesFrontales;
			}
			set
			{
				if ((this._jardinesFrontales != value))
				{
					this.OnjardinesFrontalesChanging(value);
					this.SendPropertyChanging();
					this._jardinesFrontales = value;
					this.SendPropertyChanged("jardinesFrontales");
					this.OnjardinesFrontalesChanged();
				}
			}
		}
		
		[Column(Storage="_jardinesFondo", DbType="Bit NOT NULL")]
		public bool jardinesFondo
		{
			get
			{
				return this._jardinesFondo;
			}
			set
			{
				if ((this._jardinesFondo != value))
				{
					this.OnjardinesFondoChanging(value);
					this.SendPropertyChanging();
					this._jardinesFondo = value;
					this.SendPropertyChanged("jardinesFondo");
					this.OnjardinesFondoChanged();
				}
			}
		}
		
		[Column(Storage="_jardinesLateral", DbType="Bit NOT NULL")]
		public bool jardinesLateral
		{
			get
			{
				return this._jardinesLateral;
			}
			set
			{
				if ((this._jardinesLateral != value))
				{
					this.OnjardinesLateralChanging(value);
					this.SendPropertyChanging();
					this._jardinesLateral = value;
					this.SendPropertyChanged("jardinesLateral");
					this.OnjardinesLateralChanged();
				}
			}
		}
		
		[Column(Storage="_elevador", DbType="Bit NOT NULL")]
		public bool elevador
		{
			get
			{
				return this._elevador;
			}
			set
			{
				if ((this._elevador != value))
				{
					this.OnelevadorChanging(value);
					this.SendPropertyChanging();
					this._elevador = value;
					this.SendPropertyChanged("elevador");
					this.OnelevadorChanged();
				}
			}
		}
		
		[Column(Storage="_cocina", DbType="Bit NOT NULL")]
		public bool cocina
		{
			get
			{
				return this._cocina;
			}
			set
			{
				if ((this._cocina != value))
				{
					this.OncocinaChanging(value);
					this.SendPropertyChanging();
					this._cocina = value;
					this.SendPropertyChanged("cocina");
					this.OncocinaChanged();
				}
			}
		}
		
		[Column(Storage="_cocinaMuebles", DbType="Bit NOT NULL")]
		public bool cocinaMuebles
		{
			get
			{
				return this._cocinaMuebles;
			}
			set
			{
				if ((this._cocinaMuebles != value))
				{
					this.OncocinaMueblesChanging(value);
					this.SendPropertyChanging();
					this._cocinaMuebles = value;
					this.SendPropertyChanged("cocinaMuebles");
					this.OncocinaMueblesChanged();
				}
			}
		}
		
		[Column(Storage="_cocinaIntegral", DbType="Bit NOT NULL")]
		public bool cocinaIntegral
		{
			get
			{
				return this._cocinaIntegral;
			}
			set
			{
				if ((this._cocinaIntegral != value))
				{
					this.OncocinaIntegralChanging(value);
					this.SendPropertyChanging();
					this._cocinaIntegral = value;
					this.SendPropertyChanged("cocinaIntegral");
					this.OncocinaIntegralChanged();
				}
			}
		}
		
		[Column(Storage="_comedor", DbType="Bit NOT NULL")]
		public bool comedor
		{
			get
			{
				return this._comedor;
			}
			set
			{
				if ((this._comedor != value))
				{
					this.OncomedorChanging(value);
					this.SendPropertyChanging();
					this._comedor = value;
					this.SendPropertyChanged("comedor");
					this.OncomedorChanged();
				}
			}
		}
		
		[Column(Storage="_despensa", DbType="Bit NOT NULL")]
		public bool despensa
		{
			get
			{
				return this._despensa;
			}
			set
			{
				if ((this._despensa != value))
				{
					this.OndespensaChanging(value);
					this.SendPropertyChanging();
					this._despensa = value;
					this.SendPropertyChanged("despensa");
					this.OndespensaChanged();
				}
			}
		}
		
		[Column(Storage="_numBaniosCompletos", DbType="SmallInt NOT NULL")]
		public short numBaniosCompletos
		{
			get
			{
				return this._numBaniosCompletos;
			}
			set
			{
				if ((this._numBaniosCompletos != value))
				{
					this.OnnumBaniosCompletosChanging(value);
					this.SendPropertyChanging();
					this._numBaniosCompletos = value;
					this.SendPropertyChanged("numBaniosCompletos");
					this.OnnumBaniosCompletosChanged();
				}
			}
		}
		
		[Column(Storage="_numBaniosMedios", DbType="SmallInt NOT NULL")]
		public short numBaniosMedios
		{
			get
			{
				return this._numBaniosMedios;
			}
			set
			{
				if ((this._numBaniosMedios != value))
				{
					this.OnnumBaniosMediosChanging(value);
					this.SendPropertyChanging();
					this._numBaniosMedios = value;
					this.SendPropertyChanged("numBaniosMedios");
					this.OnnumBaniosMediosChanged();
				}
			}
		}
		
		[Association(Name="UsoActualInmueble_UsoActualArea", Storage="_UsoActualArea", ThisKey="idUsoActual", OtherKey="idUsoActual")]
		public EntitySet<UsoActualArea> UsoActualArea
		{
			get
			{
				return this._UsoActualArea;
			}
			set
			{
				this._UsoActualArea.Assign(value);
			}
		}
		
		[Association(Name="UsoActualInmueble_UsoActualRecamara", Storage="_UsoActualRecamara", ThisKey="idUsoActual", OtherKey="idUsoActual")]
		public EntitySet<UsoActualRecamara> UsoActualRecamara
		{
			get
			{
				return this._UsoActualRecamara;
			}
			set
			{
				this._UsoActualRecamara.Assign(value);
			}
		}
		
		[Association(Name="Inmueble_UsoActualInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.UsoActualInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.UsoActualInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UsoActualArea(UsoActualArea entity)
		{
			this.SendPropertyChanging();
			entity.UsoActualInmueble = this;
		}
		
		private void detach_UsoActualArea(UsoActualArea entity)
		{
			this.SendPropertyChanging();
			entity.UsoActualInmueble = null;
		}
		
		private void attach_UsoActualRecamara(UsoActualRecamara entity)
		{
			this.SendPropertyChanging();
			entity.UsoActualInmueble = this;
		}
		
		private void detach_UsoActualRecamara(UsoActualRecamara entity)
		{
			this.SendPropertyChanging();
			entity.UsoActualInmueble = null;
		}
	}
	
	[Table(Name="dbo.UsoActualRecamara")]
	public partial class UsoActualRecamara : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idUsoRecamara;
		
		private int _idUsoActual;
		
		private short _cantidad;
		
		private short _planta;
		
		private bool _espacioCloset;
		
		private bool _closetEquipado;
		
		private bool _balcon;
		
		private bool _vestidor;
		
		private bool _terraza;
		
		private EntityRef<UsoActualInmueble> _UsoActualInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsoRecamaraChanging(short value);
    partial void OnidUsoRecamaraChanged();
    partial void OnidUsoActualChanging(int value);
    partial void OnidUsoActualChanged();
    partial void OncantidadChanging(short value);
    partial void OncantidadChanged();
    partial void OnplantaChanging(short value);
    partial void OnplantaChanged();
    partial void OnespacioClosetChanging(bool value);
    partial void OnespacioClosetChanged();
    partial void OnclosetEquipadoChanging(bool value);
    partial void OnclosetEquipadoChanged();
    partial void OnbalconChanging(bool value);
    partial void OnbalconChanged();
    partial void OnvestidorChanging(bool value);
    partial void OnvestidorChanged();
    partial void OnterrazaChanging(bool value);
    partial void OnterrazaChanged();
    #endregion
		
		public UsoActualRecamara()
		{
			this._UsoActualInmueble = default(EntityRef<UsoActualInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idUsoRecamara", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idUsoRecamara
		{
			get
			{
				return this._idUsoRecamara;
			}
			set
			{
				if ((this._idUsoRecamara != value))
				{
					this.OnidUsoRecamaraChanging(value);
					this.SendPropertyChanging();
					this._idUsoRecamara = value;
					this.SendPropertyChanged("idUsoRecamara");
					this.OnidUsoRecamaraChanged();
				}
			}
		}
		
		[Column(Storage="_idUsoActual", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsoActual
		{
			get
			{
				return this._idUsoActual;
			}
			set
			{
				if ((this._idUsoActual != value))
				{
					if (this._UsoActualInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsoActualChanging(value);
					this.SendPropertyChanging();
					this._idUsoActual = value;
					this.SendPropertyChanged("idUsoActual");
					this.OnidUsoActualChanged();
				}
			}
		}
		
		[Column(Storage="_cantidad", DbType="SmallInt NOT NULL")]
		public short cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[Column(Storage="_planta", DbType="SmallInt NOT NULL")]
		public short planta
		{
			get
			{
				return this._planta;
			}
			set
			{
				if ((this._planta != value))
				{
					this.OnplantaChanging(value);
					this.SendPropertyChanging();
					this._planta = value;
					this.SendPropertyChanged("planta");
					this.OnplantaChanged();
				}
			}
		}
		
		[Column(Storage="_espacioCloset", DbType="Bit NOT NULL")]
		public bool espacioCloset
		{
			get
			{
				return this._espacioCloset;
			}
			set
			{
				if ((this._espacioCloset != value))
				{
					this.OnespacioClosetChanging(value);
					this.SendPropertyChanging();
					this._espacioCloset = value;
					this.SendPropertyChanged("espacioCloset");
					this.OnespacioClosetChanged();
				}
			}
		}
		
		[Column(Storage="_closetEquipado", DbType="Bit NOT NULL")]
		public bool closetEquipado
		{
			get
			{
				return this._closetEquipado;
			}
			set
			{
				if ((this._closetEquipado != value))
				{
					this.OnclosetEquipadoChanging(value);
					this.SendPropertyChanging();
					this._closetEquipado = value;
					this.SendPropertyChanged("closetEquipado");
					this.OnclosetEquipadoChanged();
				}
			}
		}
		
		[Column(Storage="_balcon", DbType="Bit NOT NULL")]
		public bool balcon
		{
			get
			{
				return this._balcon;
			}
			set
			{
				if ((this._balcon != value))
				{
					this.OnbalconChanging(value);
					this.SendPropertyChanging();
					this._balcon = value;
					this.SendPropertyChanged("balcon");
					this.OnbalconChanged();
				}
			}
		}
		
		[Column(Storage="_vestidor", DbType="Bit NOT NULL")]
		public bool vestidor
		{
			get
			{
				return this._vestidor;
			}
			set
			{
				if ((this._vestidor != value))
				{
					this.OnvestidorChanging(value);
					this.SendPropertyChanging();
					this._vestidor = value;
					this.SendPropertyChanged("vestidor");
					this.OnvestidorChanged();
				}
			}
		}
		
		[Column(Storage="_terraza", DbType="Bit NOT NULL")]
		public bool terraza
		{
			get
			{
				return this._terraza;
			}
			set
			{
				if ((this._terraza != value))
				{
					this.OnterrazaChanging(value);
					this.SendPropertyChanging();
					this._terraza = value;
					this.SendPropertyChanged("terraza");
					this.OnterrazaChanged();
				}
			}
		}
		
		[Association(Name="UsoActualInmueble_UsoActualRecamara", Storage="_UsoActualInmueble", ThisKey="idUsoActual", OtherKey="idUsoActual", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public UsoActualInmueble UsoActualInmueble
		{
			get
			{
				return this._UsoActualInmueble.Entity;
			}
			set
			{
				UsoActualInmueble previousValue = this._UsoActualInmueble.Entity;
				if (((previousValue != value) 
							|| (this._UsoActualInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsoActualInmueble.Entity = null;
						previousValue.UsoActualRecamara.Remove(this);
					}
					this._UsoActualInmueble.Entity = value;
					if ((value != null))
					{
						value.UsoActualRecamara.Add(this);
						this._idUsoActual = value.idUsoActual;
					}
					else
					{
						this._idUsoActual = default(int);
					}
					this.SendPropertyChanged("UsoActualInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private string _nombreUsuario;
		
		private string _password;
		
		private System.DateTime _fechaCreacion;
		
		private System.DateTime _fechaUltimaSesion;
		
		private string _email;
		
		private bool _online;
		
		private bool _activo;
		
		private EntitySet<Personal> _Personal;
		
		private EntitySet<RolUsuario> _RolUsuario;
		
		private EntitySet<UsuarioCliente> _UsuarioCliente;
		
		private EntitySet<UsuarioValuador> _UsuarioValuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnnombreUsuarioChanging(string value);
    partial void OnnombreUsuarioChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfechaCreacionChanging(System.DateTime value);
    partial void OnfechaCreacionChanged();
    partial void OnfechaUltimaSesionChanging(System.DateTime value);
    partial void OnfechaUltimaSesionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnonlineChanging(bool value);
    partial void OnonlineChanged();
    partial void OnactivoChanging(bool value);
    partial void OnactivoChanged();
    #endregion
		
		public Usuario()
		{
			this._Personal = new EntitySet<Personal>(new Action<Personal>(this.attach_Personal), new Action<Personal>(this.detach_Personal));
			this._RolUsuario = new EntitySet<RolUsuario>(new Action<RolUsuario>(this.attach_RolUsuario), new Action<RolUsuario>(this.detach_RolUsuario));
			this._UsuarioCliente = new EntitySet<UsuarioCliente>(new Action<UsuarioCliente>(this.attach_UsuarioCliente), new Action<UsuarioCliente>(this.detach_UsuarioCliente));
			this._UsuarioValuador = new EntitySet<UsuarioValuador>(new Action<UsuarioValuador>(this.attach_UsuarioValuador), new Action<UsuarioValuador>(this.detach_UsuarioValuador));
			OnCreated();
		}
		
		[Column(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_nombreUsuario", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string nombreUsuario
		{
			get
			{
				return this._nombreUsuario;
			}
			set
			{
				if ((this._nombreUsuario != value))
				{
					this.OnnombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._nombreUsuario = value;
					this.SendPropertyChanged("nombreUsuario");
					this.OnnombreUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[Column(Storage="_fechaUltimaSesion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaUltimaSesion
		{
			get
			{
				return this._fechaUltimaSesion;
			}
			set
			{
				if ((this._fechaUltimaSesion != value))
				{
					this.OnfechaUltimaSesionChanging(value);
					this.SendPropertyChanging();
					this._fechaUltimaSesion = value;
					this.SendPropertyChanged("fechaUltimaSesion");
					this.OnfechaUltimaSesionChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_online", DbType="Bit NOT NULL")]
		public bool online
		{
			get
			{
				return this._online;
			}
			set
			{
				if ((this._online != value))
				{
					this.OnonlineChanging(value);
					this.SendPropertyChanging();
					this._online = value;
					this.SendPropertyChanged("online");
					this.OnonlineChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit NOT NULL")]
		public bool activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Association(Name="Usuario_Personal", Storage="_Personal", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<Personal> Personal
		{
			get
			{
				return this._Personal;
			}
			set
			{
				this._Personal.Assign(value);
			}
		}
		
		[Association(Name="Usuario_RolUsuario", Storage="_RolUsuario", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<RolUsuario> RolUsuario
		{
			get
			{
				return this._RolUsuario;
			}
			set
			{
				this._RolUsuario.Assign(value);
			}
		}
		
		[Association(Name="Usuario_UsuarioCliente", Storage="_UsuarioCliente", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<UsuarioCliente> UsuarioCliente
		{
			get
			{
				return this._UsuarioCliente;
			}
			set
			{
				this._UsuarioCliente.Assign(value);
			}
		}
		
		[Association(Name="Usuario_UsuarioValuador", Storage="_UsuarioValuador", ThisKey="idUsuario", OtherKey="idUsuario")]
		public EntitySet<UsuarioValuador> UsuarioValuador
		{
			get
			{
				return this._UsuarioValuador;
			}
			set
			{
				this._UsuarioValuador.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personal(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Personal(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_RolUsuario(RolUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_RolUsuario(RolUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_UsuarioCliente(UsuarioCliente entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioCliente(UsuarioCliente entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
		
		private void attach_UsuarioValuador(UsuarioValuador entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_UsuarioValuador(UsuarioValuador entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
	
	[Table(Name="dbo.UsuarioCliente")]
	public partial class UsuarioCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private int _idCliente;
		
		private bool _master;
		
		private EntityRef<Cliente> _Cliente;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidClienteChanging(int value);
    partial void OnidClienteChanged();
    partial void OnmasterChanging(bool value);
    partial void OnmasterChanged();
    #endregion
		
		public UsuarioCliente()
		{
			this._Cliente = default(EntityRef<Cliente>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idCliente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCliente
		{
			get
			{
				return this._idCliente;
			}
			set
			{
				if ((this._idCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClienteChanging(value);
					this.SendPropertyChanging();
					this._idCliente = value;
					this.SendPropertyChanged("idCliente");
					this.OnidClienteChanged();
				}
			}
		}
		
		[Column(Storage="_master", DbType="Bit NOT NULL")]
		public bool master
		{
			get
			{
				return this._master;
			}
			set
			{
				if ((this._master != value))
				{
					this.OnmasterChanging(value);
					this.SendPropertyChanging();
					this._master = value;
					this.SendPropertyChanged("master");
					this.OnmasterChanged();
				}
			}
		}
		
		[Association(Name="Cliente_UsuarioCliente", Storage="_Cliente", ThisKey="idCliente", OtherKey="idCliente", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cliente Cliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.UsuarioCliente.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.UsuarioCliente.Add(this);
						this._idCliente = value.idCliente;
					}
					else
					{
						this._idCliente = default(int);
					}
					this.SendPropertyChanged("Cliente");
				}
			}
		}
		
		[Association(Name="Usuario_UsuarioCliente", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioCliente.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioCliente.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.UsuarioValuador")]
	public partial class UsuarioValuador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private int _idValuador;
		
		private bool _master;
		
		private EntityRef<Usuario> _Usuario;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnmasterChanging(bool value);
    partial void OnmasterChanged();
    #endregion
		
		public UsuarioValuador()
		{
			this._Usuario = default(EntityRef<Usuario>);
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idUsuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_master", DbType="Bit NOT NULL")]
		public bool master
		{
			get
			{
				return this._master;
			}
			set
			{
				if ((this._master != value))
				{
					this.OnmasterChanging(value);
					this.SendPropertyChanging();
					this._master = value;
					this.SendPropertyChanged("master");
					this.OnmasterChanged();
				}
			}
		}
		
		[Association(Name="Usuario_UsuarioValuador", Storage="_Usuario", ThisKey="idUsuario", OtherKey="idUsuario", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UsuarioValuador.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UsuarioValuador.Add(this);
						this._idUsuario = value.idUsuario;
					}
					else
					{
						this._idUsuario = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		[Association(Name="Valuador_UsuarioValuador", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.UsuarioValuador.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.UsuarioValuador.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ValorMaterial")]
	public partial class ValorMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idValorMaterial;
		
		private string _descripcion;
		
		private short _idTipoMaterial;
		
		private System.Nullable<short> _idClase;
		
		private EntityRef<ClaseInmueble> _ClaseInmueble;
		
		private EntityRef<TipoMaterial> _TipoMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidValorMaterialChanging(int value);
    partial void OnidValorMaterialChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidTipoMaterialChanging(short value);
    partial void OnidTipoMaterialChanged();
    partial void OnidClaseChanging(System.Nullable<short> value);
    partial void OnidClaseChanged();
    #endregion
		
		public ValorMaterial()
		{
			this._ClaseInmueble = default(EntityRef<ClaseInmueble>);
			this._TipoMaterial = default(EntityRef<TipoMaterial>);
			OnCreated();
		}
		
		[Column(Storage="_idValorMaterial", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idValorMaterial
		{
			get
			{
				return this._idValorMaterial;
			}
			set
			{
				if ((this._idValorMaterial != value))
				{
					this.OnidValorMaterialChanging(value);
					this.SendPropertyChanging();
					this._idValorMaterial = value;
					this.SendPropertyChanged("idValorMaterial");
					this.OnidValorMaterialChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoMaterial", DbType="SmallInt NOT NULL")]
		public short idTipoMaterial
		{
			get
			{
				return this._idTipoMaterial;
			}
			set
			{
				if ((this._idTipoMaterial != value))
				{
					if (this._TipoMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoMaterialChanging(value);
					this.SendPropertyChanging();
					this._idTipoMaterial = value;
					this.SendPropertyChanged("idTipoMaterial");
					this.OnidTipoMaterialChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt")]
		public System.Nullable<short> idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Association(Name="ClaseInmueble_ValorMaterial", Storage="_ClaseInmueble", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseInmueble ClaseInmueble
		{
			get
			{
				return this._ClaseInmueble.Entity;
			}
			set
			{
				ClaseInmueble previousValue = this._ClaseInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ClaseInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseInmueble.Entity = null;
						previousValue.ValorMaterial.Remove(this);
					}
					this._ClaseInmueble.Entity = value;
					if ((value != null))
					{
						value.ValorMaterial.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(Nullable<short>);
					}
					this.SendPropertyChanged("ClaseInmueble");
				}
			}
		}
		
		[Association(Name="TipoMaterial_ValorMaterial", Storage="_TipoMaterial", ThisKey="idTipoMaterial", OtherKey="idTipoMaterial", IsForeignKey=true)]
		public TipoMaterial TipoMaterial
		{
			get
			{
				return this._TipoMaterial.Entity;
			}
			set
			{
				TipoMaterial previousValue = this._TipoMaterial.Entity;
				if (((previousValue != value) 
							|| (this._TipoMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoMaterial.Entity = null;
						previousValue.ValorMaterial.Remove(this);
					}
					this._TipoMaterial.Entity = value;
					if ((value != null))
					{
						value.ValorMaterial.Add(this);
						this._idTipoMaterial = value.idTipoMaterial;
					}
					else
					{
						this._idTipoMaterial = default(short);
					}
					this.SendPropertyChanged("TipoMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ValorServicio")]
	public partial class ValorServicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idValorServicio;
		
		private string _descripcion;
		
		private short _idTipoServicio;
		
		private EntityRef<TipoServicio> _TipoServicio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidValorServicioChanging(int value);
    partial void OnidValorServicioChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidTipoServicioChanging(short value);
    partial void OnidTipoServicioChanged();
    #endregion
		
		public ValorServicio()
		{
			this._TipoServicio = default(EntityRef<TipoServicio>);
			OnCreated();
		}
		
		[Column(Storage="_idValorServicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idValorServicio
		{
			get
			{
				return this._idValorServicio;
			}
			set
			{
				if ((this._idValorServicio != value))
				{
					this.OnidValorServicioChanging(value);
					this.SendPropertyChanging();
					this._idValorServicio = value;
					this.SendPropertyChanged("idValorServicio");
					this.OnidValorServicioChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoServicio", DbType="SmallInt NOT NULL")]
		public short idTipoServicio
		{
			get
			{
				return this._idTipoServicio;
			}
			set
			{
				if ((this._idTipoServicio != value))
				{
					if (this._TipoServicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoServicioChanging(value);
					this.SendPropertyChanging();
					this._idTipoServicio = value;
					this.SendPropertyChanged("idTipoServicio");
					this.OnidTipoServicioChanged();
				}
			}
		}
		
		[Association(Name="TipoServicio_ValorServicio", Storage="_TipoServicio", ThisKey="idTipoServicio", OtherKey="idTipoServicio", IsForeignKey=true)]
		public TipoServicio TipoServicio
		{
			get
			{
				return this._TipoServicio.Entity;
			}
			set
			{
				TipoServicio previousValue = this._TipoServicio.Entity;
				if (((previousValue != value) 
							|| (this._TipoServicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoServicio.Entity = null;
						previousValue.ValorServicio.Remove(this);
					}
					this._TipoServicio.Entity = value;
					if ((value != null))
					{
						value.ValorServicio.Add(this);
						this._idTipoServicio = value.idTipoServicio;
					}
					else
					{
						this._idTipoServicio = default(short);
					}
					this.SendPropertyChanged("TipoServicio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ViasAcceso")]
	public partial class ViasAcceso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idViaAcceso;
		
		private int _idInmueble;
		
		private short _idImportanciaVia;
		
		private string _nombreVia;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidViaAccesoChanging(int value);
    partial void OnidViaAccesoChanged();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidImportanciaViaChanging(short value);
    partial void OnidImportanciaViaChanged();
    partial void OnnombreViaChanging(string value);
    partial void OnnombreViaChanged();
    #endregion
		
		public ViasAcceso()
		{
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idViaAcceso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idViaAcceso
		{
			get
			{
				return this._idViaAcceso;
			}
			set
			{
				if ((this._idViaAcceso != value))
				{
					this.OnidViaAccesoChanging(value);
					this.SendPropertyChanging();
					this._idViaAcceso = value;
					this.SendPropertyChanged("idViaAcceso");
					this.OnidViaAccesoChanged();
				}
			}
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idImportanciaVia", DbType="SmallInt NOT NULL")]
		public short idImportanciaVia
		{
			get
			{
				return this._idImportanciaVia;
			}
			set
			{
				if ((this._idImportanciaVia != value))
				{
					this.OnidImportanciaViaChanging(value);
					this.SendPropertyChanging();
					this._idImportanciaVia = value;
					this.SendPropertyChanged("idImportanciaVia");
					this.OnidImportanciaViaChanged();
				}
			}
		}
		
		[Column(Storage="_nombreVia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string nombreVia
		{
			get
			{
				return this._nombreVia;
			}
			set
			{
				if ((this._nombreVia != value))
				{
					this.OnnombreViaChanging(value);
					this.SendPropertyChanging();
					this._nombreVia = value;
					this.SendPropertyChanged("nombreVia");
					this.OnnombreViaChanged();
				}
			}
		}
		
		[Association(Name="Inmueble_ViasAcceso", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.ViasAcceso.Remove(this);
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.ViasAcceso.Add(this);
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ClaseComparable")]
	public partial class ClaseComparable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idClase;
		
		private string _descripcion;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidClaseChanging(short value);
    partial void OnidClaseChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public ClaseComparable()
		{
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idClase", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="ClaseComparable_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idClase", OtherKey="idClase")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.ClaseComparable = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.ClaseComparable = null;
		}
	}
	
	[Table(Name="dbo.CalidadProyecto")]
	public partial class CalidadProyecto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idCalidadProyecto;
		
		private string _descripcion;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCalidadProyectoChanging(short value);
    partial void OnidCalidadProyectoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public CalidadProyecto()
		{
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idCalidadProyecto", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idCalidadProyecto
		{
			get
			{
				return this._idCalidadProyecto;
			}
			set
			{
				if ((this._idCalidadProyecto != value))
				{
					this.OnidCalidadProyectoChanging(value);
					this.SendPropertyChanging();
					this._idCalidadProyecto = value;
					this.SendPropertyChanged("idCalidadProyecto");
					this.OnidCalidadProyectoChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="CalidadProyecto_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idCalidadProyecto", OtherKey="idCalidadProyecto")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.CalidadProyecto = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.CalidadProyecto = null;
		}
	}
	
	[Table(Name="dbo.ComparableInmobiliario")]
	public partial class ComparableInmobiliario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _idComparable;
		
		private short _idTipoComparable;
		
		private int _idValuador;
		
		private int _idDatoContacto;
		
		private string _nombre;
		
		private int _idDireccion;
		
		private decimal _valorOferta;
		
		private short _idUsoSuelo;
		
		private System.Nullable<int> _numeroFrentes;
		
		private double _superficieTerreno;
		
		private System.Nullable<double> _superficieConstruida;
		
		private short _idClase;
		
		private System.Nullable<double> _antiguedad;
		
		private short _idConservacion;
		
		private short _idCalidadProyecto;
		
		private System.Nullable<double> _avanceObra;
		
		private System.Nullable<System.DateTime> _fechaCreacion;
		
		private System.DateTime _fechaActualizacion;
		
		private bool _revisado;
		
		private System.Nullable<bool> _activo;
		
		private EntityRef<CalidadProyecto> _CalidadProyecto;
		
		private EntityRef<ClaseComparable> _ClaseComparable;
		
		private EntityRef<TipoComparable> _TipoComparable;
		
		private EntityRef<TipoComparable1> _TipoComparable1;
		
		private EntityRef<UsoSuelo> _UsoSuelo;
		
		private EntityRef<Direccion> _Direccion;
		
		private EntityRef<DatoContacto> _DatoContacto;
		
		private EntityRef<Valuador> _Valuador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComparableChanging(long value);
    partial void OnidComparableChanged();
    partial void OnidTipoComparableChanging(short value);
    partial void OnidTipoComparableChanged();
    partial void OnidValuadorChanging(int value);
    partial void OnidValuadorChanged();
    partial void OnidDatoContactoChanging(int value);
    partial void OnidDatoContactoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnidDireccionChanging(int value);
    partial void OnidDireccionChanged();
    partial void OnvalorOfertaChanging(decimal value);
    partial void OnvalorOfertaChanged();
    partial void OnidUsoSueloChanging(short value);
    partial void OnidUsoSueloChanged();
    partial void OnnumeroFrentesChanging(System.Nullable<int> value);
    partial void OnnumeroFrentesChanged();
    partial void OnsuperficieTerrenoChanging(double value);
    partial void OnsuperficieTerrenoChanged();
    partial void OnsuperficieConstruidaChanging(System.Nullable<double> value);
    partial void OnsuperficieConstruidaChanged();
    partial void OnidClaseChanging(short value);
    partial void OnidClaseChanged();
    partial void OnantiguedadChanging(System.Nullable<double> value);
    partial void OnantiguedadChanged();
    partial void OnidConservacionChanging(short value);
    partial void OnidConservacionChanged();
    partial void OnidCalidadProyectoChanging(short value);
    partial void OnidCalidadProyectoChanged();
    partial void OnavanceObraChanging(System.Nullable<double> value);
    partial void OnavanceObraChanged();
    partial void OnfechaCreacionChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaCreacionChanged();
    partial void OnfechaActualizacionChanging(System.DateTime value);
    partial void OnfechaActualizacionChanged();
    partial void OnrevisadoChanging(bool value);
    partial void OnrevisadoChanged();
    partial void OnactivoChanging(System.Nullable<bool> value);
    partial void OnactivoChanged();
    #endregion
		
		public ComparableInmobiliario()
		{
			this._CalidadProyecto = default(EntityRef<CalidadProyecto>);
			this._ClaseComparable = default(EntityRef<ClaseComparable>);
			this._TipoComparable = default(EntityRef<TipoComparable>);
			this._TipoComparable1 = default(EntityRef<TipoComparable1>);
			this._UsoSuelo = default(EntityRef<UsoSuelo>);
			this._Direccion = default(EntityRef<Direccion>);
			this._DatoContacto = default(EntityRef<DatoContacto>);
			this._Valuador = default(EntityRef<Valuador>);
			OnCreated();
		}
		
		[Column(Storage="_idComparable", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long idComparable
		{
			get
			{
				return this._idComparable;
			}
			set
			{
				if ((this._idComparable != value))
				{
					this.OnidComparableChanging(value);
					this.SendPropertyChanging();
					this._idComparable = value;
					this.SendPropertyChanged("idComparable");
					this.OnidComparableChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoComparable", DbType="SmallInt NOT NULL")]
		public short idTipoComparable
		{
			get
			{
				return this._idTipoComparable;
			}
			set
			{
				if ((this._idTipoComparable != value))
				{
					if (this._TipoComparable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoComparableChanging(value);
					this.SendPropertyChanging();
					this._idTipoComparable = value;
					this.SendPropertyChanged("idTipoComparable");
					this.OnidTipoComparableChanged();
				}
			}
		}
		
		[Column(Storage="_idValuador", DbType="Int NOT NULL")]
		public int idValuador
		{
			get
			{
				return this._idValuador;
			}
			set
			{
				if ((this._idValuador != value))
				{
					if (this._Valuador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidValuadorChanging(value);
					this.SendPropertyChanging();
					this._idValuador = value;
					this.SendPropertyChanged("idValuador");
					this.OnidValuadorChanged();
				}
			}
		}
		
		[Column(Storage="_idDatoContacto", DbType="Int NOT NULL")]
		public int idDatoContacto
		{
			get
			{
				return this._idDatoContacto;
			}
			set
			{
				if ((this._idDatoContacto != value))
				{
					if (this._DatoContacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDatoContactoChanging(value);
					this.SendPropertyChanging();
					this._idDatoContacto = value;
					this.SendPropertyChanged("idDatoContacto");
					this.OnidDatoContactoChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="NVarChar(30)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_idDireccion", DbType="Int NOT NULL")]
		public int idDireccion
		{
			get
			{
				return this._idDireccion;
			}
			set
			{
				if ((this._idDireccion != value))
				{
					if (this._Direccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidDireccionChanging(value);
					this.SendPropertyChanging();
					this._idDireccion = value;
					this.SendPropertyChanged("idDireccion");
					this.OnidDireccionChanged();
				}
			}
		}
		
		[Column(Storage="_valorOferta", DbType="Money NOT NULL")]
		public decimal valorOferta
		{
			get
			{
				return this._valorOferta;
			}
			set
			{
				if ((this._valorOferta != value))
				{
					this.OnvalorOfertaChanging(value);
					this.SendPropertyChanging();
					this._valorOferta = value;
					this.SendPropertyChanged("valorOferta");
					this.OnvalorOfertaChanged();
				}
			}
		}
		
		[Column(Storage="_idUsoSuelo", DbType="SmallInt NOT NULL")]
		public short idUsoSuelo
		{
			get
			{
				return this._idUsoSuelo;
			}
			set
			{
				if ((this._idUsoSuelo != value))
				{
					if (this._UsoSuelo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUsoSueloChanging(value);
					this.SendPropertyChanging();
					this._idUsoSuelo = value;
					this.SendPropertyChanged("idUsoSuelo");
					this.OnidUsoSueloChanged();
				}
			}
		}
		
		[Column(Storage="_numeroFrentes", DbType="Int")]
		public System.Nullable<int> numeroFrentes
		{
			get
			{
				return this._numeroFrentes;
			}
			set
			{
				if ((this._numeroFrentes != value))
				{
					this.OnnumeroFrentesChanging(value);
					this.SendPropertyChanging();
					this._numeroFrentes = value;
					this.SendPropertyChanged("numeroFrentes");
					this.OnnumeroFrentesChanged();
				}
			}
		}
		
		[Column(Storage="_superficieTerreno", DbType="Float NOT NULL")]
		public double superficieTerreno
		{
			get
			{
				return this._superficieTerreno;
			}
			set
			{
				if ((this._superficieTerreno != value))
				{
					this.OnsuperficieTerrenoChanging(value);
					this.SendPropertyChanging();
					this._superficieTerreno = value;
					this.SendPropertyChanged("superficieTerreno");
					this.OnsuperficieTerrenoChanged();
				}
			}
		}
		
		[Column(Storage="_superficieConstruida", DbType="Float")]
		public System.Nullable<double> superficieConstruida
		{
			get
			{
				return this._superficieConstruida;
			}
			set
			{
				if ((this._superficieConstruida != value))
				{
					this.OnsuperficieConstruidaChanging(value);
					this.SendPropertyChanging();
					this._superficieConstruida = value;
					this.SendPropertyChanged("superficieConstruida");
					this.OnsuperficieConstruidaChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt NOT NULL")]
		public short idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					if (this._ClaseComparable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Column(Storage="_antiguedad", DbType="Float")]
		public System.Nullable<double> antiguedad
		{
			get
			{
				return this._antiguedad;
			}
			set
			{
				if ((this._antiguedad != value))
				{
					this.OnantiguedadChanging(value);
					this.SendPropertyChanging();
					this._antiguedad = value;
					this.SendPropertyChanged("antiguedad");
					this.OnantiguedadChanged();
				}
			}
		}
		
		[Column(Storage="_idConservacion", DbType="SmallInt NOT NULL")]
		public short idConservacion
		{
			get
			{
				return this._idConservacion;
			}
			set
			{
				if ((this._idConservacion != value))
				{
					this.OnidConservacionChanging(value);
					this.SendPropertyChanging();
					this._idConservacion = value;
					this.SendPropertyChanged("idConservacion");
					this.OnidConservacionChanged();
				}
			}
		}
		
		[Column(Storage="_idCalidadProyecto", DbType="SmallInt NOT NULL")]
		public short idCalidadProyecto
		{
			get
			{
				return this._idCalidadProyecto;
			}
			set
			{
				if ((this._idCalidadProyecto != value))
				{
					if (this._CalidadProyecto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCalidadProyectoChanging(value);
					this.SendPropertyChanging();
					this._idCalidadProyecto = value;
					this.SendPropertyChanged("idCalidadProyecto");
					this.OnidCalidadProyectoChanged();
				}
			}
		}
		
		[Column(Storage="_avanceObra", DbType="Float")]
		public System.Nullable<double> avanceObra
		{
			get
			{
				return this._avanceObra;
			}
			set
			{
				if ((this._avanceObra != value))
				{
					this.OnavanceObraChanging(value);
					this.SendPropertyChanging();
					this._avanceObra = value;
					this.SendPropertyChanged("avanceObra");
					this.OnavanceObraChanged();
				}
			}
		}
		
		[Column(Storage="_fechaCreacion", DbType="DateTime")]
		public System.Nullable<System.DateTime> fechaCreacion
		{
			get
			{
				return this._fechaCreacion;
			}
			set
			{
				if ((this._fechaCreacion != value))
				{
					this.OnfechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._fechaCreacion = value;
					this.SendPropertyChanged("fechaCreacion");
					this.OnfechaCreacionChanged();
				}
			}
		}
		
		[Column(Storage="_fechaActualizacion", DbType="DateTime NOT NULL")]
		public System.DateTime fechaActualizacion
		{
			get
			{
				return this._fechaActualizacion;
			}
			set
			{
				if ((this._fechaActualizacion != value))
				{
					this.OnfechaActualizacionChanging(value);
					this.SendPropertyChanging();
					this._fechaActualizacion = value;
					this.SendPropertyChanged("fechaActualizacion");
					this.OnfechaActualizacionChanged();
				}
			}
		}
		
		[Column(Storage="_revisado", DbType="Bit NOT NULL")]
		public bool revisado
		{
			get
			{
				return this._revisado;
			}
			set
			{
				if ((this._revisado != value))
				{
					this.OnrevisadoChanging(value);
					this.SendPropertyChanging();
					this._revisado = value;
					this.SendPropertyChanged("revisado");
					this.OnrevisadoChanged();
				}
			}
		}
		
		[Column(Storage="_activo", DbType="Bit")]
		public System.Nullable<bool> activo
		{
			get
			{
				return this._activo;
			}
			set
			{
				if ((this._activo != value))
				{
					this.OnactivoChanging(value);
					this.SendPropertyChanging();
					this._activo = value;
					this.SendPropertyChanged("activo");
					this.OnactivoChanged();
				}
			}
		}
		
		[Association(Name="CalidadProyecto_ComparableInmobiliario", Storage="_CalidadProyecto", ThisKey="idCalidadProyecto", OtherKey="idCalidadProyecto", IsForeignKey=true)]
		public CalidadProyecto CalidadProyecto
		{
			get
			{
				return this._CalidadProyecto.Entity;
			}
			set
			{
				CalidadProyecto previousValue = this._CalidadProyecto.Entity;
				if (((previousValue != value) 
							|| (this._CalidadProyecto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CalidadProyecto.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._CalidadProyecto.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idCalidadProyecto = value.idCalidadProyecto;
					}
					else
					{
						this._idCalidadProyecto = default(short);
					}
					this.SendPropertyChanged("CalidadProyecto");
				}
			}
		}
		
		[Association(Name="ClaseComparable_ComparableInmobiliario", Storage="_ClaseComparable", ThisKey="idClase", OtherKey="idClase", IsForeignKey=true)]
		public ClaseComparable ClaseComparable
		{
			get
			{
				return this._ClaseComparable.Entity;
			}
			set
			{
				ClaseComparable previousValue = this._ClaseComparable.Entity;
				if (((previousValue != value) 
							|| (this._ClaseComparable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClaseComparable.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._ClaseComparable.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idClase = value.idClase;
					}
					else
					{
						this._idClase = default(short);
					}
					this.SendPropertyChanged("ClaseComparable");
				}
			}
		}
		
		[Association(Name="TipoComparable_ComparableInmobiliario", Storage="_TipoComparable", ThisKey="idTipoComparable", OtherKey="idTipoComparable", IsForeignKey=true)]
		public TipoComparable TipoComparable
		{
			get
			{
				return this._TipoComparable.Entity;
			}
			set
			{
				TipoComparable previousValue = this._TipoComparable.Entity;
				if (((previousValue != value) 
							|| (this._TipoComparable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoComparable.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._TipoComparable.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idTipoComparable = value.idTipoComparable;
					}
					else
					{
						this._idTipoComparable = default(short);
					}
					this.SendPropertyChanged("TipoComparable");
				}
			}
		}
		
		[Association(Name="TipoComparable1_ComparableInmobiliario", Storage="_TipoComparable1", ThisKey="idTipoComparable", OtherKey="idTipoComparable", IsForeignKey=true)]
		public TipoComparable1 TipoComparable1
		{
			get
			{
				return this._TipoComparable1.Entity;
			}
			set
			{
				TipoComparable1 previousValue = this._TipoComparable1.Entity;
				if (((previousValue != value) 
							|| (this._TipoComparable1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoComparable1.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._TipoComparable1.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idTipoComparable = value.idTipoComparable;
					}
					else
					{
						this._idTipoComparable = default(short);
					}
					this.SendPropertyChanged("TipoComparable1");
				}
			}
		}
		
		[Association(Name="UsoSuelo_ComparableInmobiliario", Storage="_UsoSuelo", ThisKey="idUsoSuelo", OtherKey="idUsoSuelo", IsForeignKey=true)]
		public UsoSuelo UsoSuelo
		{
			get
			{
				return this._UsoSuelo.Entity;
			}
			set
			{
				UsoSuelo previousValue = this._UsoSuelo.Entity;
				if (((previousValue != value) 
							|| (this._UsoSuelo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsoSuelo.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._UsoSuelo.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idUsoSuelo = value.idUsoSuelo;
					}
					else
					{
						this._idUsoSuelo = default(short);
					}
					this.SendPropertyChanged("UsoSuelo");
				}
			}
		}
		
		[Association(Name="Direccion_ComparableInmobiliario", Storage="_Direccion", ThisKey="idDireccion", OtherKey="idDireccion", IsForeignKey=true)]
		public Direccion Direccion
		{
			get
			{
				return this._Direccion.Entity;
			}
			set
			{
				Direccion previousValue = this._Direccion.Entity;
				if (((previousValue != value) 
							|| (this._Direccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direccion.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._Direccion.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idDireccion = value.idDireccion;
					}
					else
					{
						this._idDireccion = default(int);
					}
					this.SendPropertyChanged("Direccion");
				}
			}
		}
		
		[Association(Name="DatoContacto_ComparableInmobiliario", Storage="_DatoContacto", ThisKey="idDatoContacto", OtherKey="idDatoContacto", IsForeignKey=true)]
		public DatoContacto DatoContacto
		{
			get
			{
				return this._DatoContacto.Entity;
			}
			set
			{
				DatoContacto previousValue = this._DatoContacto.Entity;
				if (((previousValue != value) 
							|| (this._DatoContacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoContacto.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._DatoContacto.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idDatoContacto = value.idDatoContacto;
					}
					else
					{
						this._idDatoContacto = default(int);
					}
					this.SendPropertyChanged("DatoContacto");
				}
			}
		}
		
		[Association(Name="Valuador_ComparableInmobiliario", Storage="_Valuador", ThisKey="idValuador", OtherKey="idValuador", IsForeignKey=true)]
		public Valuador Valuador
		{
			get
			{
				return this._Valuador.Entity;
			}
			set
			{
				Valuador previousValue = this._Valuador.Entity;
				if (((previousValue != value) 
							|| (this._Valuador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Valuador.Entity = null;
						previousValue.ComparableInmobiliario.Remove(this);
					}
					this._Valuador.Entity = value;
					if ((value != null))
					{
						value.ComparableInmobiliario.Add(this);
						this._idValuador = value.idValuador;
					}
					else
					{
						this._idValuador = default(int);
					}
					this.SendPropertyChanged("Valuador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TipoComparable")]
	public partial class TipoComparable1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoComparable;
		
		private string _descripcion;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoComparableChanging(short value);
    partial void OnidTipoComparableChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public TipoComparable1()
		{
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idTipoComparable", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoComparable
		{
			get
			{
				return this._idTipoComparable;
			}
			set
			{
				if ((this._idTipoComparable != value))
				{
					this.OnidTipoComparableChanging(value);
					this.SendPropertyChanging();
					this._idTipoComparable = value;
					this.SendPropertyChanged("idTipoComparable");
					this.OnidTipoComparableChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="TipoComparable1_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idTipoComparable", OtherKey="idTipoComparable")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoComparable1 = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.TipoComparable1 = null;
		}
	}
	
	[Table(Name="dbo.UsoSuelo")]
	public partial class UsoSuelo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idUsoSuelo;
		
		private string _descripcion;
		
		private EntitySet<ComparableInmobiliario> _ComparableInmobiliario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsoSueloChanging(short value);
    partial void OnidUsoSueloChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public UsoSuelo()
		{
			this._ComparableInmobiliario = new EntitySet<ComparableInmobiliario>(new Action<ComparableInmobiliario>(this.attach_ComparableInmobiliario), new Action<ComparableInmobiliario>(this.detach_ComparableInmobiliario));
			OnCreated();
		}
		
		[Column(Storage="_idUsoSuelo", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short idUsoSuelo
		{
			get
			{
				return this._idUsoSuelo;
			}
			set
			{
				if ((this._idUsoSuelo != value))
				{
					this.OnidUsoSueloChanging(value);
					this.SendPropertyChanging();
					this._idUsoSuelo = value;
					this.SendPropertyChanged("idUsoSuelo");
					this.OnidUsoSueloChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Association(Name="UsoSuelo_ComparableInmobiliario", Storage="_ComparableInmobiliario", ThisKey="idUsoSuelo", OtherKey="idUsoSuelo")]
		public EntitySet<ComparableInmobiliario> ComparableInmobiliario
		{
			get
			{
				return this._ComparableInmobiliario;
			}
			set
			{
				this._ComparableInmobiliario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.UsoSuelo = this;
		}
		
		private void detach_ComparableInmobiliario(ComparableInmobiliario entity)
		{
			this.SendPropertyChanging();
			entity.UsoSuelo = null;
		}
	}
	
	[Table(Name="dbo.TipoAcabado")]
	public partial class TipoAcabado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idTipoAcabado;
		
		private string _nombreAcabado;
		
		private EntitySet<AcabadoTipoConstruccion> _AcabadoTipoConstruccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoAcabadoChanging(short value);
    partial void OnidTipoAcabadoChanged();
    partial void OnnombreAcabadoChanging(string value);
    partial void OnnombreAcabadoChanged();
    #endregion
		
		public TipoAcabado()
		{
			this._AcabadoTipoConstruccion = new EntitySet<AcabadoTipoConstruccion>(new Action<AcabadoTipoConstruccion>(this.attach_AcabadoTipoConstruccion), new Action<AcabadoTipoConstruccion>(this.detach_AcabadoTipoConstruccion));
			OnCreated();
		}
		
		[Column(Storage="_idTipoAcabado", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoAcabado
		{
			get
			{
				return this._idTipoAcabado;
			}
			set
			{
				if ((this._idTipoAcabado != value))
				{
					this.OnidTipoAcabadoChanging(value);
					this.SendPropertyChanging();
					this._idTipoAcabado = value;
					this.SendPropertyChanged("idTipoAcabado");
					this.OnidTipoAcabadoChanged();
				}
			}
		}
		
		[Column(Storage="_nombreAcabado", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string nombreAcabado
		{
			get
			{
				return this._nombreAcabado;
			}
			set
			{
				if ((this._nombreAcabado != value))
				{
					this.OnnombreAcabadoChanging(value);
					this.SendPropertyChanging();
					this._nombreAcabado = value;
					this.SendPropertyChanged("nombreAcabado");
					this.OnnombreAcabadoChanged();
				}
			}
		}
		
		[Association(Name="TipoAcabado_AcabadoTipoConstruccion", Storage="_AcabadoTipoConstruccion", ThisKey="idTipoAcabado", OtherKey="idTipoAcabado")]
		public EntitySet<AcabadoTipoConstruccion> AcabadoTipoConstruccion
		{
			get
			{
				return this._AcabadoTipoConstruccion;
			}
			set
			{
				this._AcabadoTipoConstruccion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcabadoTipoConstruccion(AcabadoTipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoAcabado = this;
		}
		
		private void detach_AcabadoTipoConstruccion(AcabadoTipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoAcabado = null;
		}
	}
	
	[Table(Name="dbo.TipoConstruccion")]
	public partial class TipoConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private short _numeroTipo;
		
		private short _idClase;
		
		private short _idConservacion;
		
		private short _idFuente;
		
		private string _otraFuente;
		
		private string _descripcion;
		
		private double _superficie;
		
		private bool _accesorio;
		
		private short _niveles;
		
		private double _edad;
		
		private double _avanceObra;
		
		private double _vidaUtil;
		
		private short _nivelesCuerpo;
		
		private EntityRef<InstalacionesTipoConstruccion> _InstalacionesTipoConstruccion;
		
		private EntityRef<EstructurasTipoConstruccion> _EstructurasTipoConstruccion;
		
		private EntitySet<AcabadoTipoConstruccion> _AcabadoTipoConstruccion;
		
		private EntityRef<ConstruccionInmueble> _ConstruccionInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnnumeroTipoChanging(short value);
    partial void OnnumeroTipoChanged();
    partial void OnidClaseChanging(short value);
    partial void OnidClaseChanged();
    partial void OnidConservacionChanging(short value);
    partial void OnidConservacionChanged();
    partial void OnidFuenteChanging(short value);
    partial void OnidFuenteChanged();
    partial void OnotraFuenteChanging(string value);
    partial void OnotraFuenteChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnsuperficieChanging(double value);
    partial void OnsuperficieChanged();
    partial void OnaccesorioChanging(bool value);
    partial void OnaccesorioChanged();
    partial void OnnivelesChanging(short value);
    partial void OnnivelesChanged();
    partial void OnedadChanging(double value);
    partial void OnedadChanged();
    partial void OnavanceObraChanging(double value);
    partial void OnavanceObraChanged();
    partial void OnvidaUtilChanging(double value);
    partial void OnvidaUtilChanged();
    partial void OnnivelesCuerpoChanging(short value);
    partial void OnnivelesCuerpoChanged();
    #endregion
		
		public TipoConstruccion()
		{
			this._InstalacionesTipoConstruccion = default(EntityRef<InstalacionesTipoConstruccion>);
			this._EstructurasTipoConstruccion = default(EntityRef<EstructurasTipoConstruccion>);
			this._AcabadoTipoConstruccion = new EntitySet<AcabadoTipoConstruccion>(new Action<AcabadoTipoConstruccion>(this.attach_AcabadoTipoConstruccion), new Action<AcabadoTipoConstruccion>(this.detach_AcabadoTipoConstruccion));
			this._ConstruccionInmueble = default(EntityRef<ConstruccionInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					if (this._ConstruccionInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_numeroTipo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numeroTipo
		{
			get
			{
				return this._numeroTipo;
			}
			set
			{
				if ((this._numeroTipo != value))
				{
					this.OnnumeroTipoChanging(value);
					this.SendPropertyChanging();
					this._numeroTipo = value;
					this.SendPropertyChanged("numeroTipo");
					this.OnnumeroTipoChanged();
				}
			}
		}
		
		[Column(Storage="_idClase", DbType="SmallInt NOT NULL")]
		public short idClase
		{
			get
			{
				return this._idClase;
			}
			set
			{
				if ((this._idClase != value))
				{
					this.OnidClaseChanging(value);
					this.SendPropertyChanging();
					this._idClase = value;
					this.SendPropertyChanged("idClase");
					this.OnidClaseChanged();
				}
			}
		}
		
		[Column(Storage="_idConservacion", DbType="SmallInt NOT NULL")]
		public short idConservacion
		{
			get
			{
				return this._idConservacion;
			}
			set
			{
				if ((this._idConservacion != value))
				{
					this.OnidConservacionChanging(value);
					this.SendPropertyChanging();
					this._idConservacion = value;
					this.SendPropertyChanged("idConservacion");
					this.OnidConservacionChanged();
				}
			}
		}
		
		[Column(Storage="_idFuente", DbType="SmallInt NOT NULL")]
		public short idFuente
		{
			get
			{
				return this._idFuente;
			}
			set
			{
				if ((this._idFuente != value))
				{
					this.OnidFuenteChanging(value);
					this.SendPropertyChanging();
					this._idFuente = value;
					this.SendPropertyChanged("idFuente");
					this.OnidFuenteChanged();
				}
			}
		}
		
		[Column(Storage="_otraFuente", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string otraFuente
		{
			get
			{
				return this._otraFuente;
			}
			set
			{
				if ((this._otraFuente != value))
				{
					this.OnotraFuenteChanging(value);
					this.SendPropertyChanging();
					this._otraFuente = value;
					this.SendPropertyChanged("otraFuente");
					this.OnotraFuenteChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_superficie", DbType="Float NOT NULL")]
		public double superficie
		{
			get
			{
				return this._superficie;
			}
			set
			{
				if ((this._superficie != value))
				{
					this.OnsuperficieChanging(value);
					this.SendPropertyChanging();
					this._superficie = value;
					this.SendPropertyChanged("superficie");
					this.OnsuperficieChanged();
				}
			}
		}
		
		[Column(Storage="_accesorio", DbType="Bit NOT NULL")]
		public bool accesorio
		{
			get
			{
				return this._accesorio;
			}
			set
			{
				if ((this._accesorio != value))
				{
					this.OnaccesorioChanging(value);
					this.SendPropertyChanging();
					this._accesorio = value;
					this.SendPropertyChanged("accesorio");
					this.OnaccesorioChanged();
				}
			}
		}
		
		[Column(Storage="_niveles", DbType="SmallInt NOT NULL")]
		public short niveles
		{
			get
			{
				return this._niveles;
			}
			set
			{
				if ((this._niveles != value))
				{
					this.OnnivelesChanging(value);
					this.SendPropertyChanging();
					this._niveles = value;
					this.SendPropertyChanged("niveles");
					this.OnnivelesChanged();
				}
			}
		}
		
		[Column(Storage="_edad", DbType="Float NOT NULL")]
		public double edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[Column(Storage="_avanceObra", DbType="Float NOT NULL")]
		public double avanceObra
		{
			get
			{
				return this._avanceObra;
			}
			set
			{
				if ((this._avanceObra != value))
				{
					this.OnavanceObraChanging(value);
					this.SendPropertyChanging();
					this._avanceObra = value;
					this.SendPropertyChanged("avanceObra");
					this.OnavanceObraChanged();
				}
			}
		}
		
		[Column(Storage="_vidaUtil", DbType="Float NOT NULL")]
		public double vidaUtil
		{
			get
			{
				return this._vidaUtil;
			}
			set
			{
				if ((this._vidaUtil != value))
				{
					this.OnvidaUtilChanging(value);
					this.SendPropertyChanging();
					this._vidaUtil = value;
					this.SendPropertyChanged("vidaUtil");
					this.OnvidaUtilChanged();
				}
			}
		}
		
		[Column(Storage="_nivelesCuerpo", DbType="SmallInt NOT NULL")]
		public short nivelesCuerpo
		{
			get
			{
				return this._nivelesCuerpo;
			}
			set
			{
				if ((this._nivelesCuerpo != value))
				{
					this.OnnivelesCuerpoChanging(value);
					this.SendPropertyChanging();
					this._nivelesCuerpo = value;
					this.SendPropertyChanged("nivelesCuerpo");
					this.OnnivelesCuerpoChanged();
				}
			}
		}
		
		[Association(Name="TipoConstruccion_InstalacionesTipoConstruccion", Storage="_InstalacionesTipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo", IsUnique=true, IsForeignKey=false)]
		public InstalacionesTipoConstruccion InstalacionesTipoConstruccion
		{
			get
			{
				return this._InstalacionesTipoConstruccion.Entity;
			}
			set
			{
				InstalacionesTipoConstruccion previousValue = this._InstalacionesTipoConstruccion.Entity;
				if (((previousValue != value) 
							|| (this._InstalacionesTipoConstruccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstalacionesTipoConstruccion.Entity = null;
						previousValue.TipoConstruccion = null;
					}
					this._InstalacionesTipoConstruccion.Entity = value;
					if ((value != null))
					{
						value.TipoConstruccion = this;
					}
					this.SendPropertyChanged("InstalacionesTipoConstruccion");
				}
			}
		}
		
		[Association(Name="TipoConstruccion_EstructurasTipoConstruccion", Storage="_EstructurasTipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo", IsUnique=true, IsForeignKey=false)]
		public EstructurasTipoConstruccion EstructurasTipoConstruccion
		{
			get
			{
				return this._EstructurasTipoConstruccion.Entity;
			}
			set
			{
				EstructurasTipoConstruccion previousValue = this._EstructurasTipoConstruccion.Entity;
				if (((previousValue != value) 
							|| (this._EstructurasTipoConstruccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstructurasTipoConstruccion.Entity = null;
						previousValue.TipoConstruccion = null;
					}
					this._EstructurasTipoConstruccion.Entity = value;
					if ((value != null))
					{
						value.TipoConstruccion = this;
					}
					this.SendPropertyChanged("EstructurasTipoConstruccion");
				}
			}
		}
		
		[Association(Name="TipoConstruccion_AcabadoTipoConstruccion", Storage="_AcabadoTipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo")]
		public EntitySet<AcabadoTipoConstruccion> AcabadoTipoConstruccion
		{
			get
			{
				return this._AcabadoTipoConstruccion;
			}
			set
			{
				this._AcabadoTipoConstruccion.Assign(value);
			}
		}
		
		[Association(Name="ConstruccionInmueble_TipoConstruccion", Storage="_ConstruccionInmueble", ThisKey="idConstruccion", OtherKey="idConstruccion", IsForeignKey=true)]
		public ConstruccionInmueble ConstruccionInmueble
		{
			get
			{
				return this._ConstruccionInmueble.Entity;
			}
			set
			{
				ConstruccionInmueble previousValue = this._ConstruccionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ConstruccionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConstruccionInmueble.Entity = null;
						previousValue.TipoConstruccion.Remove(this);
					}
					this._ConstruccionInmueble.Entity = value;
					if ((value != null))
					{
						value.TipoConstruccion.Add(this);
						this._idConstruccion = value.idConstruccion;
					}
					else
					{
						this._idConstruccion = default(int);
					}
					this.SendPropertyChanged("ConstruccionInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AcabadoTipoConstruccion(AcabadoTipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoConstruccion = this;
		}
		
		private void detach_AcabadoTipoConstruccion(AcabadoTipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.TipoConstruccion = null;
		}
	}
	
	[Table(Name="dbo.SuperficiesCondominio")]
	public partial class SuperficiesCondominio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCondominio;
		
		private double _totalTerreno;
		
		private double _indiviso;
		
		private double _privativo;
		
		private int _fuenteIndiviso;
		
		private string _otraFuenteIndiviso;
		
		private int _fuentePrivativo;
		
		private string _otraFuentePrivativo;
		
		private EntityRef<DatoCondominio> _DatoCondominio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCondominioChanging(int value);
    partial void OnidCondominioChanged();
    partial void OntotalTerrenoChanging(double value);
    partial void OntotalTerrenoChanged();
    partial void OnindivisoChanging(double value);
    partial void OnindivisoChanged();
    partial void OnprivativoChanging(double value);
    partial void OnprivativoChanged();
    partial void OnfuenteIndivisoChanging(int value);
    partial void OnfuenteIndivisoChanged();
    partial void OnotraFuenteIndivisoChanging(string value);
    partial void OnotraFuenteIndivisoChanged();
    partial void OnfuentePrivativoChanging(int value);
    partial void OnfuentePrivativoChanged();
    partial void OnotraFuentePrivativoChanging(string value);
    partial void OnotraFuentePrivativoChanged();
    #endregion
		
		public SuperficiesCondominio()
		{
			this._DatoCondominio = default(EntityRef<DatoCondominio>);
			OnCreated();
		}
		
		[Column(Storage="_idCondominio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCondominio
		{
			get
			{
				return this._idCondominio;
			}
			set
			{
				if ((this._idCondominio != value))
				{
					if (this._DatoCondominio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCondominioChanging(value);
					this.SendPropertyChanging();
					this._idCondominio = value;
					this.SendPropertyChanged("idCondominio");
					this.OnidCondominioChanged();
				}
			}
		}
		
		[Column(Storage="_totalTerreno", DbType="Float NOT NULL")]
		public double totalTerreno
		{
			get
			{
				return this._totalTerreno;
			}
			set
			{
				if ((this._totalTerreno != value))
				{
					this.OntotalTerrenoChanging(value);
					this.SendPropertyChanging();
					this._totalTerreno = value;
					this.SendPropertyChanged("totalTerreno");
					this.OntotalTerrenoChanged();
				}
			}
		}
		
		[Column(Storage="_indiviso", DbType="Float NOT NULL")]
		public double indiviso
		{
			get
			{
				return this._indiviso;
			}
			set
			{
				if ((this._indiviso != value))
				{
					this.OnindivisoChanging(value);
					this.SendPropertyChanging();
					this._indiviso = value;
					this.SendPropertyChanged("indiviso");
					this.OnindivisoChanged();
				}
			}
		}
		
		[Column(Storage="_privativo", DbType="Float NOT NULL")]
		public double privativo
		{
			get
			{
				return this._privativo;
			}
			set
			{
				if ((this._privativo != value))
				{
					this.OnprivativoChanging(value);
					this.SendPropertyChanging();
					this._privativo = value;
					this.SendPropertyChanged("privativo");
					this.OnprivativoChanged();
				}
			}
		}
		
		[Column(Storage="_fuenteIndiviso", DbType="Int NOT NULL")]
		public int fuenteIndiviso
		{
			get
			{
				return this._fuenteIndiviso;
			}
			set
			{
				if ((this._fuenteIndiviso != value))
				{
					this.OnfuenteIndivisoChanging(value);
					this.SendPropertyChanging();
					this._fuenteIndiviso = value;
					this.SendPropertyChanged("fuenteIndiviso");
					this.OnfuenteIndivisoChanged();
				}
			}
		}
		
		[Column(Storage="_otraFuenteIndiviso", DbType="NVarChar(50)")]
		public string otraFuenteIndiviso
		{
			get
			{
				return this._otraFuenteIndiviso;
			}
			set
			{
				if ((this._otraFuenteIndiviso != value))
				{
					this.OnotraFuenteIndivisoChanging(value);
					this.SendPropertyChanging();
					this._otraFuenteIndiviso = value;
					this.SendPropertyChanged("otraFuenteIndiviso");
					this.OnotraFuenteIndivisoChanged();
				}
			}
		}
		
		[Column(Storage="_fuentePrivativo", DbType="Int NOT NULL")]
		public int fuentePrivativo
		{
			get
			{
				return this._fuentePrivativo;
			}
			set
			{
				if ((this._fuentePrivativo != value))
				{
					this.OnfuentePrivativoChanging(value);
					this.SendPropertyChanging();
					this._fuentePrivativo = value;
					this.SendPropertyChanged("fuentePrivativo");
					this.OnfuentePrivativoChanged();
				}
			}
		}
		
		[Column(Storage="_otraFuentePrivativo", DbType="NVarChar(50)")]
		public string otraFuentePrivativo
		{
			get
			{
				return this._otraFuentePrivativo;
			}
			set
			{
				if ((this._otraFuentePrivativo != value))
				{
					this.OnotraFuentePrivativoChanging(value);
					this.SendPropertyChanging();
					this._otraFuentePrivativo = value;
					this.SendPropertyChanged("otraFuentePrivativo");
					this.OnotraFuentePrivativoChanged();
				}
			}
		}
		
		[Association(Name="DatoCondominio_SuperficiesCondominio", Storage="_DatoCondominio", ThisKey="idCondominio", OtherKey="idCondominio", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DatoCondominio DatoCondominio
		{
			get
			{
				return this._DatoCondominio.Entity;
			}
			set
			{
				DatoCondominio previousValue = this._DatoCondominio.Entity;
				if (((previousValue != value) 
							|| (this._DatoCondominio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoCondominio.Entity = null;
						previousValue.SuperficiesCondominio = null;
					}
					this._DatoCondominio.Entity = value;
					if ((value != null))
					{
						value.SuperficiesCondominio = this;
						this._idCondominio = value.idCondominio;
					}
					else
					{
						this._idCondominio = default(int);
					}
					this.SendPropertyChanged("DatoCondominio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AreaComun")]
	public partial class AreaComun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _idArea;
		
		private int _idCondominio;
		
		private string _concepto;
		
		private double _superficie;
		
		private bool _complemetaria;
		
		private EntityRef<DatoCondominio> _DatoCondominio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidAreaChanging(short value);
    partial void OnidAreaChanged();
    partial void OnidCondominioChanging(int value);
    partial void OnidCondominioChanged();
    partial void OnconceptoChanging(string value);
    partial void OnconceptoChanged();
    partial void OnsuperficieChanging(double value);
    partial void OnsuperficieChanged();
    partial void OncomplemetariaChanging(bool value);
    partial void OncomplemetariaChanged();
    #endregion
		
		public AreaComun()
		{
			this._DatoCondominio = default(EntityRef<DatoCondominio>);
			OnCreated();
		}
		
		[Column(Storage="_idArea", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idArea
		{
			get
			{
				return this._idArea;
			}
			set
			{
				if ((this._idArea != value))
				{
					this.OnidAreaChanging(value);
					this.SendPropertyChanging();
					this._idArea = value;
					this.SendPropertyChanged("idArea");
					this.OnidAreaChanged();
				}
			}
		}
		
		[Column(Storage="_idCondominio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCondominio
		{
			get
			{
				return this._idCondominio;
			}
			set
			{
				if ((this._idCondominio != value))
				{
					if (this._DatoCondominio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCondominioChanging(value);
					this.SendPropertyChanging();
					this._idCondominio = value;
					this.SendPropertyChanged("idCondominio");
					this.OnidCondominioChanged();
				}
			}
		}
		
		[Column(Storage="_concepto", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string concepto
		{
			get
			{
				return this._concepto;
			}
			set
			{
				if ((this._concepto != value))
				{
					this.OnconceptoChanging(value);
					this.SendPropertyChanging();
					this._concepto = value;
					this.SendPropertyChanged("concepto");
					this.OnconceptoChanged();
				}
			}
		}
		
		[Column(Storage="_superficie", DbType="Float NOT NULL")]
		public double superficie
		{
			get
			{
				return this._superficie;
			}
			set
			{
				if ((this._superficie != value))
				{
					this.OnsuperficieChanging(value);
					this.SendPropertyChanging();
					this._superficie = value;
					this.SendPropertyChanged("superficie");
					this.OnsuperficieChanged();
				}
			}
		}
		
		[Column(Storage="_complemetaria", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool complemetaria
		{
			get
			{
				return this._complemetaria;
			}
			set
			{
				if ((this._complemetaria != value))
				{
					this.OncomplemetariaChanging(value);
					this.SendPropertyChanging();
					this._complemetaria = value;
					this.SendPropertyChanged("complemetaria");
					this.OncomplemetariaChanged();
				}
			}
		}
		
		[Association(Name="DatoCondominio_AreaComun", Storage="_DatoCondominio", ThisKey="idCondominio", OtherKey="idCondominio", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DatoCondominio DatoCondominio
		{
			get
			{
				return this._DatoCondominio.Entity;
			}
			set
			{
				DatoCondominio previousValue = this._DatoCondominio.Entity;
				if (((previousValue != value) 
							|| (this._DatoCondominio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DatoCondominio.Entity = null;
						previousValue.AreaComun.Remove(this);
					}
					this._DatoCondominio.Entity = value;
					if ((value != null))
					{
						value.AreaComun.Add(this);
						this._idCondominio = value.idCondominio;
					}
					else
					{
						this._idCondominio = default(int);
					}
					this.SendPropertyChanged("DatoCondominio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.InstalacionesTipoConstruccion")]
	public partial class InstalacionesTipoConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private short _numeroTipo;
		
		private string _hidraulicas;
		
		private string _sanitarias;
		
		private string _electricas;
		
		private string _carpinteria;
		
		private string _herreria;
		
		private string _canceleria;
		
		private EntityRef<TipoConstruccion> _TipoConstruccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnnumeroTipoChanging(short value);
    partial void OnnumeroTipoChanged();
    partial void OnhidraulicasChanging(string value);
    partial void OnhidraulicasChanged();
    partial void OnsanitariasChanging(string value);
    partial void OnsanitariasChanged();
    partial void OnelectricasChanging(string value);
    partial void OnelectricasChanged();
    partial void OncarpinteriaChanging(string value);
    partial void OncarpinteriaChanged();
    partial void OnherreriaChanging(string value);
    partial void OnherreriaChanged();
    partial void OncanceleriaChanging(string value);
    partial void OncanceleriaChanged();
    #endregion
		
		public InstalacionesTipoConstruccion()
		{
			this._TipoConstruccion = default(EntityRef<TipoConstruccion>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_numeroTipo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numeroTipo
		{
			get
			{
				return this._numeroTipo;
			}
			set
			{
				if ((this._numeroTipo != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumeroTipoChanging(value);
					this.SendPropertyChanging();
					this._numeroTipo = value;
					this.SendPropertyChanged("numeroTipo");
					this.OnnumeroTipoChanged();
				}
			}
		}
		
		[Column(Storage="_hidraulicas", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string hidraulicas
		{
			get
			{
				return this._hidraulicas;
			}
			set
			{
				if ((this._hidraulicas != value))
				{
					this.OnhidraulicasChanging(value);
					this.SendPropertyChanging();
					this._hidraulicas = value;
					this.SendPropertyChanged("hidraulicas");
					this.OnhidraulicasChanged();
				}
			}
		}
		
		[Column(Storage="_sanitarias", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string sanitarias
		{
			get
			{
				return this._sanitarias;
			}
			set
			{
				if ((this._sanitarias != value))
				{
					this.OnsanitariasChanging(value);
					this.SendPropertyChanging();
					this._sanitarias = value;
					this.SendPropertyChanged("sanitarias");
					this.OnsanitariasChanged();
				}
			}
		}
		
		[Column(Storage="_electricas", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string electricas
		{
			get
			{
				return this._electricas;
			}
			set
			{
				if ((this._electricas != value))
				{
					this.OnelectricasChanging(value);
					this.SendPropertyChanging();
					this._electricas = value;
					this.SendPropertyChanged("electricas");
					this.OnelectricasChanged();
				}
			}
		}
		
		[Column(Storage="_carpinteria", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string carpinteria
		{
			get
			{
				return this._carpinteria;
			}
			set
			{
				if ((this._carpinteria != value))
				{
					this.OncarpinteriaChanging(value);
					this.SendPropertyChanging();
					this._carpinteria = value;
					this.SendPropertyChanged("carpinteria");
					this.OncarpinteriaChanged();
				}
			}
		}
		
		[Column(Storage="_herreria", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string herreria
		{
			get
			{
				return this._herreria;
			}
			set
			{
				if ((this._herreria != value))
				{
					this.OnherreriaChanging(value);
					this.SendPropertyChanging();
					this._herreria = value;
					this.SendPropertyChanged("herreria");
					this.OnherreriaChanged();
				}
			}
		}
		
		[Column(Storage="_canceleria", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string canceleria
		{
			get
			{
				return this._canceleria;
			}
			set
			{
				if ((this._canceleria != value))
				{
					this.OncanceleriaChanging(value);
					this.SendPropertyChanging();
					this._canceleria = value;
					this.SendPropertyChanged("canceleria");
					this.OncanceleriaChanged();
				}
			}
		}
		
		[Association(Name="TipoConstruccion_InstalacionesTipoConstruccion", Storage="_TipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TipoConstruccion TipoConstruccion
		{
			get
			{
				return this._TipoConstruccion.Entity;
			}
			set
			{
				TipoConstruccion previousValue = this._TipoConstruccion.Entity;
				if (((previousValue != value) 
							|| (this._TipoConstruccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoConstruccion.Entity = null;
						previousValue.InstalacionesTipoConstruccion = null;
					}
					this._TipoConstruccion.Entity = value;
					if ((value != null))
					{
						value.InstalacionesTipoConstruccion = this;
						this._idConstruccion = value.idConstruccion;
						this._numeroTipo = value.numeroTipo;
					}
					else
					{
						this._idConstruccion = default(int);
						this._numeroTipo = default(short);
					}
					this.SendPropertyChanged("TipoConstruccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.InstalacionConstruccion")]
	public partial class InstalacionConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private short _idInstalacion;
		
		private short _idTipoUnidad;
		
		private short _idTipoConservacion;
		
		private string _descripcion;
		
		private double _cantidad;
		
		private double _edad;
		
		private bool _comun;
		
		private EntityRef<ConstruccionInmueble> _ConstruccionInmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnidInstalacionChanging(short value);
    partial void OnidInstalacionChanged();
    partial void OnidTipoUnidadChanging(short value);
    partial void OnidTipoUnidadChanged();
    partial void OnidTipoConservacionChanging(short value);
    partial void OnidTipoConservacionChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OncantidadChanging(double value);
    partial void OncantidadChanged();
    partial void OnedadChanging(double value);
    partial void OnedadChanged();
    partial void OncomunChanging(bool value);
    partial void OncomunChanged();
    #endregion
		
		public InstalacionConstruccion()
		{
			this._ConstruccionInmueble = default(EntityRef<ConstruccionInmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					if (this._ConstruccionInmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_idInstalacion", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idInstalacion
		{
			get
			{
				return this._idInstalacion;
			}
			set
			{
				if ((this._idInstalacion != value))
				{
					this.OnidInstalacionChanging(value);
					this.SendPropertyChanging();
					this._idInstalacion = value;
					this.SendPropertyChanged("idInstalacion");
					this.OnidInstalacionChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoUnidad", DbType="SmallInt NOT NULL")]
		public short idTipoUnidad
		{
			get
			{
				return this._idTipoUnidad;
			}
			set
			{
				if ((this._idTipoUnidad != value))
				{
					this.OnidTipoUnidadChanging(value);
					this.SendPropertyChanging();
					this._idTipoUnidad = value;
					this.SendPropertyChanged("idTipoUnidad");
					this.OnidTipoUnidadChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoConservacion", DbType="SmallInt NOT NULL")]
		public short idTipoConservacion
		{
			get
			{
				return this._idTipoConservacion;
			}
			set
			{
				if ((this._idTipoConservacion != value))
				{
					this.OnidTipoConservacionChanging(value);
					this.SendPropertyChanging();
					this._idTipoConservacion = value;
					this.SendPropertyChanged("idTipoConservacion");
					this.OnidTipoConservacionChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_cantidad", DbType="Float NOT NULL")]
		public double cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[Column(Storage="_edad", DbType="Float NOT NULL")]
		public double edad
		{
			get
			{
				return this._edad;
			}
			set
			{
				if ((this._edad != value))
				{
					this.OnedadChanging(value);
					this.SendPropertyChanging();
					this._edad = value;
					this.SendPropertyChanged("edad");
					this.OnedadChanged();
				}
			}
		}
		
		[Column(Storage="_comun", DbType="Bit NOT NULL", IsPrimaryKey=true)]
		public bool comun
		{
			get
			{
				return this._comun;
			}
			set
			{
				if ((this._comun != value))
				{
					this.OncomunChanging(value);
					this.SendPropertyChanging();
					this._comun = value;
					this.SendPropertyChanged("comun");
					this.OncomunChanged();
				}
			}
		}
		
		[Association(Name="ConstruccionInmueble_InstalacionConstruccion", Storage="_ConstruccionInmueble", ThisKey="idConstruccion", OtherKey="idConstruccion", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ConstruccionInmueble ConstruccionInmueble
		{
			get
			{
				return this._ConstruccionInmueble.Entity;
			}
			set
			{
				ConstruccionInmueble previousValue = this._ConstruccionInmueble.Entity;
				if (((previousValue != value) 
							|| (this._ConstruccionInmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConstruccionInmueble.Entity = null;
						previousValue.InstalacionConstruccion.Remove(this);
					}
					this._ConstruccionInmueble.Entity = value;
					if ((value != null))
					{
						value.InstalacionConstruccion.Add(this);
						this._idConstruccion = value.idConstruccion;
					}
					else
					{
						this._idConstruccion = default(int);
					}
					this.SendPropertyChanged("ConstruccionInmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.EstructurasTipoConstruccion")]
	public partial class EstructurasTipoConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private short _numeroTipo;
		
		private string _cimentacion;
		
		private string _entrepisos;
		
		private string _muros;
		
		private string _trabes;
		
		private string _escaleras;
		
		private EntityRef<TipoConstruccion> _TipoConstruccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnnumeroTipoChanging(short value);
    partial void OnnumeroTipoChanged();
    partial void OncimentacionChanging(string value);
    partial void OncimentacionChanged();
    partial void OnentrepisosChanging(string value);
    partial void OnentrepisosChanged();
    partial void OnmurosChanging(string value);
    partial void OnmurosChanged();
    partial void OntrabesChanging(string value);
    partial void OntrabesChanged();
    partial void OnescalerasChanging(string value);
    partial void OnescalerasChanged();
    #endregion
		
		public EstructurasTipoConstruccion()
		{
			this._TipoConstruccion = default(EntityRef<TipoConstruccion>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_numeroTipo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numeroTipo
		{
			get
			{
				return this._numeroTipo;
			}
			set
			{
				if ((this._numeroTipo != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumeroTipoChanging(value);
					this.SendPropertyChanging();
					this._numeroTipo = value;
					this.SendPropertyChanged("numeroTipo");
					this.OnnumeroTipoChanged();
				}
			}
		}
		
		[Column(Storage="_cimentacion", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string cimentacion
		{
			get
			{
				return this._cimentacion;
			}
			set
			{
				if ((this._cimentacion != value))
				{
					this.OncimentacionChanging(value);
					this.SendPropertyChanging();
					this._cimentacion = value;
					this.SendPropertyChanged("cimentacion");
					this.OncimentacionChanged();
				}
			}
		}
		
		[Column(Storage="_entrepisos", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string entrepisos
		{
			get
			{
				return this._entrepisos;
			}
			set
			{
				if ((this._entrepisos != value))
				{
					this.OnentrepisosChanging(value);
					this.SendPropertyChanging();
					this._entrepisos = value;
					this.SendPropertyChanged("entrepisos");
					this.OnentrepisosChanged();
				}
			}
		}
		
		[Column(Storage="_muros", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string muros
		{
			get
			{
				return this._muros;
			}
			set
			{
				if ((this._muros != value))
				{
					this.OnmurosChanging(value);
					this.SendPropertyChanging();
					this._muros = value;
					this.SendPropertyChanged("muros");
					this.OnmurosChanged();
				}
			}
		}
		
		[Column(Storage="_trabes", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string trabes
		{
			get
			{
				return this._trabes;
			}
			set
			{
				if ((this._trabes != value))
				{
					this.OntrabesChanging(value);
					this.SendPropertyChanging();
					this._trabes = value;
					this.SendPropertyChanged("trabes");
					this.OntrabesChanged();
				}
			}
		}
		
		[Column(Storage="_escaleras", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string escaleras
		{
			get
			{
				return this._escaleras;
			}
			set
			{
				if ((this._escaleras != value))
				{
					this.OnescalerasChanging(value);
					this.SendPropertyChanging();
					this._escaleras = value;
					this.SendPropertyChanged("escaleras");
					this.OnescalerasChanged();
				}
			}
		}
		
		[Association(Name="TipoConstruccion_EstructurasTipoConstruccion", Storage="_TipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TipoConstruccion TipoConstruccion
		{
			get
			{
				return this._TipoConstruccion.Entity;
			}
			set
			{
				TipoConstruccion previousValue = this._TipoConstruccion.Entity;
				if (((previousValue != value) 
							|| (this._TipoConstruccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoConstruccion.Entity = null;
						previousValue.EstructurasTipoConstruccion = null;
					}
					this._TipoConstruccion.Entity = value;
					if ((value != null))
					{
						value.EstructurasTipoConstruccion = this;
						this._idConstruccion = value.idConstruccion;
						this._numeroTipo = value.numeroTipo;
					}
					else
					{
						this._idConstruccion = default(int);
						this._numeroTipo = default(short);
					}
					this.SendPropertyChanged("TipoConstruccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.AcabadoTipoConstruccion")]
	public partial class AcabadoTipoConstruccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private short _numeroTipo;
		
		private short _idTipoAcabado;
		
		private string _piso;
		
		private string _muro;
		
		private string _plafon;
		
		private EntityRef<TipoAcabado> _TipoAcabado;
		
		private EntityRef<TipoConstruccion> _TipoConstruccion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnnumeroTipoChanging(short value);
    partial void OnnumeroTipoChanged();
    partial void OnidTipoAcabadoChanging(short value);
    partial void OnidTipoAcabadoChanged();
    partial void OnpisoChanging(string value);
    partial void OnpisoChanged();
    partial void OnmuroChanging(string value);
    partial void OnmuroChanged();
    partial void OnplafonChanging(string value);
    partial void OnplafonChanged();
    #endregion
		
		public AcabadoTipoConstruccion()
		{
			this._TipoAcabado = default(EntityRef<TipoAcabado>);
			this._TipoConstruccion = default(EntityRef<TipoConstruccion>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_numeroTipo", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numeroTipo
		{
			get
			{
				return this._numeroTipo;
			}
			set
			{
				if ((this._numeroTipo != value))
				{
					if (this._TipoConstruccion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumeroTipoChanging(value);
					this.SendPropertyChanging();
					this._numeroTipo = value;
					this.SendPropertyChanged("numeroTipo");
					this.OnnumeroTipoChanged();
				}
			}
		}
		
		[Column(Storage="_idTipoAcabado", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short idTipoAcabado
		{
			get
			{
				return this._idTipoAcabado;
			}
			set
			{
				if ((this._idTipoAcabado != value))
				{
					if (this._TipoAcabado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoAcabadoChanging(value);
					this.SendPropertyChanging();
					this._idTipoAcabado = value;
					this.SendPropertyChanged("idTipoAcabado");
					this.OnidTipoAcabadoChanged();
				}
			}
		}
		
		[Column(Storage="_piso", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string piso
		{
			get
			{
				return this._piso;
			}
			set
			{
				if ((this._piso != value))
				{
					this.OnpisoChanging(value);
					this.SendPropertyChanging();
					this._piso = value;
					this.SendPropertyChanged("piso");
					this.OnpisoChanged();
				}
			}
		}
		
		[Column(Storage="_muro", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string muro
		{
			get
			{
				return this._muro;
			}
			set
			{
				if ((this._muro != value))
				{
					this.OnmuroChanging(value);
					this.SendPropertyChanging();
					this._muro = value;
					this.SendPropertyChanged("muro");
					this.OnmuroChanged();
				}
			}
		}
		
		[Column(Storage="_plafon", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string plafon
		{
			get
			{
				return this._plafon;
			}
			set
			{
				if ((this._plafon != value))
				{
					this.OnplafonChanging(value);
					this.SendPropertyChanging();
					this._plafon = value;
					this.SendPropertyChanged("plafon");
					this.OnplafonChanged();
				}
			}
		}
		
		[Association(Name="TipoAcabado_AcabadoTipoConstruccion", Storage="_TipoAcabado", ThisKey="idTipoAcabado", OtherKey="idTipoAcabado", IsForeignKey=true)]
		public TipoAcabado TipoAcabado
		{
			get
			{
				return this._TipoAcabado.Entity;
			}
			set
			{
				TipoAcabado previousValue = this._TipoAcabado.Entity;
				if (((previousValue != value) 
							|| (this._TipoAcabado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoAcabado.Entity = null;
						previousValue.AcabadoTipoConstruccion.Remove(this);
					}
					this._TipoAcabado.Entity = value;
					if ((value != null))
					{
						value.AcabadoTipoConstruccion.Add(this);
						this._idTipoAcabado = value.idTipoAcabado;
					}
					else
					{
						this._idTipoAcabado = default(short);
					}
					this.SendPropertyChanged("TipoAcabado");
				}
			}
		}
		
		[Association(Name="TipoConstruccion_AcabadoTipoConstruccion", Storage="_TipoConstruccion", ThisKey="idConstruccion,numeroTipo", OtherKey="idConstruccion,numeroTipo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TipoConstruccion TipoConstruccion
		{
			get
			{
				return this._TipoConstruccion.Entity;
			}
			set
			{
				TipoConstruccion previousValue = this._TipoConstruccion.Entity;
				if (((previousValue != value) 
							|| (this._TipoConstruccion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoConstruccion.Entity = null;
						previousValue.AcabadoTipoConstruccion.Remove(this);
					}
					this._TipoConstruccion.Entity = value;
					if ((value != null))
					{
						value.AcabadoTipoConstruccion.Add(this);
						this._idConstruccion = value.idConstruccion;
						this._numeroTipo = value.numeroTipo;
					}
					else
					{
						this._idConstruccion = default(int);
						this._numeroTipo = default(short);
					}
					this.SendPropertyChanged("TipoConstruccion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ConstruccionInmueble")]
	public partial class ConstruccionInmueble : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idConstruccion;
		
		private int _idInmueble;
		
		private short _idClaseGeneral;
		
		private short _idConservacionGeneral;
		
		private short _idCalidadProyecto;
		
		private System.Nullable<int> _idCondominio;
		
		private string _constructor;
		
		private double _avanceObraGeneral;
		
		private short _nivelesConstruccion;
		
		private short _nivelEdificio;
		
		private bool _horizontal;
		
		private bool _vertical;
		
		private int _unidadesRentables;
		
		private EntitySet<TipoConstruccion> _TipoConstruccion;
		
		private EntitySet<InstalacionConstruccion> _InstalacionConstruccion;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidConstruccionChanging(int value);
    partial void OnidConstruccionChanged();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnidClaseGeneralChanging(short value);
    partial void OnidClaseGeneralChanged();
    partial void OnidConservacionGeneralChanging(short value);
    partial void OnidConservacionGeneralChanged();
    partial void OnidCalidadProyectoChanging(short value);
    partial void OnidCalidadProyectoChanged();
    partial void OnidCondominioChanging(System.Nullable<int> value);
    partial void OnidCondominioChanged();
    partial void OnconstructorChanging(string value);
    partial void OnconstructorChanged();
    partial void OnavanceObraGeneralChanging(double value);
    partial void OnavanceObraGeneralChanged();
    partial void OnnivelesConstruccionChanging(short value);
    partial void OnnivelesConstruccionChanged();
    partial void OnnivelEdificioChanging(short value);
    partial void OnnivelEdificioChanged();
    partial void OnhorizontalChanging(bool value);
    partial void OnhorizontalChanged();
    partial void OnverticalChanging(bool value);
    partial void OnverticalChanged();
    partial void OnunidadesRentablesChanging(int value);
    partial void OnunidadesRentablesChanged();
    #endregion
		
		public ConstruccionInmueble()
		{
			this._TipoConstruccion = new EntitySet<TipoConstruccion>(new Action<TipoConstruccion>(this.attach_TipoConstruccion), new Action<TipoConstruccion>(this.detach_TipoConstruccion));
			this._InstalacionConstruccion = new EntitySet<InstalacionConstruccion>(new Action<InstalacionConstruccion>(this.attach_InstalacionConstruccion), new Action<InstalacionConstruccion>(this.detach_InstalacionConstruccion));
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idConstruccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idConstruccion
		{
			get
			{
				return this._idConstruccion;
			}
			set
			{
				if ((this._idConstruccion != value))
				{
					this.OnidConstruccionChanging(value);
					this.SendPropertyChanging();
					this._idConstruccion = value;
					this.SendPropertyChanged("idConstruccion");
					this.OnidConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL")]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_idClaseGeneral", DbType="SmallInt NOT NULL")]
		public short idClaseGeneral
		{
			get
			{
				return this._idClaseGeneral;
			}
			set
			{
				if ((this._idClaseGeneral != value))
				{
					this.OnidClaseGeneralChanging(value);
					this.SendPropertyChanging();
					this._idClaseGeneral = value;
					this.SendPropertyChanged("idClaseGeneral");
					this.OnidClaseGeneralChanged();
				}
			}
		}
		
		[Column(Storage="_idConservacionGeneral", DbType="SmallInt NOT NULL")]
		public short idConservacionGeneral
		{
			get
			{
				return this._idConservacionGeneral;
			}
			set
			{
				if ((this._idConservacionGeneral != value))
				{
					this.OnidConservacionGeneralChanging(value);
					this.SendPropertyChanging();
					this._idConservacionGeneral = value;
					this.SendPropertyChanged("idConservacionGeneral");
					this.OnidConservacionGeneralChanged();
				}
			}
		}
		
		[Column(Storage="_idCalidadProyecto", DbType="SmallInt NOT NULL")]
		public short idCalidadProyecto
		{
			get
			{
				return this._idCalidadProyecto;
			}
			set
			{
				if ((this._idCalidadProyecto != value))
				{
					this.OnidCalidadProyectoChanging(value);
					this.SendPropertyChanging();
					this._idCalidadProyecto = value;
					this.SendPropertyChanged("idCalidadProyecto");
					this.OnidCalidadProyectoChanged();
				}
			}
		}
		
		[Column(Storage="_idCondominio", DbType="Int")]
		public System.Nullable<int> idCondominio
		{
			get
			{
				return this._idCondominio;
			}
			set
			{
				if ((this._idCondominio != value))
				{
					this.OnidCondominioChanging(value);
					this.SendPropertyChanging();
					this._idCondominio = value;
					this.SendPropertyChanged("idCondominio");
					this.OnidCondominioChanged();
				}
			}
		}
		
		[Column(Storage="_constructor", DbType="NVarChar(50)")]
		public string constructor
		{
			get
			{
				return this._constructor;
			}
			set
			{
				if ((this._constructor != value))
				{
					this.OnconstructorChanging(value);
					this.SendPropertyChanging();
					this._constructor = value;
					this.SendPropertyChanged("constructor");
					this.OnconstructorChanged();
				}
			}
		}
		
		[Column(Storage="_avanceObraGeneral", DbType="Float NOT NULL")]
		public double avanceObraGeneral
		{
			get
			{
				return this._avanceObraGeneral;
			}
			set
			{
				if ((this._avanceObraGeneral != value))
				{
					this.OnavanceObraGeneralChanging(value);
					this.SendPropertyChanging();
					this._avanceObraGeneral = value;
					this.SendPropertyChanged("avanceObraGeneral");
					this.OnavanceObraGeneralChanged();
				}
			}
		}
		
		[Column(Storage="_nivelesConstruccion", DbType="SmallInt NOT NULL")]
		public short nivelesConstruccion
		{
			get
			{
				return this._nivelesConstruccion;
			}
			set
			{
				if ((this._nivelesConstruccion != value))
				{
					this.OnnivelesConstruccionChanging(value);
					this.SendPropertyChanging();
					this._nivelesConstruccion = value;
					this.SendPropertyChanged("nivelesConstruccion");
					this.OnnivelesConstruccionChanged();
				}
			}
		}
		
		[Column(Storage="_nivelEdificio", DbType="SmallInt NOT NULL")]
		public short nivelEdificio
		{
			get
			{
				return this._nivelEdificio;
			}
			set
			{
				if ((this._nivelEdificio != value))
				{
					this.OnnivelEdificioChanging(value);
					this.SendPropertyChanging();
					this._nivelEdificio = value;
					this.SendPropertyChanged("nivelEdificio");
					this.OnnivelEdificioChanged();
				}
			}
		}
		
		[Column(Storage="_horizontal", DbType="Bit NOT NULL")]
		public bool horizontal
		{
			get
			{
				return this._horizontal;
			}
			set
			{
				if ((this._horizontal != value))
				{
					this.OnhorizontalChanging(value);
					this.SendPropertyChanging();
					this._horizontal = value;
					this.SendPropertyChanged("horizontal");
					this.OnhorizontalChanged();
				}
			}
		}
		
		[Column(Storage="_vertical", DbType="Bit NOT NULL")]
		public bool vertical
		{
			get
			{
				return this._vertical;
			}
			set
			{
				if ((this._vertical != value))
				{
					this.OnverticalChanging(value);
					this.SendPropertyChanging();
					this._vertical = value;
					this.SendPropertyChanged("vertical");
					this.OnverticalChanged();
				}
			}
		}
		
		[Column(Storage="_unidadesRentables", DbType="Int NOT NULL")]
		public int unidadesRentables
		{
			get
			{
				return this._unidadesRentables;
			}
			set
			{
				if ((this._unidadesRentables != value))
				{
					this.OnunidadesRentablesChanging(value);
					this.SendPropertyChanging();
					this._unidadesRentables = value;
					this.SendPropertyChanged("unidadesRentables");
					this.OnunidadesRentablesChanged();
				}
			}
		}
		
		[Association(Name="ConstruccionInmueble_TipoConstruccion", Storage="_TipoConstruccion", ThisKey="idConstruccion", OtherKey="idConstruccion")]
		public EntitySet<TipoConstruccion> TipoConstruccion
		{
			get
			{
				return this._TipoConstruccion;
			}
			set
			{
				this._TipoConstruccion.Assign(value);
			}
		}
		
		[Association(Name="ConstruccionInmueble_InstalacionConstruccion", Storage="_InstalacionConstruccion", ThisKey="idConstruccion", OtherKey="idConstruccion")]
		public EntitySet<InstalacionConstruccion> InstalacionConstruccion
		{
			get
			{
				return this._InstalacionConstruccion;
			}
			set
			{
				this._InstalacionConstruccion.Assign(value);
			}
		}
		
		[Association(Name="Inmueble_ConstruccionInmueble", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true)]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.ConstruccionInmueble = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.ConstruccionInmueble = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TipoConstruccion(TipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.ConstruccionInmueble = this;
		}
		
		private void detach_TipoConstruccion(TipoConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.ConstruccionInmueble = null;
		}
		
		private void attach_InstalacionConstruccion(InstalacionConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.ConstruccionInmueble = this;
		}
		
		private void detach_InstalacionConstruccion(InstalacionConstruccion entity)
		{
			this.SendPropertyChanging();
			entity.ConstruccionInmueble = null;
		}
	}
	
	[Table(Name="dbo.DatoCondominio")]
	public partial class DatoCondominio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCondominio;
		
		private int _idInmueble;
		
		private double _avanceObra;
		
		private int _unidadesNucleo;
		
		private int _unidadesConjunto;
		
		private EntityRef<SuperficiesCondominio> _SuperficiesCondominio;
		
		private EntitySet<AreaComun> _AreaComun;
		
		private EntityRef<Inmueble> _Inmueble;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCondominioChanging(int value);
    partial void OnidCondominioChanged();
    partial void OnidInmuebleChanging(int value);
    partial void OnidInmuebleChanged();
    partial void OnavanceObraChanging(double value);
    partial void OnavanceObraChanged();
    partial void OnunidadesNucleoChanging(int value);
    partial void OnunidadesNucleoChanged();
    partial void OnunidadesConjuntoChanging(int value);
    partial void OnunidadesConjuntoChanged();
    #endregion
		
		public DatoCondominio()
		{
			this._SuperficiesCondominio = default(EntityRef<SuperficiesCondominio>);
			this._AreaComun = new EntitySet<AreaComun>(new Action<AreaComun>(this.attach_AreaComun), new Action<AreaComun>(this.detach_AreaComun));
			this._Inmueble = default(EntityRef<Inmueble>);
			OnCreated();
		}
		
		[Column(Storage="_idCondominio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCondominio
		{
			get
			{
				return this._idCondominio;
			}
			set
			{
				if ((this._idCondominio != value))
				{
					this.OnidCondominioChanging(value);
					this.SendPropertyChanging();
					this._idCondominio = value;
					this.SendPropertyChanged("idCondominio");
					this.OnidCondominioChanged();
				}
			}
		}
		
		[Column(Storage="_idInmueble", DbType="Int NOT NULL")]
		public int idInmueble
		{
			get
			{
				return this._idInmueble;
			}
			set
			{
				if ((this._idInmueble != value))
				{
					if (this._Inmueble.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInmuebleChanging(value);
					this.SendPropertyChanging();
					this._idInmueble = value;
					this.SendPropertyChanged("idInmueble");
					this.OnidInmuebleChanged();
				}
			}
		}
		
		[Column(Storage="_avanceObra", DbType="Float NOT NULL")]
		public double avanceObra
		{
			get
			{
				return this._avanceObra;
			}
			set
			{
				if ((this._avanceObra != value))
				{
					this.OnavanceObraChanging(value);
					this.SendPropertyChanging();
					this._avanceObra = value;
					this.SendPropertyChanged("avanceObra");
					this.OnavanceObraChanged();
				}
			}
		}
		
		[Column(Storage="_unidadesNucleo", DbType="Int NOT NULL")]
		public int unidadesNucleo
		{
			get
			{
				return this._unidadesNucleo;
			}
			set
			{
				if ((this._unidadesNucleo != value))
				{
					this.OnunidadesNucleoChanging(value);
					this.SendPropertyChanging();
					this._unidadesNucleo = value;
					this.SendPropertyChanged("unidadesNucleo");
					this.OnunidadesNucleoChanged();
				}
			}
		}
		
		[Column(Storage="_unidadesConjunto", DbType="Int NOT NULL")]
		public int unidadesConjunto
		{
			get
			{
				return this._unidadesConjunto;
			}
			set
			{
				if ((this._unidadesConjunto != value))
				{
					this.OnunidadesConjuntoChanging(value);
					this.SendPropertyChanging();
					this._unidadesConjunto = value;
					this.SendPropertyChanged("unidadesConjunto");
					this.OnunidadesConjuntoChanged();
				}
			}
		}
		
		[Association(Name="DatoCondominio_SuperficiesCondominio", Storage="_SuperficiesCondominio", ThisKey="idCondominio", OtherKey="idCondominio", IsUnique=true, IsForeignKey=false)]
		public SuperficiesCondominio SuperficiesCondominio
		{
			get
			{
				return this._SuperficiesCondominio.Entity;
			}
			set
			{
				SuperficiesCondominio previousValue = this._SuperficiesCondominio.Entity;
				if (((previousValue != value) 
							|| (this._SuperficiesCondominio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SuperficiesCondominio.Entity = null;
						previousValue.DatoCondominio = null;
					}
					this._SuperficiesCondominio.Entity = value;
					if ((value != null))
					{
						value.DatoCondominio = this;
					}
					this.SendPropertyChanged("SuperficiesCondominio");
				}
			}
		}
		
		[Association(Name="DatoCondominio_AreaComun", Storage="_AreaComun", ThisKey="idCondominio", OtherKey="idCondominio")]
		public EntitySet<AreaComun> AreaComun
		{
			get
			{
				return this._AreaComun;
			}
			set
			{
				this._AreaComun.Assign(value);
			}
		}
		
		[Association(Name="Inmueble_DatoCondominio", Storage="_Inmueble", ThisKey="idInmueble", OtherKey="idInmueble", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Inmueble Inmueble
		{
			get
			{
				return this._Inmueble.Entity;
			}
			set
			{
				Inmueble previousValue = this._Inmueble.Entity;
				if (((previousValue != value) 
							|| (this._Inmueble.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inmueble.Entity = null;
						previousValue.DatoCondominio = null;
					}
					this._Inmueble.Entity = value;
					if ((value != null))
					{
						value.DatoCondominio = this;
						this._idInmueble = value.idInmueble;
					}
					else
					{
						this._idInmueble = default(int);
					}
					this.SendPropertyChanged("Inmueble");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AreaComun(AreaComun entity)
		{
			this.SendPropertyChanging();
			entity.DatoCondominio = this;
		}
		
		private void detach_AreaComun(AreaComun entity)
		{
			this.SendPropertyChanging();
			entity.DatoCondominio = null;
		}
	}
	
	public partial class GenerarIDEResult
	{
		
		private int _Column1;
		
		public GenerarIDEResult()
		{
		}
		
		[Column(Storage="_Column1", DbType="Int NOT NULL")]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
